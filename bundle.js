(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ((function(modules) {
	// Check all modules for deduplicated modules
	for(var i in modules) {
		if(Object.prototype.hasOwnProperty.call(modules, i)) {
			switch(typeof modules[i]) {
			case "function": break;
			case "object":
				// Module can be created from a template
				modules[i] = (function(_m) {
					var args = _m.slice(1), fn = modules[_m[0]];
					return function (a,b,c) {
						fn.apply(this, [a,b,c].concat(args));
					};
				}(modules[i]));
				break;
			default:
				// Module is a copy of another module
				modules[i] = modules[modules[i]];
				break;
			}
		}
	}
	return modules;
}([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(337);
	module.exports = __webpack_require__(305);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(7)
	  , core      = __webpack_require__(49)
	  , hide      = __webpack_require__(29)
	  , redefine  = __webpack_require__(30)
	  , ctx       = __webpack_require__(50)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(38);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var validateFormat = function validateFormat(format) {};
	
	if (true) {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(37);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (true) {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };
	
	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }
	
	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }
	
	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }
	
	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}
	
	module.exports = warning;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(12);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 6 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 7 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	if (true) {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;
	
	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };
	
	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(233)(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = require('./factoryWithThrowingShims')();
	}


/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 11 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(104)('wks')
	  , uid        = __webpack_require__(67)
	  , Symbol     = __webpack_require__(7).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(9)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(5)
	  , IE8_DOM_DEFINE = __webpack_require__(207)
	  , toPrimitive    = __webpack_require__(45)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(14) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var DOMProperty = __webpack_require__(56);
	var ReactDOMComponentFlags = __webpack_require__(239);
	
	var invariant = __webpack_require__(3);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  true ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  true ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var _Mathround=Math.round,_Mathmin=Math.min,_Mathmax=Math.max;(function(d,g){ true?g(exports,__webpack_require__(2),__webpack_require__(91),__webpack_require__(573),__webpack_require__(572)):'function'==typeof define&&define.amd?define(['exports','react','react-dom','react-addons-transition-group','react-addons-css-transition-group'],g):g(d.Reactstrap=d.Reactstrap||{},d.React,d.ReactDOM,d.React.addons.TransitionGroup,d.React.addons.CSSTransitionGroup)})(this,function(d,g,m,h,y){'use strict';function v(){throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs')}function N(Qr,ei){return ei={exports:{}},Qr(ei,ei.exports),ei.exports}function C(Qr){var ei={};return ei='top'===Qr||'top center'===Qr?{attachment:'bottom center',targetAttachment:'top center'}:'bottom'===Qr||'bottom center'===Qr?{attachment:'top center',targetAttachment:'bottom center'}:'left'===Qr||'left center'===Qr?{attachment:'middle right',targetAttachment:'middle left'}:'right'===Qr||'right center'===Qr?{attachment:'middle left',targetAttachment:'middle right'}:'top left'===Qr?{attachment:'bottom left',targetAttachment:'top left'}:'top right'===Qr?{attachment:'bottom right',targetAttachment:'top right'}:'bottom left'===Qr?{attachment:'top left',targetAttachment:'bottom left'}:'bottom right'===Qr?{attachment:'top right',targetAttachment:'bottom right'}:'right top'===Qr?{attachment:'top left',targetAttachment:'top right'}:'right bottom'===Qr?{attachment:'bottom left',targetAttachment:'bottom right'}:'left top'===Qr?{attachment:'top right',targetAttachment:'top left'}:'left bottom'===Qr?{attachment:'bottom right',targetAttachment:'bottom left'}:{attachment:'top center',targetAttachment:'bottom center'},ei}function M(){var Qr=document.createElement('div');Qr.style.position='absolute',Qr.style.top='-9999px',Qr.style.width='50px',Qr.style.height='50px',Qr.style.overflow='scroll',document.body.appendChild(Qr);var ei=Qr.offsetWidth-Qr.clientWidth;return document.body.removeChild(Qr),ei}function _(Qr){document.body.style.paddingRight=0<Qr?Qr+'px':null}function O(){return document.body.clientWidth<window.innerWidth}function E(){return parseInt(window.getComputedStyle(document.body,null).getPropertyValue('padding-right')||0,10)}function P(){var Qr=M(),ei=document.querySelectorAll('.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed')[0],ti=ei?parseInt(ei.style.paddingRight||0,10):0;O()&&_(ti+Qr)}function w(Qr,ei){return ei?Qr.split(' ').map(function(ti){return ei[ti]||ti}).join(' '):Qr}function D(Qr,ei,ti){switch(ti.length){case 0:return Qr.call(ei);case 1:return Qr.call(ei,ti[0]);case 2:return Qr.call(ei,ti[0],ti[1]);case 3:return Qr.call(ei,ti[0],ti[1],ti[2]);}return Qr.apply(ei,ti)}function A(Qr,ei){var ti=Qr?Qr.length:0;return!!ti&&-1<R(Qr,ei,0)}function L(Qr,ei,ti){for(var oi=-1,si=Qr?Qr.length:0;++oi<si;)if(ti(ei,Qr[oi]))return!0;return!1}function S(Qr,ei){for(var ti=-1,oi=Qr?Qr.length:0,si=Array(oi);++ti<oi;)si[ti]=ei(Qr[ti],ti,Qr);return si}function z(Qr,ei){for(var ti=-1,oi=ei.length,si=Qr.length;++ti<oi;)Qr[si+ti]=ei[ti];return Qr}function I(Qr,ei,ti,oi){for(var si=Qr.length,ai=ti+(oi?1:-1);oi?ai--:++ai<si;)if(ei(Qr[ai],ai,Qr))return ai;return-1}function R(Qr,ei,ti){if(ei!==ei)return I(Qr,B,ti);for(var oi=ti-1,si=Qr.length;++oi<si;)if(Qr[oi]===ei)return oi;return-1}function B(Qr){return Qr!==Qr}function W(Qr,ei){for(var ti=-1,oi=Array(Qr);++ti<Qr;)oi[ti]=ei(ti);return oi}function U(Qr){return function(ei){return Qr(ei)}}function H(Qr,ei){return Qr.has(ei)}function q(Qr,ei){return null==Qr?void 0:Qr[ei]}function G(Qr){var ei=!1;if(null!=Qr&&'function'!=typeof Qr.toString)try{ei=!!(Qr+'')}catch(ti){}return ei}function F(Qr,ei){return function(ti){return Qr(ei(ti))}}function V(Qr){var ei=-1,ti=Qr?Qr.length:0;for(this.clear();++ei<ti;){var oi=Qr[ei];this.set(oi[0],oi[1])}}function J(Qr){var ei=-1,ti=Qr?Qr.length:0;for(this.clear();++ei<ti;){var oi=Qr[ei];this.set(oi[0],oi[1])}}function ae(Qr){var ei=-1,ti=Qr?Qr.length:0;for(this.clear();++ei<ti;){var oi=Qr[ei];this.set(oi[0],oi[1])}}function pe(Qr){var ei=-1,ti=Qr?Qr.length:0;for(this.__data__=new ae;++ei<ti;)this.add(Qr[ei])}function ge(Qr,ei){var ti=jo(Qr)||ze(Qr)?W(Qr.length,String):[],oi=ti.length;for(var ai in Qr)(ei||bo.call(Qr,ai))&&!(!!oi&&('length'==ai||Pe(ai,oi)))&&ti.push(ai);return ti}function fe(Qr,ei){for(var ti=Qr.length;ti--;)if(Se(Qr[ti][0],ei))return ti;return-1}function me(Qr,ei,ti,oi){var si=-1,ai=A,ni=!0,li=Qr.length,ri=[],ii=ei.length;if(!li)return ri;ti&&(ei=S(ei,U(ti))),oi?(ai=L,ni=!1):ei.length>=Xt&&(ai=H,ni=!1,ei=new pe(ei));outer:for(;++si<li;){var di=Qr[si],pi=ti?ti(di):di;if(di=oi||0!==di?di:0,ni&&pi===pi){for(var ci=ii;ci--;)if(ei[ci]===pi)continue outer;ri.push(di)}else ai(ei,pi,oi)||ri.push(di)}return ri}function he(Qr,ei,ti,oi,si){var ai=-1,ni=Qr.length;for(ti||(ti=Ee),si||(si=[]);++ai<ni;){var li=Qr[ai];0<ei&&ti(li)?1<ei?he(li,ei-1,ti,oi,si):z(si,li):!oi&&(si[si.length]=li)}return si}function be(Qr,ei,ti){var oi=ei(Qr);return jo(Qr)?oi:z(oi,ti(Qr))}function ye(Qr){if(!Ue(Qr)||xe(Qr))return!1;var ei=Be(Qr)||G(Qr)?vo:no;return ei.test(Le(Qr))}function ve(Qr){if(!Ue(Qr))return De(Qr);var ei=je(Qr),ti=[];for(var oi in Qr)('constructor'!=oi||!ei&&bo.call(Qr,oi))&&ti.push(oi);return ti}function Te(Qr,ei){return Qr=Object(Qr),Ne(Qr,ei,function(ti,oi){return oi in Qr})}function Ne(Qr,ei,ti){for(var oi=-1,si=ei.length,ai={};++oi<si;){var ni=ei[oi],li=Qr[ni];ti(li,ni)&&(ai[ni]=li)}return ai}function Ce(Qr){return be(Qr,Ge,xo)}function Me(Qr,ei){var ti=Qr.__data__;return we(ei)?ti['string'==typeof ei?'string':'hash']:ti.map}function Oe(Qr,ei){var ti=q(Qr,ei);return ye(ti)?ti:void 0}function Ee(Qr){return jo(Qr)||ze(Qr)||!!(Mo&&Qr&&Qr[Mo])}function Pe(Qr,ei){return ei=null==ei?Jt:ei,!!ei&&('number'==typeof Qr||lo.test(Qr))&&-1<Qr&&0==Qr%1&&Qr<ei}function we(Qr){var ei='undefined'==typeof Qr?'undefined':et(Qr);return'string'==ei||'number'==ei||'symbol'==ei||'boolean'==ei?'__proto__'!==Qr:null===Qr}function xe(Qr){return!!mo&&mo in Qr}function je(Qr){var ei=Qr&&Qr.constructor,ti='function'==typeof ei&&ei.prototype||go;return Qr===ti}function De(Qr){var ei=[];if(null!=Qr)for(var ti in Object(Qr))ei.push(ti);return ei}function Ae(Qr){if('string'==typeof Qr||qe(Qr))return Qr;var ei=Qr+'';return'0'==ei&&1/Qr==-Zt?'-0':ei}function Le(Qr){if(null!=Qr){try{return ho.call(Qr)}catch(ei){}try{return Qr+''}catch(ei){}}return''}function Se(Qr,ei){return Qr===ei||Qr!==Qr&&ei!==ei}function ze(Qr){return Re(Qr)&&bo.call(Qr,'callee')&&(!ko.call(Qr,'callee')||yo.call(Qr)==Qt)}function Ie(Qr){return null!=Qr&&We(Qr.length)&&!Be(Qr)}function Re(Qr){return He(Qr)&&Ie(Qr)}function Be(Qr){var ei=Ue(Qr)?yo.call(Qr):'';return ei==eo||ei==oo}function We(Qr){return'number'==typeof Qr&&-1<Qr&&0==Qr%1&&Qr<=Jt}function Ue(Qr){var ei='undefined'==typeof Qr?'undefined':et(Qr);return!!Qr&&('object'==ei||'function'==ei)}function He(Qr){return!!Qr&&'object'==('undefined'==typeof Qr?'undefined':et(Qr))}function qe(Qr){return'symbol'==('undefined'==typeof Qr?'undefined':et(Qr))||He(Qr)&&yo.call(Qr)==so}function Ge(Qr){return Ie(Qr)?ge(Qr,!0):ve(Qr)}function Fe(){return[]}function Ye(Qr){var ei='undefined'==typeof Qr?'undefined':et(Qr);return!!Qr&&('object'==ei||'function'==ei)}function $e(Qr){var ei='undefined'==typeof Qr?'undefined':et(Qr);return!!Qr&&('object'==ei||'function'==ei)}function Xe(Qr){return!!Qr&&'object'==('undefined'==typeof Qr?'undefined':et(Qr))}function Ke(Qr){return'symbol'==('undefined'==typeof Qr?'undefined':et(Qr))||Xe(Qr)&&Tn.call(Qr)==un}function Je(Qr,ei){var ti=Qr.className,oi=Qr.cssModule,si=Qr.tabId,ai=Qr.tag,ni=lt(Qr,['className','cssModule','tabId','tag']),li=w(it('tab-pane',ti,{active:si===ei.activeTabId}),oi);return g.createElement(ai,at({},ni,{className:li}))}g='default'in g?g['default']:g,m='default'in m?m['default']:m,h='default'in h?h['default']:h,y='default'in y?y['default']:y;var Qe='undefined'==typeof window?'undefined'==typeof global?'undefined'==typeof self?{}:self:global:window,et='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(Qr){return typeof Qr}:function(Qr){return Qr&&'function'==typeof Symbol&&Qr.constructor===Symbol&&Qr!==Symbol.prototype?'symbol':typeof Qr},tt=function(Qr,ei){if(!(Qr instanceof ei))throw new TypeError('Cannot call a class as a function')},ot=function(){function Qr(ei,ti){for(var si,oi=0;oi<ti.length;oi++)si=ti[oi],si.enumerable=si.enumerable||!1,si.configurable=!0,'value'in si&&(si.writable=!0),Object.defineProperty(ei,si.key,si)}return function(ei,ti,oi){return ti&&Qr(ei.prototype,ti),oi&&Qr(ei,oi),ei}}(),st=function(Qr,ei,ti){return ei in Qr?Object.defineProperty(Qr,ei,{value:ti,enumerable:!0,configurable:!0,writable:!0}):Qr[ei]=ti,Qr},at=Object.assign||function(Qr){for(var ti,ei=1;ei<arguments.length;ei++)for(var oi in ti=arguments[ei],ti)Object.prototype.hasOwnProperty.call(ti,oi)&&(Qr[oi]=ti[oi]);return Qr},nt=function(Qr,ei){if('function'!=typeof ei&&null!==ei)throw new TypeError('Super expression must either be null or a function, not '+typeof ei);Qr.prototype=Object.create(ei&&ei.prototype,{constructor:{value:Qr,enumerable:!1,writable:!0,configurable:!0}}),ei&&(Object.setPrototypeOf?Object.setPrototypeOf(Qr,ei):Qr.__proto__=ei)},lt=function(Qr,ei){var ti={};for(var oi in Qr)0<=ei.indexOf(oi)||Object.prototype.hasOwnProperty.call(Qr,oi)&&(ti[oi]=Qr[oi]);return ti},rt=function(Qr,ei){if(!Qr)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return ei&&('object'==typeof ei||'function'==typeof ei)?ei:Qr},it=N(function(Qr){(function(){'use strict';function ei(){for(var ai,oi=[],si=0;si<arguments.length;si++)if(ai=arguments[si],ai){var ni='undefined'==typeof ai?'undefined':et(ai);if('string'===ni||'number'===ni)oi.push(ai);else if(Array.isArray(ai))oi.push(ei.apply(null,ai));else if('object'===ni)for(var li in ai)ti.call(ai,li)&&ai[li]&&oi.push(li)}return oi.join(' ')}var ti={}.hasOwnProperty;Qr.exports?Qr.exports=ei:window.classNames=ei})()}),dt=['top','bottom','left','right','top left','top center','top right','right top','right middle','right bottom','bottom right','bottom center','bottom left','left top','left middle','left bottom'],pt=g.PropTypes,ct={tag:pt.oneOfType([pt.func,pt.string]),fluid:pt.bool,className:pt.string,cssModule:pt.object},gt=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.fluid,ai=ei.tag,ni=lt(ei,['className','cssModule','fluid','tag']),li=w(it(ti,si?'container-fluid':'container'),oi);return g.createElement(ai,at({},ni,{className:li}))};gt.propTypes=ct,gt.defaultProps={tag:'div'};var ft=g.PropTypes,mt={tag:ft.oneOfType([ft.func,ft.string]),noGutters:ft.bool,className:ft.string,cssModule:ft.object},bt=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.noGutters,ai=ei.tag,ni=lt(ei,['className','cssModule','noGutters','tag']),li=w(it(ti,si?'no-gutters':null,'row'),oi);return g.createElement(ai,at({},ni,{className:li}))};bt.propTypes=mt,bt.defaultProps={tag:'div'};var yt=function(Qr){var ei='undefined'==typeof Qr?'undefined':et(Qr);return!!Qr&&('object'==ei||'function'==ei)},vt=g.PropTypes,Nt=vt.oneOfType([vt.number,vt.string]),kt=vt.oneOfType([vt.bool,vt.number,vt.string,vt.shape({size:vt.oneOfType([vt.bool,vt.number,vt.string]),push:Nt,pull:Nt,offset:Nt})]),Ct={tag:vt.oneOfType([vt.func,vt.string]),xs:kt,sm:kt,md:kt,lg:kt,xl:kt,className:vt.string,cssModule:vt.object,widths:vt.array},_t=function(ei,ti,oi){if(!0===oi||''===oi)return ei?'col':'col-'+ti;return'auto'===oi?ei?'col-auto':'col-'+ti+'-auto':ei?'col-'+oi:'col-'+ti+'-'+oi},Ot=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.widths,ai=ei.tag,ni=lt(ei,['className','cssModule','widths','tag']),li=[];si.forEach(function(ii,di){var pi=ei[ii];if(di||void 0!==pi||(pi=!0),delete ni[ii],!!pi){var ui,ci=!di;if(yt(pi)){var gi,fi=ci?'-':'-'+ii+'-';ui=_t(ci,ii,pi.size),li.push(w(it((gi={},st(gi,ui,pi.size||''===pi.size),st(gi,'push'+fi+pi.push,pi.push||0===pi.push),st(gi,'pull'+fi+pi.pull,pi.pull||0===pi.pull),st(gi,'offset'+fi+pi.offset,pi.offset||0===pi.offset),gi))),oi)}else ui=_t(ci,ii,pi),li.push(ui)}});var ri=w(it(ti,li),oi);return g.createElement(ai,at({},ni,{className:ri}))};Ot.propTypes=Ct,Ot.defaultProps={tag:'div',widths:['xs','sm','md','lg','xl']};var Et=g.PropTypes,Pt={light:Et.bool,inverse:Et.bool,full:Et.bool,fixed:Et.string,sticky:Et.string,color:Et.string,role:Et.string,tag:Et.oneOfType([Et.func,Et.string]),className:Et.string,cssModule:Et.object,toggleable:Et.oneOfType([Et.bool,Et.string])},xt=function(ei){if(!1===ei)return!1;return!0===ei||'xs'===ei?'navbar-toggleable':'navbar-toggleable-'+ei},jt=function(ei){var ti,oi=ei.toggleable,si=ei.className,ai=ei.cssModule,ni=ei.light,li=ei.inverse,ri=ei.full,ii=ei.fixed,di=ei.sticky,pi=ei.color,ci=ei.tag,ui=lt(ei,['toggleable','className','cssModule','light','inverse','full','fixed','sticky','color','tag']),gi=w(it(si,'navbar',xt(oi),(ti={'navbar-light':ni,'navbar-inverse':li},st(ti,'bg-'+pi,pi),st(ti,'navbar-full',ri),st(ti,'fixed-'+ii,ii),st(ti,'sticky-'+di,di),ti)),ai);return g.createElement(ci,at({},ui,{className:gi}))};jt.propTypes=Pt,jt.defaultProps={tag:'nav',role:'navigation',toggleable:!1};var Dt=g.PropTypes,At={tag:Dt.oneOfType([Dt.func,Dt.string]),className:Dt.string,cssModule:Dt.object},St=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'navbar-brand'),oi);return g.createElement(si,at({},ai,{className:ni}))};St.propTypes=At,St.defaultProps={tag:'a'};var zt=g.PropTypes,It={tag:zt.oneOfType([zt.func,zt.string]),type:zt.string,className:zt.string,cssModule:zt.object,children:zt.node,right:zt.bool,left:zt.bool},Bt=g.createElement('span',{className:'navbar-toggler-icon'}),Wt=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.children,ai=ei.right,ni=ei.left,li=ei.tag,ri=lt(ei,['className','cssModule','children','right','left','tag']),ii=w(it(ti,'navbar-toggler',ai&&'navbar-toggler-right',ni&&'navbar-toggler-left'),oi);return g.createElement(li,at({},ri,{className:ii}),si||Bt)};Wt.propTypes=It,Wt.defaultProps={tag:'button',type:'button'};var Ut=g.PropTypes,Ht={tabs:Ut.bool,pills:Ut.bool,vertical:Ut.bool,navbar:Ut.bool,tag:Ut.oneOfType([Ut.func,Ut.string]),className:Ut.string,cssModule:Ut.object},Gt=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tabs,ai=ei.pills,ni=ei.vertical,li=ei.navbar,ri=ei.tag,ii=lt(ei,['className','cssModule','tabs','pills','vertical','navbar','tag']),di=w(it(ti,li?'navbar-nav':'nav',{'nav-tabs':si,'nav-pills':ai,'flex-column':ni}),oi);return g.createElement(ri,at({},ii,{className:di}))};Gt.propTypes=Ht,Gt.defaultProps={tag:'ul'};var Ft=g.PropTypes,Vt={tag:Ft.oneOfType([Ft.func,Ft.string]),className:Ft.string,cssModule:Ft.object},$t=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'nav-item'),oi);return g.createElement(si,at({},ai,{className:ni}))};$t.propTypes=Vt,$t.defaultProps={tag:'li'};var Xt=200,Kt='__lodash_hash_undefined__',Zt=1/0,Jt=9007199254740991,Qt='[object Arguments]',eo='[object Function]',oo='[object GeneratorFunction]',so='[object Symbol]',ao=/[\\^$.*+?()[\]{}|]/g,no=/^\[object .+?Constructor\]$/,lo=/^(?:0|[1-9]\d*)$/,ro='object'==et(Qe)&&Qe&&Qe.Object===Object&&Qe,io='object'==('undefined'==typeof self?'undefined':et(self))&&self&&self.Object===Object&&self,po=ro||io||Function('return this')(),co=Array.prototype,uo=Function.prototype,go=Object.prototype,fo=po['__core-js_shared__'],mo=function(){var Qr=/[^.]+$/.exec(fo&&fo.keys&&fo.keys.IE_PROTO||'');return Qr?'Symbol(src)_1.'+Qr:''}(),ho=uo.toString,bo=go.hasOwnProperty,yo=go.toString,vo=RegExp('^'+ho.call(bo).replace(ao,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$'),To=po.Symbol,No=F(Object.getPrototypeOf,Object),ko=go.propertyIsEnumerable,Co=co.splice,Mo=To?To.isConcatSpreadable:void 0,_o=Object.getOwnPropertySymbols,Oo=_Mathmax,Eo=Oe(po,'Map'),Po=Oe(Object,'create');V.prototype.clear=function(){this.__data__=Po?Po(null):{}},V.prototype['delete']=function(Qr){return this.has(Qr)&&delete this.__data__[Qr]},V.prototype.get=function(Qr){var ei=this.__data__;if(Po){var ti=ei[Qr];return ti===Kt?void 0:ti}return bo.call(ei,Qr)?ei[Qr]:void 0},V.prototype.has=function(Qr){var ei=this.__data__;return Po?ei[Qr]!==void 0:bo.call(ei,Qr)},V.prototype.set=function(Qr,ei){var ti=this.__data__;return ti[Qr]=Po&&void 0===ei?Kt:ei,this},J.prototype.clear=function(){this.__data__=[]},J.prototype['delete']=function(Qr){var ei=this.__data__,ti=fe(ei,Qr);if(0>ti)return!1;var oi=ei.length-1;return ti==oi?ei.pop():Co.call(ei,ti,1),!0},J.prototype.get=function(Qr){var ei=this.__data__,ti=fe(ei,Qr);return 0>ti?void 0:ei[ti][1]},J.prototype.has=function(Qr){return-1<fe(this.__data__,Qr)},J.prototype.set=function(Qr,ei){var ti=this.__data__,oi=fe(ti,Qr);return 0>oi?ti.push([Qr,ei]):ti[oi][1]=ei,this},ae.prototype.clear=function(){this.__data__={hash:new V,map:new(Eo||J),string:new V}},ae.prototype['delete']=function(Qr){return Me(this,Qr)['delete'](Qr)},ae.prototype.get=function(Qr){return Me(this,Qr).get(Qr)},ae.prototype.has=function(Qr){return Me(this,Qr).has(Qr)},ae.prototype.set=function(Qr,ei){return Me(this,Qr).set(Qr,ei),this},pe.prototype.add=pe.prototype.push=function(Qr){return this.__data__.set(Qr,Kt),this},pe.prototype.has=function(Qr){return this.__data__.has(Qr)};var wo=_o?F(_o,Object):Fe,xo=_o?function(Qr){for(var ei=[];Qr;)z(ei,wo(Qr)),Qr=No(Qr);return ei}:Fe,jo=Array.isArray,Do=function(Qr,ei){return ei=Oo(void 0===ei?Qr.length-1:ei,0),function(){for(var ti=arguments,oi=-1,si=Oo(ti.length-ei,0),ai=Array(si);++oi<si;)ai[oi]=ti[ei+oi];oi=-1;for(var ni=Array(ei+1);++oi<ei;)ni[oi]=ti[oi];return ni[ei]=ai,D(Qr,this,ni)}}(function(Qr,ei){return null==Qr?{}:(ei=S(he(ei,1),Ae),Te(Qr,me(Ce(Qr),ei)))}),Ao=Do,zo=Object.prototype,Io=zo.toString,Ro=function(Qr){var ei=Ye(Qr)?Io.call(Qr):'';return ei=='[object Function]'||ei=='[object GeneratorFunction]'},Bo=N(function(Qr){(function(ti){Qr.exports=ti()})(function(){return function ai(ni,li,ri){function ii(ci,ui){if(!li[ci]){if(!ni[ci]){var gi='function'==typeof v&&v;if(!ui&&gi)return gi(ci,!0);if(di)return di(ci,!0);var fi=new Error('Cannot find module \''+ci+'\'');throw fi.code='MODULE_NOT_FOUND',fi}var mi=li[ci]={exports:{}};ni[ci][0].call(mi.exports,function(hi){var bi=ni[ci][1][hi];return ii(bi?bi:hi)},mi,mi.exports,ai,ni,li,ri)}return li[ci].exports}for(var di='function'==typeof v&&v,pi=0;pi<ri.length;pi++)ii(ri[pi]);return ii}({1:[function(ai){'use strict';var ii=ai('./utils'),di=function(fi){return fi&&fi.__esModule?fi:{'default':fi}}(ii),pi=di['default'].Utils,ci=pi.getBounds,ui=pi.updateClasses,gi=pi.defer;di['default'].modules.push({position:function(mi){var hi=this,bi=mi.top,yi=mi.left,vi=this.cache('element-bounds',function(){return ci(hi.element)}),Ti=vi.height,Ni=vi.width,ki=this.getTargetBounds(),Ci=bi+Ti,Mi=yi+Ni,Oi=[];bi<=ki.bottom&&Ci>=ki.top&&['left','right'].forEach(function(xi){var ji=ki[xi];(ji===yi||ji===Mi)&&Oi.push(xi)}),yi<=ki.right&&Mi>=ki.left&&['top','bottom'].forEach(function(xi){var ji=ki[xi];(ji===bi||ji===Ci)&&Oi.push(xi)});var Ei=[],Pi=[];return Ei.push(this.getClass('abutted')),['left','top','right','bottom'].forEach(function(xi){Ei.push(hi.getClass('abutted')+'-'+xi)}),Oi.length&&Pi.push(this.getClass('abutted')),Oi.forEach(function(xi){Pi.push(hi.getClass('abutted')+'-'+xi)}),gi(function(){!1===hi.options.addTargetClasses||ui(hi.target,Pi,Ei),ui(hi.element,Pi,Ei)}),!0}})},{'./utils':5}],2:[function(ai){'use strict';function ii(yi,vi){return'scrollParent'===vi?vi=yi.scrollParents[0]:'window'===vi&&(vi=[pageXOffset,pageYOffset,innerWidth+pageXOffset,innerHeight+pageYOffset]),vi===document&&(vi=vi.documentElement),'undefined'!=typeof vi.nodeType&&function(){var Ti=vi,Ni=gi(vi),ki=Ni,Ci=getComputedStyle(vi);if(vi=[ki.left,ki.top,Ni.width+ki.left,Ni.height+ki.top],Ti.ownerDocument!==document){var Mi=Ti.ownerDocument.defaultView;vi[0]+=Mi.pageXOffset,vi[1]+=Mi.pageYOffset,vi[2]+=Mi.pageXOffset,vi[3]+=Mi.pageYOffset}bi.forEach(function(Oi,Ei){Oi=Oi[0].toUpperCase()+Oi.substr(1),'Top'===Oi||'Left'===Oi?vi[Ei]+=parseFloat(Ci['border'+Oi+'Width']):vi[Ei]-=parseFloat(Ci['border'+Oi+'Width'])})}(),vi}var di=function(){function yi(vi,Ti){var Ni=[],ki=!0,Ci=!1,Mi;try{for(var Ei,Oi=vi[Symbol.iterator]();!(ki=(Ei=Oi.next()).done)&&(Ni.push(Ei.value),!(Ti&&Ni.length===Ti));ki=!0);}catch(Pi){Ci=!0,Mi=Pi}finally{try{!ki&&Oi['return']&&Oi['return']()}finally{if(Ci)throw Mi}}return Ni}return function(vi,Ti){if(Array.isArray(vi))return vi;if(Symbol.iterator in Object(vi))return yi(vi,Ti);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}(),pi=ai('./utils'),ci=function(yi){return yi&&yi.__esModule?yi:{'default':yi}}(pi),ui=ci['default'].Utils,gi=ui.getBounds,fi=ui.extend,mi=ui.updateClasses,hi=ui.defer,bi=['left','top','right','bottom'];ci['default'].modules.push({position:function(vi){var Ti=this,Ni=vi.top,ki=vi.left,Ci=vi.targetAttachment;if(!this.options.constraints)return!0;var Mi=this.cache('element-bounds',function(){return gi(Ti.element)}),Oi=Mi.height,Ei=Mi.width;if(0===Ei&&0===Oi&&'undefined'!=typeof this.lastSize){var Pi=this.lastSize;Ei=Pi.width,Oi=Pi.height}var wi=this.cache('target-bounds',function(){return Ti.getTargetBounds()}),xi=wi.height,ji=wi.width,Di=[this.getClass('pinned'),this.getClass('out-of-bounds')];this.options.constraints.forEach(function(zi){var Ii=zi.outOfBoundsClass,Ri=zi.pinnedClass;Ii&&Di.push(Ii),Ri&&Di.push(Ri)}),Di.forEach(function(zi){['left','top','right','bottom'].forEach(function(Ii){Di.push(zi+'-'+Ii)})});var Ai=[],Li=fi({},Ci),Si=fi({},this.attachment);return this.options.constraints.forEach(function(zi){var Ii=zi.to,Ri=zi.attachment,Bi=zi.pin;'undefined'==typeof Ri&&(Ri='');var Wi,Ui;if(0<=Ri.indexOf(' ')){var Hi=Ri.split(' '),qi=di(Hi,2);Ui=qi[0],Wi=qi[1]}else Wi=Ui=Ri;var Gi=ii(Ti,Ii);('target'===Ui||'both'===Ui)&&(Ni<Gi[1]&&'top'===Li.top&&(Ni+=xi,Li.top='bottom'),Ni+Oi>Gi[3]&&'bottom'===Li.top&&(Ni-=xi,Li.top='top')),'together'===Ui&&('top'===Li.top&&('bottom'===Si.top&&Ni<Gi[1]?(Ni+=xi,Li.top='bottom',Ni+=Oi,Si.top='top'):'top'===Si.top&&Ni+Oi>Gi[3]&&Ni-(Oi-xi)>=Gi[1]&&(Ni-=Oi-xi,Li.top='bottom',Si.top='bottom')),'bottom'===Li.top&&('top'===Si.top&&Ni+Oi>Gi[3]?(Ni-=xi,Li.top='top',Ni-=Oi,Si.top='bottom'):'bottom'===Si.top&&Ni<Gi[1]&&Ni+(2*Oi-xi)<=Gi[3]&&(Ni+=Oi-xi,Li.top='top',Si.top='top')),'middle'===Li.top&&(Ni+Oi>Gi[3]&&'top'===Si.top?(Ni-=Oi,Si.top='bottom'):Ni<Gi[1]&&'bottom'===Si.top&&(Ni+=Oi,Si.top='top'))),('target'===Wi||'both'===Wi)&&(ki<Gi[0]&&'left'===Li.left&&(ki+=ji,Li.left='right'),ki+Ei>Gi[2]&&'right'===Li.left&&(ki-=ji,Li.left='left')),'together'===Wi&&(ki<Gi[0]&&'left'===Li.left?'right'===Si.left?(ki+=ji,Li.left='right',ki+=Ei,Si.left='left'):'left'===Si.left&&(ki+=ji,Li.left='right',ki-=Ei,Si.left='right'):ki+Ei>Gi[2]&&'right'===Li.left?'left'===Si.left?(ki-=ji,Li.left='left',ki-=Ei,Si.left='right'):'right'===Si.left&&(ki-=ji,Li.left='left',ki+=Ei,Si.left='left'):'center'===Li.left&&(ki+Ei>Gi[2]&&'left'===Si.left?(ki-=Ei,Si.left='right'):ki<Gi[0]&&'right'===Si.left&&(ki+=Ei,Si.left='left'))),('element'===Ui||'both'===Ui)&&(Ni<Gi[1]&&'bottom'===Si.top&&(Ni+=Oi,Si.top='top'),Ni+Oi>Gi[3]&&'top'===Si.top&&(Ni-=Oi,Si.top='bottom')),('element'===Wi||'both'===Wi)&&(ki<Gi[0]&&('right'===Si.left?(ki+=Ei,Si.left='left'):'center'===Si.left&&(ki+=Ei/2,Si.left='left')),ki+Ei>Gi[2]&&('left'===Si.left?(ki-=Ei,Si.left='right'):'center'===Si.left&&(ki-=Ei/2,Si.left='right'))),'string'==typeof Bi?Bi=Bi.split(',').map(function(Yi){return Yi.trim()}):!0===Bi&&(Bi=['top','left','right','bottom']),Bi=Bi||[];var Fi=[],Vi=[];Ni<Gi[1]&&(0<=Bi.indexOf('top')?(Ni=Gi[1],Fi.push('top')):Vi.push('top')),Ni+Oi>Gi[3]&&(0<=Bi.indexOf('bottom')?(Ni=Gi[3]-Oi,Fi.push('bottom')):Vi.push('bottom')),ki<Gi[0]&&(0<=Bi.indexOf('left')?(ki=Gi[0],Fi.push('left')):Vi.push('left')),ki+Ei>Gi[2]&&(0<=Bi.indexOf('right')?(ki=Gi[2]-Ei,Fi.push('right')):Vi.push('right')),Fi.length&&function(){var Yi;Yi='undefined'==typeof Ti.options.pinnedClass?Ti.getClass('pinned'):Ti.options.pinnedClass,Ai.push(Yi),Fi.forEach(function($i){Ai.push(Yi+'-'+$i)})}(),Vi.length&&function(){var Yi;Yi='undefined'==typeof Ti.options.outOfBoundsClass?Ti.getClass('out-of-bounds'):Ti.options.outOfBoundsClass,Ai.push(Yi),Vi.forEach(function($i){Ai.push(Yi+'-'+$i)})}(),(0<=Fi.indexOf('left')||0<=Fi.indexOf('right'))&&(Si.left=Li.left=!1),(0<=Fi.indexOf('top')||0<=Fi.indexOf('bottom'))&&(Si.top=Li.top=!1),(Li.top!==Ci.top||Li.left!==Ci.left||Si.top!==Ti.attachment.top||Si.left!==Ti.attachment.left)&&(Ti.updateAttachClasses(Si,Li),Ti.trigger('update',{attachment:Si,targetAttachment:Li}))}),hi(function(){!1===Ti.options.addTargetClasses||mi(Ti.target,Ai,Di),mi(Ti.element,Ai,Di)}),{top:Ni,left:ki}}})},{'./utils':5}],3:[function(ai){'use strict';var ii=function(){function ci(ui,gi){var fi=[],mi=!0,hi=!1,bi;try{for(var vi,yi=ui[Symbol.iterator]();!(mi=(vi=yi.next()).done)&&(fi.push(vi.value),!(gi&&fi.length===gi));mi=!0);}catch(Ti){hi=!0,bi=Ti}finally{try{!mi&&yi['return']&&yi['return']()}finally{if(hi)throw bi}}return fi}return function(ui,gi){if(Array.isArray(ui))return ui;if(Symbol.iterator in Object(ui))return ci(ui,gi);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}(),di=ai('./utils'),pi=function(ci){return ci&&ci.__esModule?ci:{'default':ci}}(di);pi['default'].modules.push({position:function(ui){var gi=ui.top,fi=ui.left;if(this.options.shift){var mi=this.options.shift;'function'==typeof this.options.shift&&(mi=this.options.shift.call(this,{top:gi,left:fi}));var hi,bi;if('string'==typeof mi){mi=mi.split(' '),mi[1]=mi[1]||mi[0];var yi=mi,vi=ii(yi,2);hi=vi[0],bi=vi[1],hi=parseFloat(hi,10),bi=parseFloat(bi,10)}else hi=mi.top,bi=mi.left;return gi+=hi,fi+=bi,{top:gi,left:fi}}}})},{'./utils':5}],4:[function(ai,ni,li){'use strict';function ii(Fi,Vi){if(!(Fi instanceof Vi))throw new TypeError('Cannot call a class as a function')}function di(Fi,Vi){if('function'!=typeof Vi&&null!==Vi)throw new TypeError('Super expression must either be null or a function, not '+('undefined'==typeof Vi?'undefined':et(Vi)));Fi.prototype=Object.create(Vi&&Vi.prototype,{constructor:{value:Fi,enumerable:!1,writable:!0,configurable:!0}}),Vi&&(Object.setPrototypeOf?Object.setPrototypeOf(Fi,Vi):Fi.__proto__=Vi)}function pi(Fi,Vi){var Yi=2>=arguments.length||arguments[2]===void 0?1:arguments[2];return Fi+Yi>=Vi&&Vi>=Fi-Yi}function ci(){return'undefined'!=typeof performance&&'undefined'!=typeof performance.now?performance.now():+new Date}function ui(){for(var Fi={top:0,left:0},Vi=arguments.length,Yi=Array(Vi),$i=0;$i<Vi;$i++)Yi[$i]=arguments[$i];return Yi.forEach(function(Xi){var Ki=Xi.top,Zi=Xi.left;'string'==typeof Ki&&(Ki=parseFloat(Ki,10)),'string'==typeof Zi&&(Zi=parseFloat(Zi,10)),Fi.top+=Ki,Fi.left+=Zi}),Fi}function gi(Fi,Vi){return'string'==typeof Fi.left&&-1!==Fi.left.indexOf('%')&&(Fi.left=parseFloat(Fi.left,10)/100*Vi.width),'string'==typeof Fi.top&&-1!==Fi.top.indexOf('%')&&(Fi.top=parseFloat(Fi.top,10)/100*Vi.height),Fi}Object.defineProperty(li,'__esModule',{value:!0});var fi=function(){function Fi(Vi,Yi){var $i=[],Xi=!0,Ki=!1,Zi;try{for(var Qi,Ji=Vi[Symbol.iterator]();!(Xi=(Qi=Ji.next()).done)&&($i.push(Qi.value),!(Yi&&$i.length===Yi));Xi=!0);}catch(ed){Ki=!0,Zi=ed}finally{try{!Xi&&Ji['return']&&Ji['return']()}finally{if(Ki)throw Zi}}return $i}return function(Vi,Yi){if(Array.isArray(Vi))return Vi;if(Symbol.iterator in Object(Vi))return Fi(Vi,Yi);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}(),mi=function(){function Fi(Vi,Yi){for(var Xi,$i=0;$i<Yi.length;$i++)Xi=Yi[$i],Xi.enumerable=Xi.enumerable||!1,Xi.configurable=!0,'value'in Xi&&(Xi.writable=!0),Object.defineProperty(Vi,Xi.key,Xi)}return function(Vi,Yi,$i){return Yi&&Fi(Vi.prototype,Yi),$i&&Fi(Vi,$i),Vi}}(),hi=function(Vi,Yi,$i){var Xi=!0;_function:for(;Xi;){var Ki=Vi,Zi=Yi,Ji=$i;Xi=!1,null===Ki&&(Ki=Function.prototype);var Qi=Object.getOwnPropertyDescriptor(Ki,Zi);if(Qi===void 0){var ed=Object.getPrototypeOf(Ki);if(null===ed)return;Vi=ed,Yi=Zi,$i=Ji,Xi=!0,Qi=ed=void 0;continue _function}else{if('value'in Qi)return Qi.value;var td=Qi.get;return void 0===td?void 0:td.call(Ji)}}},bi=ai('./utils'),yi=function(Fi){return Fi&&Fi.__esModule?Fi:{'default':Fi}}(bi);ai('./constraint'),ai('./abutment'),ai('./shift');var vi=yi['default'].Utils,Ti=vi.getScrollParents,Ni=vi.getBounds,ki=vi.getOffsetParent,Ci=vi.extend,Mi=vi.addClass,Oi=vi.removeClass,Ei=vi.updateClasses,Pi=vi.defer,wi=vi.flush,xi=vi.getScrollBarSize,ji=vi.removeUtilElements,Di=vi.Evented,Ai=function(){if('undefined'==typeof document)return'';for(var $i,Fi=document.createElement('div'),Vi=['transform','WebkitTransform','OTransform','MozTransform','msTransform'],Yi=0;Yi<Vi.length;++Yi)if($i=Vi[Yi],void 0!==Fi.style[$i])return $i}(),Li=[],Si=function(){Li.forEach(function(Vi){Vi.position(!1)}),wi()};(function(){var Fi=null,Vi=null,Yi=null,$i=function Xi(){return'undefined'!=typeof Vi&&16<Vi?(Vi=_Mathmin(Vi-16,250),void(Yi=setTimeout(Xi,250))):void('undefined'!=typeof Fi&&10>ci()-Fi||(null!=Yi&&(clearTimeout(Yi),Yi=null),Fi=ci(),Si(),Vi=ci()-Fi))};'undefined'!=typeof window&&'undefined'!=typeof window.addEventListener&&['resize','scroll','touchmove'].forEach(function(Xi){window.addEventListener(Xi,$i)})})();var zi={center:'center',left:'right',right:'left'},Ii={middle:'middle',top:'bottom',bottom:'top'},Ri={top:0,left:0,middle:'50%',center:'50%',bottom:'100%',right:'100%'},Bi=function(Vi,Yi){var $i=Vi.left,Xi=Vi.top;return'auto'===$i&&($i=zi[Yi.left]),'auto'===Xi&&(Xi=Ii[Yi.top]),{left:$i,top:Xi}},Wi=function(Vi){var Yi=Vi.left,$i=Vi.top;return'undefined'!=typeof Ri[Vi.left]&&(Yi=Ri[Vi.left]),'undefined'!=typeof Ri[Vi.top]&&($i=Ri[Vi.top]),{left:Yi,top:$i}},Ui=function(Vi){var Yi=Vi.split(' '),$i=fi(Yi,2),Xi=$i[0],Ki=$i[1];return{top:Xi,left:Ki}},Hi=Ui,qi=function(Fi){function Vi(Yi){var $i=this;ii(this,Vi),hi(Object.getPrototypeOf(Vi.prototype),'constructor',this).call(this),this.position=this.position.bind(this),Li.push(this),this.history=[],this.setOptions(Yi,!1),yi['default'].modules.forEach(function(Xi){'undefined'!=typeof Xi.initialize&&Xi.initialize.call($i)}),this.position()}return di(Vi,Fi),mi(Vi,[{key:'getClass',value:function(){var $i=0>=arguments.length||void 0===arguments[0]?'':arguments[0],Xi=this.options.classes;return'undefined'!=typeof Xi&&Xi[$i]?this.options.classes[$i]:this.options.classPrefix?this.options.classPrefix+'-'+$i:$i}},{key:'setOptions',value:function($i){var Xi=this,Ki=1>=arguments.length||void 0===arguments[1]||arguments[1];this.options=Ci({offset:'0 0',targetOffset:'0 0',targetAttachment:'auto auto',classPrefix:'tether'},$i);var Ji=this.options,Qi=Ji.element,ed=Ji.target,td=Ji.targetModifier;if(this.element=Qi,this.target=ed,this.targetModifier=td,'viewport'===this.target?(this.target=document.body,this.targetModifier='visible'):'scroll-handle'===this.target&&(this.target=document.body,this.targetModifier='scroll-handle'),['element','target'].forEach(function(od){if('undefined'==typeof Xi[od])throw new Error('Tether Error: Both element and target must be defined');'undefined'==typeof Xi[od].jquery?'string'==typeof Xi[od]&&(Xi[od]=document.querySelector(Xi[od])):Xi[od]=Xi[od][0]}),Mi(this.element,this.getClass('element')),!1===this.options.addTargetClasses||Mi(this.target,this.getClass('target')),!this.options.attachment)throw new Error('Tether Error: You must provide an attachment');this.targetAttachment=Hi(this.options.targetAttachment),this.attachment=Hi(this.options.attachment),this.offset=Ui(this.options.offset),this.targetOffset=Ui(this.options.targetOffset),'undefined'!=typeof this.scrollParents&&this.disable(),this.scrollParents='scroll-handle'===this.targetModifier?[this.target]:Ti(this.target),!1===this.options.enabled||this.enable(Ki)}},{key:'getTargetBounds',value:function(){if('undefined'!=typeof this.targetModifier){if('visible'===this.targetModifier){if(this.target===document.body)return{top:pageYOffset,left:pageXOffset,height:innerHeight,width:innerWidth};var $i=Ni(this.target),Xi={height:$i.height,width:$i.width,top:$i.top,left:$i.left};return Xi.height=_Mathmin(Xi.height,$i.height-(pageYOffset-$i.top)),Xi.height=_Mathmin(Xi.height,$i.height-($i.top+$i.height-(pageYOffset+innerHeight))),Xi.height=_Mathmin(innerHeight,Xi.height),Xi.height-=2,Xi.width=_Mathmin(Xi.width,$i.width-(pageXOffset-$i.left)),Xi.width=_Mathmin(Xi.width,$i.width-($i.left+$i.width-(pageXOffset+innerWidth))),Xi.width=_Mathmin(innerWidth,Xi.width),Xi.width-=2,Xi.top<pageYOffset&&(Xi.top=pageYOffset),Xi.left<pageXOffset&&(Xi.left=pageXOffset),Xi}if('scroll-handle'===this.targetModifier){var $i=void 0,Ki=this.target;Ki===document.body?(Ki=document.documentElement,$i={left:pageXOffset,top:pageYOffset,height:innerHeight,width:innerWidth}):$i=Ni(Ki);var Zi=getComputedStyle(Ki),Ji=Ki.scrollWidth>Ki.clientWidth||0<=[Zi.overflow,Zi.overflowX].indexOf('scroll')||this.target!==document.body,Qi=0;Ji&&(Qi=15);var ed=$i.height-parseFloat(Zi.borderTopWidth)-parseFloat(Zi.borderBottomWidth)-Qi,Xi={width:15,height:0.975*ed*(ed/Ki.scrollHeight),left:$i.left+$i.width-parseFloat(Zi.borderLeftWidth)-15},td=0;408>ed&&this.target===document.body&&(td=-1.1e-4*Math.pow(ed,2)-0.00727*ed+22.58),this.target!==document.body&&(Xi.height=_Mathmax(Xi.height,24));var od=this.target.scrollTop/(Ki.scrollHeight-ed);return Xi.top=od*(ed-Xi.height-td)+$i.top+parseFloat(Zi.borderTopWidth),this.target===document.body&&(Xi.height=_Mathmax(Xi.height,24)),Xi}}else return Ni(this.target)}},{key:'clearCache',value:function(){this._cache={}}},{key:'cache',value:function($i,Xi){return'undefined'==typeof this._cache&&(this._cache={}),'undefined'==typeof this._cache[$i]&&(this._cache[$i]=Xi.call(this)),this._cache[$i]}},{key:'enable',value:function(){var $i=this,Xi=0>=arguments.length||void 0===arguments[0]||arguments[0];!1===this.options.addTargetClasses||Mi(this.target,this.getClass('enabled')),Mi(this.element,this.getClass('enabled')),this.enabled=!0,this.scrollParents.forEach(function(Ki){Ki!==$i.target.ownerDocument&&Ki.addEventListener('scroll',$i.position)}),Xi&&this.position()}},{key:'disable',value:function(){var $i=this;Oi(this.target,this.getClass('enabled')),Oi(this.element,this.getClass('enabled')),this.enabled=!1,'undefined'!=typeof this.scrollParents&&this.scrollParents.forEach(function(Xi){Xi.removeEventListener('scroll',$i.position)})}},{key:'destroy',value:function(){var $i=this;this.disable(),Li.forEach(function(Xi,Ki){Xi===$i&&Li.splice(Ki,1)}),0===Li.length&&ji()}},{key:'updateAttachClasses',value:function($i,Xi){var Ki=this;$i=$i||this.attachment,Xi=Xi||this.targetAttachment;'undefined'!=typeof this._addAttachClasses&&this._addAttachClasses.length&&this._addAttachClasses.splice(0,this._addAttachClasses.length),'undefined'==typeof this._addAttachClasses&&(this._addAttachClasses=[]);var Ji=this._addAttachClasses;$i.top&&Ji.push(this.getClass('element-attached')+'-'+$i.top),$i.left&&Ji.push(this.getClass('element-attached')+'-'+$i.left),Xi.top&&Ji.push(this.getClass('target-attached')+'-'+Xi.top),Xi.left&&Ji.push(this.getClass('target-attached')+'-'+Xi.left);var Qi=[];['left','top','bottom','right','middle','center'].forEach(function(ed){Qi.push(Ki.getClass('element-attached')+'-'+ed),Qi.push(Ki.getClass('target-attached')+'-'+ed)}),Pi(function(){'undefined'==typeof Ki._addAttachClasses||(Ei(Ki.element,Ki._addAttachClasses,Qi),!1!==Ki.options.addTargetClasses&&Ei(Ki.target,Ki._addAttachClasses,Qi),delete Ki._addAttachClasses)})}},{key:'position',value:function(){var $i=this,Xi=0>=arguments.length||void 0===arguments[0]||arguments[0];if(this.enabled){this.clearCache();var Ki=Bi(this.targetAttachment,this.attachment);this.updateAttachClasses(this.attachment,Ki);var Zi=this.cache('element-bounds',function(){return Ni($i.element)}),Ji=Zi.width,Qi=Zi.height;if(0===Ji&&0===Qi&&'undefined'!=typeof this.lastSize){var ed=this.lastSize;Ji=ed.width,Qi=ed.height}else this.lastSize={width:Ji,height:Qi};var td=this.cache('target-bounds',function(){return $i.getTargetBounds()}),od=td,sd=gi(Wi(this.attachment),{width:Ji,height:Qi}),ad=gi(Wi(Ki),od),nd=gi(this.offset,{width:Ji,height:Qi}),ld=gi(this.targetOffset,od);sd=ui(sd,nd),ad=ui(ad,ld);for(var rd=td.left+ad.left-sd.left,dd=td.top+ad.top-sd.top,pd=0;pd<yi['default'].modules.length;++pd){var cd=yi['default'].modules[pd],ud=cd.position.call(this,{left:rd,top:dd,targetAttachment:Ki,targetPos:td,elementPos:Zi,offset:sd,targetOffset:ad,manualOffset:nd,manualTargetOffset:ld,scrollbarSize:hd,attachment:this.attachment});if(!1===ud)return!1;if('undefined'==typeof ud||'object'!==('undefined'==typeof ud?'undefined':et(ud)))continue;else dd=ud.top,rd=ud.left}var hd,gd={page:{top:dd,left:rd},viewport:{top:dd-pageYOffset,bottom:pageYOffset-dd-Qi+innerHeight,left:rd-pageXOffset,right:pageXOffset-rd-Ji+innerWidth}},fd=this.target.ownerDocument,md=fd.defaultView;return fd.body.scrollWidth>md.innerWidth&&(hd=this.cache('scrollbar-size',xi),gd.viewport.bottom-=hd.height),fd.body.scrollHeight>md.innerHeight&&(hd=this.cache('scrollbar-size',xi),gd.viewport.right-=hd.width),(-1===['','static'].indexOf(fd.body.style.position)||-1===['','static'].indexOf(fd.body.parentElement.style.position))&&(gd.page.bottom=fd.body.scrollHeight-dd-Qi,gd.page.right=fd.body.scrollWidth-rd-Ji),'undefined'==typeof this.options.optimizations||!1===this.options.optimizations.moveElement||'undefined'!=typeof this.targetModifier||function(){var bd=$i.cache('target-offsetparent',function(){return ki($i.target)}),yd=$i.cache('target-offsetparent-bounds',function(){return Ni(bd)}),vd=getComputedStyle(bd),Td=yd,Nd={};if(['Top','Left','Bottom','Right'].forEach(function(Md){Nd[Md.toLowerCase()]=parseFloat(vd['border'+Md+'Width'])}),yd.right=fd.body.scrollWidth-yd.left-Td.width+Nd.right,yd.bottom=fd.body.scrollHeight-yd.top-Td.height+Nd.bottom,gd.page.top>=yd.top+Nd.top&&gd.page.bottom>=yd.bottom&&gd.page.left>=yd.left+Nd.left&&gd.page.right>=yd.right){var kd=bd.scrollTop,Cd=bd.scrollLeft;gd.offset={top:gd.page.top-yd.top+kd-Nd.top,left:gd.page.left-yd.left+Cd-Nd.left}}}(),this.move(gd),this.history.unshift(gd),3<this.history.length&&this.history.pop(),Xi&&wi(),!0}}},{key:'move',value:function($i){var Xi=this;if('undefined'!=typeof this.element.parentNode){var Ki={};for(var Zi in $i)for(var Ji in Ki[Zi]={},$i[Zi]){for(var td,Qi=!1,ed=0;ed<this.history.length;++ed)if(td=this.history[ed],'undefined'!=typeof td[Zi]&&!pi(td[Zi][Ji],$i[Zi][Ji])){Qi=!0;break}Qi||(Ki[Zi][Ji]=!0)}var od={top:'',left:'',right:'',bottom:''},sd=function(gd,fd){var md='undefined'!=typeof Xi.options.optimizations,hd=md?Xi.options.optimizations.gpu:null;if(!1!==hd){var bd,yd;gd.top?(od.top=0,bd=fd.top):(od.bottom=0,bd=-fd.bottom),gd.left?(od.left=0,yd=fd.left):(od.right=0,yd=-fd.right),od[Ai]='translateX('+_Mathround(yd)+'px) translateY('+_Mathround(bd)+'px)','msTransform'!==Ai&&(od[Ai]+=' translateZ(0)')}else gd.top?od.top=fd.top+'px':od.bottom=fd.bottom+'px',gd.left?od.left=fd.left+'px':od.right=fd.right+'px'},ad=!1;if((Ki.page.top||Ki.page.bottom)&&(Ki.page.left||Ki.page.right)?(od.position='absolute',sd(Ki.page,$i.page)):(Ki.viewport.top||Ki.viewport.bottom)&&(Ki.viewport.left||Ki.viewport.right)?(od.position='fixed',sd(Ki.viewport,$i.viewport)):'undefined'!=typeof Ki.offset&&Ki.offset.top&&Ki.offset.left?function(){od.position='absolute';var ud=Xi.cache('target-offsetparent',function(){return ki(Xi.target)});ki(Xi.element)!==ud&&Pi(function(){Xi.element.parentNode.removeChild(Xi.element),ud.appendChild(Xi.element)}),sd(Ki.offset,$i.offset),ad=!0}():(od.position='absolute',sd({top:!0,left:!0},$i.page)),!ad){for(var nd=!0,ld=this.element.parentNode;ld&&1===ld.nodeType&&'BODY'!==ld.tagName;){if('static'!==getComputedStyle(ld).position){nd=!1;break}ld=ld.parentNode}nd||(this.element.parentNode.removeChild(this.element),this.element.ownerDocument.body.appendChild(this.element))}var rd={},dd=!1;for(var Ji in od){var pd=od[Ji],cd=this.element.style[Ji];cd!==pd&&(dd=!0,rd[Ji]=pd)}dd&&Pi(function(){Ci(Xi.element.style,rd),Xi.trigger('repositioned')})}}}]),Vi}(Di);qi.modules=[],yi['default'].position=Si;var Gi=Ci(qi,yi['default']);li['default']=Gi,ni.exports=li['default']},{'./abutment':1,'./constraint':2,'./shift':3,'./utils':5}],5:[function(ai,ni,li){'use strict';function ri(Di,Ai){if(!(Di instanceof Ai))throw new TypeError('Cannot call a class as a function')}function ii(Di){var Ai=Di.getBoundingClientRect(),Li={};for(var Si in Ai)Li[Si]=Ai[Si];if(Di.ownerDocument!==document){var zi=Di.ownerDocument.defaultView.frameElement;if(zi){var Ii=ii(zi);Li.top+=Ii.top,Li.bottom+=Ii.top,Li.left+=Ii.left,Li.right+=Ii.left}}return Li}function fi(){var Di=0>=arguments.length||void 0===arguments[0]?{}:arguments[0],Ai=[];return Array.prototype.push.apply(Ai,arguments),Ai.slice(1).forEach(function(Li){if(Li)for(var Si in Li)({}).hasOwnProperty.call(Li,Si)&&(Di[Si]=Li[Si])}),Di}function mi(Di,Ai){if('undefined'!=typeof Di.classList)Ai.split(' ').forEach(function(zi){zi.trim()&&Di.classList.remove(zi)});else{var Li=new RegExp('(^| )'+Ai.split(' ').join('|')+'( |$)','gi'),Si=yi(Di).replace(Li,' ');vi(Di,Si)}}function hi(Di,Ai){if('undefined'!=typeof Di.classList)Ai.split(' ').forEach(function(Si){Si.trim()&&Di.classList.add(Si)});else{mi(Di,Ai);var Li=yi(Di)+(' '+Ai);vi(Di,Li)}}function bi(Di,Ai){if('undefined'!=typeof Di.classList)return Di.classList.contains(Ai);var Li=yi(Di);return new RegExp('(^| )'+Ai+'( |$)','gi').test(Li)}function yi(Di){return Di.className instanceof Di.ownerDocument.defaultView.SVGAnimatedString?Di.className.baseVal:Di.className}function vi(Di,Ai){Di.setAttribute('class',Ai)}Object.defineProperty(li,'__esModule',{value:!0});var Ni=function(){function Di(Ai,Li){for(var zi,Si=0;Si<Li.length;Si++)zi=Li[Si],zi.enumerable=zi.enumerable||!1,zi.configurable=!0,'value'in zi&&(zi.writable=!0),Object.defineProperty(Ai,zi.key,zi)}return function(Ai,Li,Si){return Li&&Di(Ai.prototype,Li),Si&&Di(Ai,Si),Ai}}(),ki={modules:[]},Ci=null,Mi=function(){var Di=0;return function(){return++Di}}(),Oi={},Ei=function(){var Ai=Ci;Ai||(Ai=document.createElement('div'),Ai.setAttribute('data-tether-id',Mi()),fi(Ai.style,{top:0,left:0,position:'absolute'}),document.body.appendChild(Ai),Ci=Ai);var Li=Ai.getAttribute('data-tether-id');return'undefined'==typeof Oi[Li]&&(Oi[Li]=ii(Ai),wi(function(){delete Oi[Li]})),Oi[Li]},Pi=[],wi=function(Ai){Pi.push(Ai)},ji=function(){function Di(){ri(this,Di)}return Ni(Di,[{key:'on',value:function(Li,Si,zi){var Ii=3>=arguments.length||void 0===arguments[3]?!1:arguments[3];'undefined'==typeof this.bindings&&(this.bindings={}),'undefined'==typeof this.bindings[Li]&&(this.bindings[Li]=[]),this.bindings[Li].push({handler:Si,ctx:zi,once:Ii})}},{key:'once',value:function(Li,Si,zi){this.on(Li,Si,zi,!0)}},{key:'off',value:function(Li,Si){if('undefined'!=typeof this.bindings&&'undefined'!=typeof this.bindings[Li])if('undefined'==typeof Si)delete this.bindings[Li];else for(var zi=0;zi<this.bindings[Li].length;)this.bindings[Li][zi].handler===Si?this.bindings[Li].splice(zi,1):++zi}},{key:'trigger',value:function(Li){if('undefined'!=typeof this.bindings&&this.bindings[Li]){for(var Si=0,zi=arguments.length,Ii=Array(1<zi?zi-1:0),Ri=1;Ri<zi;Ri++)Ii[Ri-1]=arguments[Ri];for(;Si<this.bindings[Li].length;){var Bi=this.bindings[Li][Si],Wi=Bi.handler,Ui=Bi.ctx,Hi=Bi.once,qi=Ui;'undefined'==typeof qi&&(qi=this),Wi.apply(qi,Ii),Hi?this.bindings[Li].splice(Si,1):++Si}}}}]),Di}();ki.Utils={getActualBoundingClientRect:ii,getScrollParents:function(Di){var Ai=getComputedStyle(Di)||{},Li=Ai.position,Si=[];if('fixed'===Li)return[Di];for(var Ii,zi=Di;(zi=zi.parentNode)&&zi&&1===zi.nodeType;){Ii=void 0;try{Ii=getComputedStyle(zi)}catch(Hi){}if('undefined'==typeof Ii||null===Ii)return Si.push(zi),Si;var Ri=Ii,Bi=Ri.overflow,Wi=Ri.overflowX,Ui=Ri.overflowY;/(auto|scroll)/.test(Bi+Ui+Wi)&&('absolute'!==Li||0<=['relative','absolute','fixed'].indexOf(Ii.position))&&Si.push(zi)}return Si.push(Di.ownerDocument.body),Di.ownerDocument!==document&&Si.push(Di.ownerDocument.defaultView),Si},getBounds:function(Di){var Ai;Di===document?(Ai=document,Di=document.documentElement):Ai=Di.ownerDocument;var Li=Ai.documentElement,Si=ii(Di),zi=Ei();return Si.top-=zi.top,Si.left-=zi.left,'undefined'==typeof Si.width&&(Si.width=document.body.scrollWidth-Si.left-Si.right),'undefined'==typeof Si.height&&(Si.height=document.body.scrollHeight-Si.top-Si.bottom),Si.top-=Li.clientTop,Si.left-=Li.clientLeft,Si.right=Ai.body.clientWidth-Si.width-Si.left,Si.bottom=Ai.body.clientHeight-Si.height-Si.top,Si},getOffsetParent:function(Di){return Di.offsetParent||document.documentElement},extend:fi,addClass:hi,removeClass:mi,hasClass:bi,updateClasses:function(Di,Ai,Li){Li.forEach(function(Si){-1===Ai.indexOf(Si)&&bi(Di,Si)&&mi(Di,Si)}),Ai.forEach(function(Si){bi(Di,Si)||hi(Di,Si)})},defer:wi,flush:function(){for(var Ai;Ai=Pi.pop();)Ai()},uniqueId:Mi,Evented:ji,getScrollBarSize:function(){var Di=document.createElement('div');Di.style.width='100%',Di.style.height='200px';var Ai=document.createElement('div');fi(Ai.style,{position:'absolute',top:0,left:0,pointerEvents:'none',visibility:'hidden',width:'200px',height:'150px',overflow:'hidden'}),Ai.appendChild(Di),document.body.appendChild(Ai);var Li=Di.offsetWidth;Ai.style.overflow='scroll';var Si=Di.offsetWidth;Li===Si&&(Si=Ai.clientWidth),document.body.removeChild(Ai);var zi=Li-Si;return{width:zi,height:zi}},removeUtilElements:function(){Ci&&document.body.removeChild(Ci),Ci=null}},li['default']=ki,ni.exports=li['default']},{}]},{},[4])(4)})}),Wo=function(Qr){return Qr&&Qr.__esModule?Qr['default']:Qr}(Bo),Uo=g.PropTypes,Ho={children:Uo.node.isRequired,className:Uo.string,arrow:Uo.string,disabled:Uo.bool,isOpen:Uo.bool.isRequired,toggle:Uo.func.isRequired,tether:Uo.object.isRequired,tetherRef:Uo.func,style:Uo.node,cssModule:Uo.object},Go=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.handleDocumentClick=oi.handleDocumentClick.bind(oi),oi.toggle=oi.toggle.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'componentDidMount',value:function(){this.handleProps()}},{key:'componentDidUpdate',value:function(oi){this.props.isOpen===oi.isOpen?this._element&&this.renderIntoSubtree():this.handleProps()}},{key:'componentWillUnmount',value:function(){this.hide()}},{key:'getTarget',value:function(){var oi=this.props.tether.target;return Ro(oi)?oi():oi}},{key:'getTetherConfig',value:function(){var oi=at({},this.props.tether);return oi.element=this._element,oi.target=this.getTarget(),oi}},{key:'handleDocumentClick',value:function(oi){var si=this._element;oi.target!==si&&si.contains(oi.target)||this.toggle()}},{key:'handleProps',value:function(){this.props.isOpen?this.show():this.hide()}},{key:'hide',value:function(){document.removeEventListener('click',this.handleDocumentClick,!0),this._element&&(document.body.removeChild(this._element),m.unmountComponentAtNode(this._element),this._element=null),this._tether&&(this._tether.destroy(),this._tether=null,this.props.tetherRef(this._tether))}},{key:'show',value:function(){document.addEventListener('click',this.handleDocumentClick,!0),this._element=document.createElement('div'),this._element.className=this.props.className,document.body.appendChild(this._element),this.renderIntoSubtree(),this._tether=new Wo(this.getTetherConfig()),this.props.tetherRef(this._tether),this._tether.position(),this._element.childNodes[0].focus()}},{key:'toggle',value:function(oi){return this.props.disabled?oi&&oi.preventDefault():this.props.toggle()}},{key:'renderIntoSubtree',value:function(){m.unstable_renderSubtreeIntoContainer(this,this.renderChildren(),this._element)}},{key:'renderChildren',value:function(){var oi=this.props,si=oi.children,ai=oi.style;return g.cloneElement(si,{style:ai})}},{key:'render',value:function(){return null}}]),ei}(g.Component);Go.propTypes=Ho,Go.defaultProps={isOpen:!1,tetherRef:function(){}};var Fo=g.PropTypes,Vo={tag:Fo.oneOfType([Fo.func,Fo.string]),children:Fo.node.isRequired,right:Fo.bool,className:Fo.string,cssModule:Fo.object},$o={isOpen:Fo.bool.isRequired},Xo=function(ei,ti){var oi=ei.className,si=ei.cssModule,ai=ei.right,ni=ei.tag,li=lt(ei,['className','cssModule','right','tag']),ri=w(it(oi,'dropdown-menu',{'dropdown-menu-right':ai}),si);return g.createElement(ni,at({},li,{tabIndex:'-1','aria-hidden':!ti.isOpen,role:'menu',className:ri}))};Xo.propTypes=Vo,Xo.defaultProps={tag:'div'},Xo.contextTypes=$o;var Ko=g.PropTypes,Zo={disabled:Ko.bool,dropup:Ko.bool,group:Ko.bool,isOpen:Ko.bool,size:Ko.string,tag:Ko.string,tether:Ko.oneOfType([Ko.object,Ko.bool]),toggle:Ko.func,children:Ko.node,className:Ko.string,cssModule:Ko.object},Qo={toggle:Ko.func.isRequired,isOpen:Ko.bool.isRequired},es={classPrefix:'bs-tether',classes:{element:'dropdown',enabled:'show'},constraints:[{to:'scrollParent',attachment:'together none'},{to:'window',attachment:'together none'}]},ts=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.addEvents=oi.addEvents.bind(oi),oi.getTetherConfig=oi.getTetherConfig.bind(oi),oi.handleDocumentClick=oi.handleDocumentClick.bind(oi),oi.removeEvents=oi.removeEvents.bind(oi),oi.toggle=oi.toggle.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'getChildContext',value:function(){return{toggle:this.props.toggle,isOpen:this.props.isOpen}}},{key:'componentDidMount',value:function(){this.handleProps()}},{key:'componentDidUpdate',value:function(oi){this.props.isOpen!==oi.isOpen&&this.handleProps()}},{key:'componentWillUnmount',value:function(){this.removeEvents()}},{key:'getTetherTarget',value:function(){var oi=m.findDOMNode(this);return oi.querySelector('[data-toggle="dropdown"]')}},{key:'getTetherConfig',value:function(oi){var si=this,ni='top',li='left',ri='bottom',ii='left';return oi.right&&(li='right',ii='right'),this.props.dropup&&(ni='bottom',ri='top'),at({},es,{attachment:ni+' '+li,targetAttachment:ri+' '+ii,target:function(){return si.getTetherTarget()}},this.props.tether)}},{key:'addEvents',value:function(){document.addEventListener('click',this.handleDocumentClick,!0)}},{key:'removeEvents',value:function(){document.removeEventListener('click',this.handleDocumentClick,!0)}},{key:'handleDocumentClick',value:function(oi){var si=m.findDOMNode(this);si.contains(oi.target)&&si!==oi.target||this.toggle()}},{key:'handleProps',value:function(){this.props.tether||(this.props.isOpen?this.addEvents():this.removeEvents())}},{key:'toggle',value:function(oi){return this.props.disabled?oi&&oi.preventDefault():this.props.toggle()}},{key:'renderChildren',value:function(){var oi=this,si=this.props,ai=si.tether,ni=si.children,li=lt(si,['tether','children']);return li.toggle=this.toggle,g.Children.map(g.Children.toArray(ni),function(ri){if(ai&&ri.type===Xo){var ii=oi.getTetherConfig(ri.props);return g.createElement(Go,at({},li,{tether:ii}),ri)}return ri})}},{key:'render',value:function(){var oi,si=Ao(this.props,['toggle','tether']),ai=si.className,ni=si.cssModule,li=si.dropup,ri=si.group,ii=si.size,di=si.tag,pi=si.isOpen,ci=lt(si,['className','cssModule','dropup','group','size','tag','isOpen']),ui=w(it(ai,(oi={'btn-group':ri},st(oi,'btn-group-'+ii,!!ii),st(oi,'dropdown',!ri),st(oi,'show',pi),st(oi,'dropup',li),oi)),ni);return g.createElement(di,at({},ci,{className:ui}),this.renderChildren())}}]),ei}(g.Component);ts.propTypes=Zo,ts.defaultProps={isOpen:!1,tag:'div'},ts.childContextTypes=Qo;var os=g.PropTypes,ss={children:os.node,tag:os.oneOfType([os.func,os.string]),className:os.string,cssModule:os.object},ns=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'nav-item'),oi);return g.createElement(ts,at({},ai,{tag:si,className:ni}))};ns.propTypes=ss,ns.defaultProps={tag:'li'};var ls=g.PropTypes,rs={tag:ls.oneOfType([ls.func,ls.string]),getRef:ls.oneOfType([ls.func,ls.string]),disabled:ls.bool,active:ls.bool,className:ls.string,cssModule:ls.object,onClick:ls.func,href:ls.any},ds=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.onClick=oi.onClick.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'onClick',value:function(oi){return this.props.disabled?void oi.preventDefault():void('#'===this.props.href&&oi.preventDefault(),this.props.onClick&&this.props.onClick(oi))}},{key:'render',value:function(){var oi=this.props,si=oi.className,ai=oi.cssModule,ni=oi.active,li=oi.tag,ri=oi.getRef,ii=lt(oi,['className','cssModule','active','tag','getRef']),di=w(it(si,'nav-link',{disabled:ii.disabled,active:ni}),ai);return g.createElement(li,at({},ii,{ref:ri,onClick:this.onClick,className:di}))}}]),ei}(g.Component);ds.propTypes=rs,ds.defaultProps={tag:'a'};var ps=g.PropTypes,cs={tag:ps.string,className:ps.string,cssModule:ps.object},gs=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'breadcrumb'),oi);return g.createElement(si,at({},ai,{className:ni}))};gs.propTypes=cs,gs.defaultProps={tag:'ol'};var fs=g.PropTypes,ms={tag:fs.oneOfType([fs.func,fs.string]),active:fs.bool,className:fs.string,cssModule:fs.object},bs=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.active,ai=ei.tag,ni=lt(ei,['className','cssModule','active','tag']),li=w(it(ti,!!si&&'active','breadcrumb-item'),oi);return g.createElement(ai,at({},ni,{className:li}))};bs.propTypes=ms,bs.defaultProps={tag:'li'};var ys=g.PropTypes,vs={active:ys.bool,block:ys.bool,color:ys.string,disabled:ys.bool,outline:ys.bool,tag:ys.oneOfType([ys.func,ys.string]),getRef:ys.oneOfType([ys.func,ys.string]),onClick:ys.func,size:ys.string,children:ys.node,className:ys.string,cssModule:ys.object},Ns=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.onClick=oi.onClick.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'onClick',value:function(oi){return this.props.disabled?void oi.preventDefault():void(this.props.onClick&&this.props.onClick(oi))}},{key:'render',value:function(){var oi=this.props,si=oi.active,ai=oi.block,ni=oi.className,li=oi.cssModule,ri=oi.color,ii=oi.outline,di=oi.size,pi=oi.tag,ci=oi.getRef,ui=lt(oi,['active','block','className','cssModule','color','outline','size','tag','getRef']),gi=w(it(ni,'btn','btn'+(ii?'-outline':'')+'-'+ri,!!di&&'btn-'+di,!!ai&&'btn-block',{active:si,disabled:this.props.disabled}),li);return ui.href&&'button'===pi&&(pi='a'),g.createElement(pi,at({type:'button'===pi&&ui.onClick?'button':void 0},ui,{className:gi,ref:ci,onClick:this.onClick}))}}]),ei}(g.Component);Ns.propTypes=vs,Ns.defaultProps={color:'secondary',tag:'button'};var ks=g.PropTypes,Cs={children:ks.node},Ms=function(ei){return g.createElement(ts,at({},ei,{group:!0}))};Ms.propTypes=Cs;var Os=g.PropTypes,Es={tag:Os.oneOfType([Os.func,Os.string]),'aria-label':Os.string,className:Os.string,cssModule:Os.object,role:Os.string,size:Os.string,vertical:Os.bool},ws=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.size,ai=ei.vertical,ni=ei.tag,li=lt(ei,['className','cssModule','size','vertical','tag']),ri=w(it(ti,!!si&&'btn-group-'+si,ai?'btn-group-vertical':'btn-group'),oi);return g.createElement(ni,at({},li,{className:ri}))};ws.propTypes=Es,ws.defaultProps={tag:'div',role:'group'};var xs=g.PropTypes,js={tag:xs.oneOfType([xs.func,xs.string]),'aria-label':xs.string,className:xs.string,cssModule:xs.object,role:xs.string},As=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'btn-toolbar'),oi);return g.createElement(si,at({},ai,{className:ni}))};As.propTypes=js,As.defaultProps={tag:'div',role:'toolbar'};var Ls=g.PropTypes,Ss={children:Ls.node,disabled:Ls.bool,divider:Ls.bool,tag:Ls.oneOfType([Ls.func,Ls.string]),header:Ls.bool,onClick:Ls.func,className:Ls.string,cssModule:Ls.object,toggle:Ls.bool},zs={toggle:Ls.func},Rs=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.onClick=oi.onClick.bind(oi),oi.getTabIndex=oi.getTabIndex.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'onClick',value:function(oi){return this.props.disabled||this.props.header||this.props.divider?void oi.preventDefault():void(this.props.onClick&&this.props.onClick(oi),this.props.toggle&&this.context.toggle())}},{key:'getTabIndex',value:function(){return this.props.disabled||this.props.header||this.props.divider?'-1':'0'}},{key:'render',value:function(){var oi=this.getTabIndex(),si=Ao(this.props,['toggle']),ai=si.className,ni=si.cssModule,li=si.divider,ri=si.tag,ii=si.header,di=lt(si,['className','cssModule','divider','tag','header']),pi=w(it(ai,{disabled:di.disabled,'dropdown-item':!li&&!ii,'dropdown-header':ii,'dropdown-divider':li}),ni);return'button'===ri&&(ii?ri='h6':li?ri='div':di.href&&(ri='a')),g.createElement(ri,at({type:'button'===ri&&(di.onClick||this.props.toggle)?'button':void 0},di,{tabIndex:oi,className:pi,onClick:this.onClick}))}}]),ei}(g.Component);Rs.propTypes=Ss,Rs.defaultProps={tag:'button',toggle:!0},Rs.contextTypes=zs;var Bs=g.PropTypes,Ws={caret:Bs.bool,children:Bs.node,className:Bs.string,cssModule:Bs.object,disabled:Bs.bool,onClick:Bs.func,'data-toggle':Bs.string,'aria-haspopup':Bs.bool,split:Bs.bool,tag:Bs.oneOfType([Bs.func,Bs.string]),nav:Bs.bool},Hs={isOpen:Bs.bool.isRequired,toggle:Bs.func.isRequired},qs=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.onClick=oi.onClick.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'onClick',value:function(oi){return this.props.disabled?void oi.preventDefault():void(this.props.nav&&!this.props.tag&&oi.preventDefault(),this.props.onClick&&this.props.onClick(oi),this.context.toggle())}},{key:'render',value:function(){var gi,oi=this.props,si=oi.className,ai=oi.cssModule,ni=oi.caret,li=oi.split,ri=oi.nav,ii=oi.tag,di=lt(oi,['className','cssModule','caret','split','nav','tag']),pi=di['aria-label']||'Toggle Dropdown',ci=w(it(si,{'dropdown-toggle':ni||li,'dropdown-toggle-split':li,active:this.context.isOpen,'nav-link':ri}),ai),ui=di.children||g.createElement('span',{className:'sr-only'},pi);return ri&&!ii?(gi='a',di.href='#'):ii?gi=ii:gi=Ns,g.createElement(gi,at({},di,{className:ci,onClick:this.onClick,'aria-haspopup':'true','aria-expanded':this.context.isOpen,children:ui}))}}]),ei}(g.Component);qs.propTypes=Ws,qs.defaultProps={'data-toggle':'dropdown','aria-haspopup':!0,color:'secondary'},qs.contextTypes=Hs;var Gs=g.PropTypes,Fs={baseClass:Gs.string,baseClassIn:Gs.string,tag:Gs.oneOfType([Gs.func,Gs.string]),className:Gs.string,cssModule:Gs.object,transitionAppearTimeout:Gs.number,transitionEnterTimeout:Gs.number,transitionLeaveTimeout:Gs.number,transitionAppear:Gs.bool,transitionEnter:Gs.bool,transitionLeave:Gs.bool,onLeave:Gs.func,onEnter:Gs.func},Ys=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.state={mounted:!ti.transitionAppear},oi.onLeave=oi.onLeave.bind(oi),oi.onEnter=oi.onEnter.bind(oi),oi.timers=[],oi}return nt(ei,Qr),ot(ei,[{key:'componentWillUnmount',value:function(){this.timers.forEach(function(oi){return clearTimeout(oi)})}},{key:'onEnter',value:function(oi){var si=this;return function(){oi(),si.props.onEnter&&si.props.onEnter()}}},{key:'onLeave',value:function(oi){var si=this;return function(){oi(),si.props.onLeave&&si.props.onLeave()}}},{key:'componentWillAppear',value:function(oi){this.props.transitionAppear||this.onEnter(oi)(),this.timers.push(setTimeout(this.onEnter(oi),this.props.transitionAppearTimeout))}},{key:'componentDidAppear',value:function(){this.setState({mounted:!0})}},{key:'componentWillEnter',value:function(oi){this.props.transitionEnter||this.onEnter(oi)(),this.timers.push(setTimeout(this.onEnter(oi),this.props.transitionEnterTimeout))}},{key:'componentDidEnter',value:function(){this.setState({mounted:!0})}},{key:'componentWillLeave',value:function(oi){this.setState({mounted:!1}),this.props.transitionLeave||this.onLeave(oi)(),this.timers.push(setTimeout(this.onLeave(oi),this.props.transitionLeaveTimeout))}},{key:'render',value:function(){var oi=this.props,si=oi.baseClass,ai=oi.baseClassIn,ni=oi.className,li=oi.cssModule,ri=oi.tag,ii=Ao(this.props,Object.keys(Fs)),di=w(it(ni,si,!!this.state.mounted&&ai),li);return g.createElement(ri,at({},ii,{className:di}))}}]),ei}(g.Component);Ys.propTypes=Fs,Ys.defaultProps={tag:'div',baseClass:'fade',baseClassIn:'show',transitionAppearTimeout:0,transitionEnterTimeout:0,transitionLeaveTimeout:0,transitionAppear:!0,transitionEnter:!0,transitionLeave:!0};var $s=g.PropTypes,Xs={color:$s.string,pill:$s.bool,tag:$s.oneOfType([$s.func,$s.string]),children:$s.node,className:$s.string,cssModule:$s.object},Zs=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.color,ai=ei.pill,ni=ei.tag,li=lt(ei,['className','cssModule','color','pill','tag']),ri=w(it(ti,'badge','badge-'+si,!!ai&&'badge-pill'),oi);return g.createElement(ni,at({},li,{className:ri}))};Zs.propTypes=Xs,Zs.defaultProps={color:'default',pill:!1,tag:'span'};var Js=g.PropTypes,Qs={tag:Js.oneOfType([Js.func,Js.string]),inverse:Js.bool,color:Js.string,block:Js.bool,outline:Js.bool,className:Js.string,cssModule:Js.object},ta=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.color,ai=ei.block,ni=ei.inverse,li=ei.outline,ri=ei.tag,ii=lt(ei,['className','cssModule','color','block','inverse','outline','tag']),di=w(it(ti,'card',!!ni&&'card-inverse',!!ai&&'card-block',!!si&&'card'+(li?'-outline':'')+'-'+si),oi);return g.createElement(ri,at({},ii,{className:di}))};ta.propTypes=Qs,ta.defaultProps={tag:'div'};var oa=g.PropTypes,sa={tag:oa.oneOfType([oa.func,oa.string]),className:oa.string,cssModule:oa.object},na=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-group'),oi);return g.createElement(si,at({},ai,{className:ni}))};na.propTypes=sa,na.defaultProps={tag:'div'};var la=g.PropTypes,ra={tag:la.oneOfType([la.func,la.string]),className:la.string,cssModule:la.object},da=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-deck'),oi);return g.createElement(si,at({},ai,{className:ni}))};da.propTypes=ra,da.defaultProps={tag:'div'};var pa=g.PropTypes,ca={tag:pa.oneOfType([pa.func,pa.string]),className:pa.string,cssModule:pa.object},ga=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-columns'),oi);return g.createElement(si,at({},ai,{className:ni}))};ga.propTypes=ca,ga.defaultProps={tag:'div'};var fa=g.PropTypes,ma={tag:fa.oneOfType([fa.func,fa.string]),className:fa.string,cssModule:fa.object},ba=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-block'),oi);return g.createElement(si,at({},ai,{className:ni}))};ba.propTypes=ma,ba.defaultProps={tag:'div'};var ya=g.PropTypes,va={tag:ya.oneOfType([ya.func,ya.string]),getRef:ya.oneOfType([ya.func,ya.string]),className:ya.string,cssModule:ya.object},Na=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=ei.getRef,ni=lt(ei,['className','cssModule','tag','getRef']),li=w(it(ti,'card-link'),oi);return g.createElement(si,at({},ni,{ref:ai,className:li}))};Na.propTypes=va,Na.defaultProps={tag:'a'};var ka=g.PropTypes,Ca={tag:ka.oneOfType([ka.func,ka.string]),className:ka.string,cssModule:ka.object},_a=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-footer'),oi);return g.createElement(si,at({},ai,{className:ni}))};_a.propTypes=Ca,_a.defaultProps={tag:'div'};var Oa=g.PropTypes,Ea={tag:Oa.oneOfType([Oa.func,Oa.string]),className:Oa.string,cssModule:Oa.object},wa=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-header'),oi);return g.createElement(si,at({},ai,{className:ni}))};wa.propTypes=Ea,wa.defaultProps={tag:'div'};var xa=g.PropTypes,ja={tag:xa.oneOfType([xa.func,xa.string]),top:xa.bool,bottom:xa.bool,className:xa.string,cssModule:xa.object},Aa=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.top,ai=ei.bottom,ni=ei.tag,li=lt(ei,['className','cssModule','top','bottom','tag']),ri='card-img';si&&(ri='card-img-top'),ai&&(ri='card-img-bottom');var ii=w(it(ti,ri),oi);return g.createElement(ni,at({},li,{className:ii}))};Aa.propTypes=ja,Aa.defaultProps={tag:'img'};var La=g.PropTypes,Sa={tag:La.oneOfType([La.func,La.string]),className:La.string,cssModule:La.object},Ia=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-img-overlay'),oi);return g.createElement(si,at({},ai,{className:ni}))};Ia.propTypes=Sa,Ia.defaultProps={tag:'div'};var Ra=g.PropTypes,Ba={tag:Ra.oneOfType([Ra.func,Ra.string]),className:Ra.string,cssModule:Ra.object},Ua=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-subtitle'),oi);return g.createElement(si,at({},ai,{className:ni}))};Ua.propTypes=Ba,Ua.defaultProps={tag:'h6'};var Ha=g.PropTypes,qa={tag:Ha.oneOfType([Ha.func,Ha.string]),className:Ha.string,cssModule:Ha.object},Fa=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-text'),oi);return g.createElement(si,at({},ai,{className:ni}))};Fa.propTypes=qa,Fa.defaultProps={tag:'p'};var Va=g.PropTypes,Ya={tag:Va.oneOfType([Va.func,Va.string]),className:Va.string,cssModule:Va.object},Xa=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'card-title'),oi);return g.createElement(si,at({},ai,{className:ni}))};Xa.propTypes=Ya,Xa.defaultProps={tag:'h4'};var Ka=g.PropTypes,Za={placement:g.PropTypes.oneOf(dt),target:Ka.string.isRequired,isOpen:Ka.bool,tether:Ka.object,tetherRef:Ka.func,className:Ka.string,cssModule:Ka.object,toggle:Ka.func},Qa={classPrefix:'bs-tether',classes:{element:!1,enabled:'show'},constraints:[{to:'scrollParent',attachment:'together none'},{to:'window',attachment:'together none'}]},en=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.getTetherConfig=oi.getTetherConfig.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'getTetherConfig',value:function(){var oi=C(this.props.placement);return at({},Qa,oi,{target:'#'+this.props.target},this.props.tether)}},{key:'render',value:function(){if(!this.props.isOpen)return null;var oi=this.getTetherConfig(),si=w(it('popover-inner',this.props.className),this.props.cssModule),ai=Ao(this.props,Object.keys(Za));return g.createElement(Go,{className:w('popover',this.props.cssModule),tether:oi,tetherRef:this.props.tetherRef,isOpen:this.props.isOpen,toggle:this.props.toggle},g.createElement('div',at({},ai,{className:si})))}}]),ei}(g.Component);en.propTypes=Za,en.defaultProps={isOpen:!1,placement:'bottom',toggle:function(){}};var tn=g.PropTypes,sn={tag:tn.oneOfType([tn.func,tn.string]),className:tn.string,cssModule:tn.object},nn=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'popover-title'),oi);return g.createElement(si,at({},ai,{className:ni}))};nn.propTypes=sn,nn.defaultProps={tag:'h3'};var ln=g.PropTypes,rn={tag:ln.oneOfType([ln.func,ln.string]),className:ln.string,cssModule:ln.object},pn=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'popover-content'),oi);return g.createElement(si,at({},ai,{className:ni}))};pn.propTypes=rn,pn.defaultProps={tag:'div'};var cn=0/0,un='[object Symbol]',gn=/^\s+|\s+$/g,mn=/^[-+]0x[0-9a-f]+$/i,hn=/^0b[01]+$/i,bn=/^0o[0-7]+$/i,yn=parseInt,vn=Object.prototype,Tn=vn.toString,Nn=function(Qr){if('number'==typeof Qr)return Qr;if(Ke(Qr))return cn;if($e(Qr)){var ei='function'==typeof Qr.valueOf?Qr.valueOf():Qr;Qr=$e(ei)?ei+'':ei}if('string'!=typeof Qr)return 0===Qr?Qr:+Qr;Qr=Qr.replace(gn,'');var ti=hn.test(Qr);return ti||bn.test(Qr)?yn(Qr.slice(2),ti?2:8):mn.test(Qr)?cn:+Qr},kn=g.PropTypes,Cn={children:kn.node,bar:kn.bool,multi:kn.bool,tag:kn.string,value:kn.oneOfType([kn.string,kn.number]),max:kn.oneOfType([kn.string,kn.number]),animated:kn.bool,striped:kn.bool,color:kn.string,className:kn.string,barClassName:kn.string,cssModule:kn.object},On=function(ei){var ti=ei.children,oi=ei.className,si=ei.barClassName,ai=ei.cssModule,ni=ei.value,li=ei.max,ri=ei.animated,ii=ei.striped,di=ei.color,pi=ei.bar,ci=ei.multi,ui=ei.tag,gi=lt(ei,['children','className','barClassName','cssModule','value','max','animated','striped','color','bar','multi','tag']),fi=100*(Nn(ni)/Nn(li)),mi=w(it(oi,'progress'),ai),hi=w(it('progress-bar',pi?oi||si:si,ri?'progress-bar-animated':null,di?'bg-'+di:null,ii||ri?'progress-bar-striped':null),ai),bi=ci?ti:g.createElement('div',{className:hi,style:{width:fi+'%'},role:'progressbar','aria-valuenow':ni,'aria-valuemin':'0','aria-valuemax':li,children:ti});return pi?bi:g.createElement(ui,at({},gi,{className:mi,children:bi}))};On.propTypes=Cn,On.defaultProps={tag:'div',value:0,max:100};var En=g.PropTypes,Pn={isOpen:En.bool,size:En.string,toggle:En.func,keyboard:En.bool,backdrop:En.oneOfType([En.bool,En.oneOf(['static'])]),onEnter:En.func,onExit:En.func,children:En.node,className:En.string,wrapClassName:En.string,modalClassName:En.string,backdropClassName:En.string,contentClassName:En.string,cssModule:En.object,zIndex:En.oneOfType([En.number,En.string])},xn=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.originalBodyPadding=null,oi.isBodyOverflowing=!1,oi.togglePortal=oi.togglePortal.bind(oi),oi.handleBackdropClick=oi.handleBackdropClick.bind(oi),oi.handleEscape=oi.handleEscape.bind(oi),oi.destroy=oi.destroy.bind(oi),oi.onEnter=oi.onEnter.bind(oi),oi.onExit=oi.onExit.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'componentDidMount',value:function(){this.props.isOpen&&this.togglePortal()}},{key:'componentDidUpdate',value:function(oi){this.props.isOpen===oi.isOpen?this._element&&this.renderIntoSubtree():this.togglePortal()}},{key:'componentWillUnmount',value:function(){this.onExit()}},{key:'onEnter',value:function(){this.props.onEnter&&this.props.onEnter()}},{key:'onExit',value:function(){this.destroy(),this.props.onExit&&this.props.onExit()}},{key:'handleEscape',value:function(oi){this.props.keyboard&&27===oi.keyCode&&this.props.toggle&&this.props.toggle()}},{key:'handleBackdropClick',value:function(oi){if(!0===this.props.backdrop){var si=this._dialog;oi.target&&!si.contains(oi.target)&&this.props.toggle&&this.props.toggle()}}},{key:'togglePortal',value:function(){this.props.isOpen?(this._focus=!0,this.show()):this.hide()}},{key:'destroy',value:function(){this._element&&(m.unmountComponentAtNode(this._element),document.body.removeChild(this._element),this._element=null);var oi=document.body.className.replace('modal-open','');document.body.className=w(it(oi).trim(),this.props.cssModule),_(this.originalBodyPadding)}},{key:'hide',value:function(){this.renderIntoSubtree()}},{key:'show',value:function(){var oi=document.body.className;this._element=document.createElement('div'),this._element.setAttribute('tabindex','-1'),this._element.style.position='relative',this._element.style.zIndex=this.props.zIndex,this.originalBodyPadding=E(),P(),document.body.appendChild(this._element),document.body.className=w(it(oi,'modal-open'),this.props.cssModule),this.renderIntoSubtree()}},{key:'renderIntoSubtree',value:function(){m.unstable_renderSubtreeIntoContainer(this,this.renderChildren(),this._element),this._focus&&(this._dialog.parentNode.focus(),this._focus=!1)}},{key:'renderChildren',value:function(){var oi=this,si=Ao(this.props,['toggle','keyboard','onEnter','onExit','zIndex']),ai=si.className,ni=si.wrapClassName,li=si.modalClassName,ri=si.backdropClassName,ii=si.contentClassName,di=si.cssModule,pi=si.isOpen,ci=si.size,ui=si.backdrop,gi=si.children,fi=lt(si,['className','wrapClassName','modalClassName','backdropClassName','contentClassName','cssModule','isOpen','size','backdrop','children']);return g.createElement(h,{component:'div',className:w(ni)},pi&&g.createElement(Ys,{key:'modal-dialog',onEnter:this.onEnter,onLeave:this.onExit,transitionAppearTimeout:300,transitionEnterTimeout:300,transitionLeaveTimeout:300,onClickCapture:this.handleBackdropClick,onKeyUp:this.handleEscape,cssModule:di,className:w(it('modal',li),di),style:{display:'block'},tabIndex:'-1'},g.createElement('div',at({className:w(it('modal-dialog',ai,st({},'modal-'+ci,ci)),di),role:'document',ref:function(hi){return oi._dialog=hi}},fi),g.createElement('div',{className:w(it('modal-content',ii),di)},gi))),pi&&ui&&g.createElement(Ys,{key:'modal-backdrop',transitionAppearTimeout:150,transitionEnterTimeout:150,transitionLeaveTimeout:150,cssModule:di,className:w(it('modal-backdrop',ri),di)}))}},{key:'render',value:function(){return null}}]),ei}(g.Component);xn.propTypes=Pn,xn.defaultProps={isOpen:!1,backdrop:!0,keyboard:!0,zIndex:1050};var jn=g.PropTypes,Dn={tag:jn.oneOfType([jn.func,jn.string]),wrapTag:jn.oneOfType([jn.func,jn.string]),toggle:jn.func,className:jn.string,cssModule:jn.object,children:jn.node},Ln=function(ei){var ti,oi=ei.className,si=ei.cssModule,ai=ei.children,ni=ei.toggle,li=ei.tag,ri=ei.wrapTag,ii=lt(ei,['className','cssModule','children','toggle','tag','wrapTag']),di=w(it(oi,'modal-header'),si);return ni&&(ti=g.createElement('button',{type:'button',onClick:ni,className:'close','aria-label':'Close'},g.createElement('span',{'aria-hidden':'true'},'\xD7'))),g.createElement(ri,at({},ii,{className:di}),g.createElement(li,{className:w('modal-title',si)},ai),ti)};Ln.propTypes=Dn,Ln.defaultProps={tag:'h4',wrapTag:'div'};var Sn=g.PropTypes,zn={tag:Sn.oneOfType([Sn.func,Sn.string]),className:Sn.string,cssModule:Sn.object},Rn=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'modal-body'),oi);return g.createElement(si,at({},ai,{className:ni}))};Rn.propTypes=zn,Rn.defaultProps={tag:'div'};var Bn=g.PropTypes,Wn={tag:Bn.oneOfType([Bn.func,Bn.string]),className:Bn.string,cssModule:Bn.object},Hn=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'modal-footer'),oi);return g.createElement(si,at({},ai,{className:ni}))};Hn.propTypes=Wn,Hn.defaultProps={tag:'div'};var qn=g.PropTypes,Gn={placement:g.PropTypes.oneOf(dt),target:qn.oneOfType([qn.string,qn.object]).isRequired,isOpen:qn.bool,disabled:qn.bool,tether:qn.object,tetherRef:qn.func,className:qn.string,cssModule:qn.object,toggle:qn.func,autohide:qn.bool,delay:qn.oneOfType([qn.shape({show:qn.number,hide:qn.number}),qn.number])},Fn={show:0,hide:250},Yn={classPrefix:'bs-tether',classes:{element:!1,enabled:'show'},constraints:[{to:'scrollParent',attachment:'together none'},{to:'window',attachment:'together none'}]},$n=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.addTargetEvents=oi.addTargetEvents.bind(oi),oi.getTarget=oi.getTarget.bind(oi),oi.getTetherConfig=oi.getTetherConfig.bind(oi),oi.handleDocumentClick=oi.handleDocumentClick.bind(oi),oi.removeTargetEvents=oi.removeTargetEvents.bind(oi),oi.toggle=oi.toggle.bind(oi),oi.onMouseOverTooltip=oi.onMouseOverTooltip.bind(oi),oi.onMouseLeaveTooltip=oi.onMouseLeaveTooltip.bind(oi),oi.onMouseOverTooltipContent=oi.onMouseOverTooltipContent.bind(oi),oi.onMouseLeaveTooltipContent=oi.onMouseLeaveTooltipContent.bind(oi),oi.show=oi.show.bind(oi),oi.hide=oi.hide.bind(oi),oi}return nt(ei,Qr),ot(ei,[{key:'componentDidMount',value:function(){this._target=this.getTarget(),this.addTargetEvents()}},{key:'componentWillUnmount',value:function(){this.removeTargetEvents()}},{key:'onMouseOverTooltip',value:function(){this._hideTimeout&&this.clearHideTimeout(),this._showTimeout=setTimeout(this.show,this.getDelay('show'))}},{key:'onMouseLeaveTooltip',value:function(){this._showTimeout&&this.clearShowTimeout(),this._hideTimeout=setTimeout(this.hide,this.getDelay('hide'))}},{key:'onMouseOverTooltipContent',value:function(){this.props.autohide||this._hideTimeout&&this.clearHideTimeout()}},{key:'onMouseLeaveTooltipContent',value:function(){this.props.autohide||(this._showTimeout&&this.clearShowTimeout(),this._hideTimeout=setTimeout(this.hide,this.getDelay('hide')))}},{key:'getDelay',value:function(oi){var si=this.props.delay;return'object'===('undefined'==typeof si?'undefined':et(si))?isNaN(si[oi])?Fn[oi]:si[oi]:si}},{key:'getTarget',value:function(){var oi=this.props.target;return'object'===('undefined'==typeof oi?'undefined':et(oi))?oi:document.getElementById(oi)}},{key:'getTetherConfig',value:function(){var oi=C(this.props.placement);return at({},Yn,oi,{target:this.getTarget},this.props.tether)}},{key:'show',value:function(){this.props.isOpen||(this.clearShowTimeout(),this.toggle())}},{key:'hide',value:function(){this.props.isOpen&&(this.clearHideTimeout(),this.toggle())}},{key:'clearShowTimeout',value:function(){clearTimeout(this._showTimeout),this._showTimeout=void 0}},{key:'clearHideTimeout',value:function(){clearTimeout(this._hideTimeout),this._hideTimeout=void 0}},{key:'handleDocumentClick',value:function(oi){(oi.target===this._target||this._target.contains(oi.target))&&(this._hideTimeout&&this.clearHideTimeout(),!this.props.isOpen&&this.toggle())}},{key:'addTargetEvents',value:function(){this._target.addEventListener('mouseover',this.onMouseOverTooltip,!0),this._target.addEventListener('mouseout',this.onMouseLeaveTooltip,!0),document.addEventListener('click',this.handleDocumentClick,!0)}},{key:'removeTargetEvents',value:function(){this._target.removeEventListener('mouseover',this.onMouseOverTooltip,!0),this._target.removeEventListener('mouseout',this.onMouseLeaveTooltip,!0),document.removeEventListener('click',this.handleDocumentClick,!0)}},{key:'toggle',value:function(oi){return this.props.disabled?oi&&oi.preventDefault():this.props.toggle()}},{key:'render',value:function(){if(!this.props.isOpen)return null;var oi=Ao(this.props,Object.keys(Gn)),si=w(it('tooltip-inner',this.props.className),this.props.cssModule),ai=this.getTetherConfig();return g.createElement(Go,{className:'tooltip',tether:ai,tetherRef:this.props.tetherRef,isOpen:this.props.isOpen,toggle:this.toggle},g.createElement('div',at({},oi,{className:si,onMouseOver:this.onMouseOverTooltipContent,onMouseLeave:this.onMouseLeaveTooltipContent})))}}]),ei}(g.Component);$n.propTypes=Gn,$n.defaultProps={isOpen:!1,placement:'bottom',delay:Fn,autohide:!0,toggle:function(){}};var Xn=g.PropTypes,Kn={className:Xn.string,cssModule:Xn.object,size:Xn.string,bordered:Xn.bool,striped:Xn.bool,inverse:Xn.bool,hover:Xn.bool,reflow:Xn.bool,responsive:Xn.bool,tag:Xn.oneOfType([Xn.func,Xn.string]),responsiveTag:Xn.oneOfType([Xn.func,Xn.string])},Jn=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.size,ai=ei.bordered,ni=ei.striped,li=ei.inverse,ri=ei.hover,ii=ei.reflow,di=ei.responsive,pi=ei.tag,ci=ei.responsiveTag,ui=lt(ei,['className','cssModule','size','bordered','striped','inverse','hover','reflow','responsive','tag','responsiveTag']),gi=w(it(ti,'table',!!si&&'table-'+si,!!ai&&'table-bordered',!!ni&&'table-striped',!!li&&'table-inverse',!!ri&&'table-hover',!!ii&&'table-reflow'),oi),fi=g.createElement(pi,at({},ui,{className:gi}));return di?g.createElement(ci,{className:'table-responsive'},fi):fi};Jn.propTypes=Kn,Jn.defaultProps={tag:'table',responsiveTag:'div'};var Qn=g.PropTypes,tl={tag:Qn.oneOfType([Qn.func,Qn.string]),flush:Qn.bool,className:Qn.string,cssModule:Qn.object},sl=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=ei.flush,ni=lt(ei,['className','cssModule','tag','flush']),li=w(it(ti,'list-group',!!ai&&'list-group-flush'),oi);return g.createElement(si,at({},ni,{className:li}))};sl.propTypes=tl,sl.defaultProps={tag:'ul'};var al=g.PropTypes,nl={children:al.node,inline:al.bool,tag:al.oneOfType([al.func,al.string]),getRef:al.oneOfType([al.func,al.string]),className:al.string,cssModule:al.object},rl=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.inline,ai=ei.tag,ni=ei.getRef,li=lt(ei,['className','cssModule','inline','tag','getRef']),ri=w(it(ti,!!si&&'form-inline'),oi);return g.createElement(ai,at({},li,{ref:ni,className:ri}))};rl.propTypes=nl,rl.defaultProps={tag:'form'};var il=g.PropTypes,dl={children:il.node,tag:il.string,className:il.string,cssModule:il.object},cl=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'form-control-feedback'),oi);return g.createElement(si,at({},ai,{className:ni}))};cl.propTypes=dl,cl.defaultProps={tag:'div'};var ul=g.PropTypes,gl={children:ul.node,row:ul.bool,check:ul.bool,disabled:ul.bool,tag:ul.string,color:ul.string,className:ul.string,cssModule:ul.object},ml=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.row,ai=ei.disabled,ni=ei.color,li=ei.check,ri=ei.tag,ii=lt(ei,['className','cssModule','row','disabled','color','check','tag']),di=w(it(ti,!!ni&&'has-'+ni,!!si&&'row',li?'form-check':'form-group',li&&ai&&'disabled'),oi);return g.createElement(ri,at({},ii,{className:di}))};ml.propTypes=gl,ml.defaultProps={tag:'div'};var hl=g.PropTypes,bl={children:hl.node,inline:hl.bool,tag:hl.string,color:hl.string,className:hl.string,cssModule:hl.object},vl=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.inline,ai=ei.color,ni=ei.tag,li=lt(ei,['className','cssModule','inline','color','tag']),ri=w(it(ti,!si&&'form-text',!!ai&&'text-'+ai),oi);return g.createElement(ni,at({},li,{className:ri}))};vl.propTypes=bl,vl.defaultProps={tag:'small'};var Tl=g.PropTypes,Nl={children:Tl.node,type:Tl.string,size:Tl.string,state:Tl.string,tag:Tl.oneOfType([Tl.func,Tl.string]),getRef:Tl.oneOfType([Tl.func,Tl.string]),static:Tl.bool,addon:Tl.bool,className:Tl.string,cssModule:Tl.object},Cl=function(Qr){function ei(){return tt(this,ei),rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).apply(this,arguments))}return nt(ei,Qr),ot(ei,[{key:'render',value:function(){var oi=this.props,si=oi.className,ai=oi.cssModule,ni=oi.type,li=oi.size,ri=oi.state,ii=oi.tag,di=oi.addon,pi=oi.static,ci=oi.getRef,ui=lt(oi,['className','cssModule','type','size','state','tag','addon','static','getRef']),gi=-1<['radio','checkbox'].indexOf(ni),bi='select'===ni||'textarea'===ni?ni:'input',yi='form-control';pi?(yi+='-static',bi=ii):'file'===ni?yi+='-file':gi&&(di?yi=null:yi='form-check-input');var vi=w(it(si,!!ri&&'form-control-'+ri,!!li&&'form-control-'+li,yi),ai);return'input'===bi&&(ui.type=ni),g.createElement(bi,at({},ui,{ref:ci,className:vi}))}}]),ei}(g.Component);Cl.propTypes=Nl,Cl.defaultProps={tag:'p',type:'text'};var Ml=g.PropTypes,_l={tag:Ml.oneOfType([Ml.func,Ml.string]),size:Ml.string,className:Ml.string,cssModule:Ml.object},El=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=ei.size,ni=lt(ei,['className','cssModule','tag','size']),li=w(it(ti,'input-group',ai?'input-group-'+ai:null),oi);return g.createElement(si,at({},ni,{className:li}))};El.propTypes=_l,El.defaultProps={tag:'div'};var Pl=g.PropTypes,wl={tag:Pl.oneOfType([Pl.func,Pl.string]),className:Pl.string,cssModule:Pl.object},jl=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=lt(ei,['className','cssModule','tag']),ni=w(it(ti,'input-group-addon'),oi);return g.createElement(si,at({},ai,{className:ni}))};jl.propTypes=wl,jl.defaultProps={tag:'div'};var Dl=g.PropTypes,Al={tag:Dl.oneOfType([Dl.func,Dl.string]),children:Dl.node,groupClassName:Dl.string,groupAttributes:Dl.object,className:Dl.string,cssModule:Dl.object},Sl=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=ei.children,ni=ei.groupClassName,li=ei.groupAttributes,ri=lt(ei,['className','cssModule','tag','children','groupClassName','groupAttributes']);if('string'==typeof ai){var ii=w(it(ni,'input-group-btn'),oi);return g.createElement(si,at({},li,{className:ii}),g.createElement(Ns,at({},ri,{className:ti,children:ai})))}var di=w(it(ti,'input-group-btn'),oi);return g.createElement(si,at({},ri,{className:di,children:ai}))};Sl.propTypes=Al,Sl.defaultProps={tag:'div'};var zl=g.PropTypes,Il=['xs','sm','md','lg','xl'],Rl=zl.oneOfType([zl.number,zl.string]),Bl=zl.oneOfType([zl.string,zl.number,zl.shape({size:Rl,push:Rl,pull:Rl,offset:Rl})]),Wl={children:zl.node,hidden:zl.bool,check:zl.bool,inline:zl.bool,disabled:zl.bool,size:zl.string,for:zl.string,tag:zl.string,className:zl.string,cssModule:zl.object,xs:Bl,sm:Bl,md:Bl,lg:Bl,xl:Bl},Hl=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.hidden,ai=ei.tag,ni=ei.check,li=ei.inline,ri=ei.disabled,ii=ei.size,di=ei.for,pi=lt(ei,['className','cssModule','hidden','tag','check','inline','disabled','size','for']),ci=[];Il.forEach(function(gi){var fi=ei[gi];if(delete pi[gi],fi&&fi.size){var mi;ci.push(w(it((mi={},st(mi,'col-'+gi+'-'+fi.size,fi.size),st(mi,'push-'+gi+'-'+fi.push,fi.push),st(mi,'pull-'+gi+'-'+fi.pull,fi.pull),st(mi,'offset-'+gi+'-'+fi.offset,fi.offset),mi))),oi)}else fi&&ci.push('col-'+gi+'-'+fi)});var ui=w(it(ti,!!si&&'sr-only',!!ni&&'form-check-'+(li?'inline':'label'),ni&&li&&ri&&'disabled',!!ii&&'col-form-label-'+ii,ci,!!ci.length&&'col-form-label'),oi);return g.createElement(ai,at({htmlFor:di},pi,{className:ui}))};Hl.propTypes=Wl,Hl.defaultProps={tag:'label'};var ql=g.PropTypes,Gl={body:ql.bool,bottom:ql.bool,children:ql.node,className:ql.string,cssModule:ql.object,heading:ql.bool,left:ql.bool,list:ql.bool,middle:ql.bool,object:ql.bool,right:ql.bool,tag:ql.oneOfType([ql.func,ql.string]),top:ql.bool},Fl=function(ei){var ti=ei.body,oi=ei.bottom,si=ei.className,ai=ei.cssModule,ni=ei.heading,li=ei.left,ri=ei.list,ii=ei.middle,di=ei.object,pi=ei.right,ci=ei.tag,ui=ei.top,gi=lt(ei,['body','bottom','className','cssModule','heading','left','list','middle','object','right','tag','top']),fi;fi=ni?'h4':li||pi?'a':di?'img':ri?'ul':'div';var mi=ci||fi,hi=w(it(si,{'media-body':ti,'media-heading':ni,'media-left':li,'media-right':pi,'media-top':ui,'media-bottom':oi,'media-middle':ii,'media-object':di,'media-list':ri,media:!ti&&!ni&&!li&&!pi&&!ui&&!oi&&!ii&&!di&&!ri}),ai);return g.createElement(mi,at({},gi,{className:hi}))};Fl.propTypes=Gl;var Vl=g.PropTypes,Yl={children:Vl.node,className:Vl.string,cssModule:Vl.object,size:Vl.string,tag:Vl.oneOfType([Vl.func,Vl.string])},Xl=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.size,ai=ei.tag,ni=lt(ei,['className','cssModule','size','tag']),li=w(it(ti,'pagination',st({},'pagination-'+si,!!si)),oi);return g.createElement(ai,at({},ni,{className:li}))};Xl.propTypes=Yl,Xl.defaultProps={tag:'ul'};var Kl=g.PropTypes,Zl={active:Kl.bool,children:Kl.node,className:Kl.string,cssModule:Kl.object,disabled:Kl.bool,tag:Kl.oneOfType([Kl.func,Kl.string])},Ql=function(ei){var ti=ei.active,oi=ei.className,si=ei.cssModule,ai=ei.disabled,ni=ei.tag,li=lt(ei,['active','className','cssModule','disabled','tag']),ri=w(it(oi,'page-item',{active:ti,disabled:ai}),si);return g.createElement(ni,at({},li,{className:ri}))};Ql.propTypes=Zl,Ql.defaultProps={tag:'li'};var er=g.PropTypes,tr={'aria-label':er.string,children:er.node,className:er.string,cssModule:er.object,next:er.bool,previous:er.bool,tag:er.oneOfType([er.func,er.string])},sr=function(ei){var ii,ti=ei.className,oi=ei.cssModule,si=ei.next,ai=ei.previous,ni=ei.tag,li=lt(ei,['className','cssModule','next','previous','tag']),ri=w(it(ti,'page-link'),oi);ai?ii='Previous':si&&(ii='Next');var pi,di=ei['aria-label']||ii;ai?pi='\xAB':si&&(pi='\xBB');var ci=ei.children;return(ai||si)&&(ci=[g.createElement('span',{'aria-hidden':'true',key:'caret'},ci||pi),g.createElement('span',{className:'sr-only',key:'sr'},di)]),g.createElement(ni,at({},li,{className:ri,'aria-label':di}),ci)};sr.propTypes=tr,sr.defaultProps={tag:'a'};var ar=g.PropTypes,nr=g.Component,lr={tag:ar.oneOfType([ar.func,ar.string]),activeTab:ar.any,className:ar.string,cssModule:ar.object},ir={activeTabId:ar.any},dr=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.state={activeTab:oi.props.activeTab},oi}return nt(ei,Qr),ot(ei,[{key:'getChildContext',value:function(){return{activeTabId:this.state.activeTab}}},{key:'componentWillReceiveProps',value:function(oi){this.state.activeTab!==oi.activeTab&&this.setState({activeTab:oi.activeTab})}},{key:'render',value:function(){var oi=this.props,si=oi.className,ai=oi.cssModule,ni=oi.tag,li=Ao(this.props,Object.keys(lr)),ri=w(it('tab-content',si),ai);return g.createElement(ni,at({},li,{className:ri}))}}]),ei}(nr);dr.propTypes=lr,dr.defaultProps={tag:'div'},dr.childContextTypes=ir;var pr=g.PropTypes,cr={tag:pr.oneOfType([pr.func,pr.string]),className:pr.string,cssModule:pr.object,tabId:pr.any},gr={activeTabId:pr.any};Je.propTypes=cr,Je.defaultProps={tag:'div'},Je.contextTypes=gr;var fr=g.PropTypes,mr={tag:fr.oneOfType([fr.func,fr.string]),fluid:fr.bool,className:fr.string,cssModule:fr.object},br=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=ei.fluid,ni=lt(ei,['className','cssModule','tag','fluid']),li=w(it(ti,'jumbotron',!!ai&&'jumbotron-fluid'),oi);return g.createElement(si,at({},ni,{className:li}))};br.propTypes=mr,br.defaultProps={tag:'div'};var yr=g.PropTypes,vr=function(ei){var ti=ei.children;return g.Children.toArray(ti)[0]||null},Tr={children:yr.node,className:yr.string,cssModule:yr.object,color:yr.string,isOpen:yr.bool,toggle:yr.func,tag:yr.oneOfType([yr.func,yr.string]),transitionAppearTimeout:yr.number,transitionEnterTimeout:yr.number,transitionLeaveTimeout:yr.number},kr=function(ei){var ti=ei.className,oi=ei.cssModule,si=ei.tag,ai=ei.color,ni=ei.isOpen,li=ei.toggle,ri=ei.children,ii=ei.transitionAppearTimeout,di=ei.transitionEnterTimeout,pi=ei.transitionLeaveTimeout,ci=lt(ei,['className','cssModule','tag','color','isOpen','toggle','children','transitionAppearTimeout','transitionEnterTimeout','transitionLeaveTimeout']),ui=w(it(ti,'alert','alert-'+ai,{'alert-dismissible':li}),oi),gi=g.createElement(si,at({},ci,{className:ui,role:'alert'}),li?g.createElement('button',{type:'button',className:'close','aria-label':'Close',onClick:li},g.createElement('span',{'aria-hidden':'true'},'\xD7')):null,ri);return g.createElement(y,{component:vr,transitionName:{appear:'fade',appearActive:'show',enter:'fade',enterActive:'show',leave:'fade',leaveActive:'out'},transitionAppear:0<ii,transitionAppearTimeout:ii,transitionEnter:0<di,transitionEnterTimeout:di,transitionLeave:0<pi,transitionLeaveTimeout:pi},ni?gi:null)};kr.propTypes=Tr,kr.defaultProps={color:'success',isOpen:!0,tag:'div',transitionAppearTimeout:150,transitionEnterTimeout:150,transitionLeaveTimeout:150};var Cr=g.PropTypes,Mr=g.Component,_r='SHOW',Or='SHOWN',Er='HIDE',Pr='HIDDEN',wr={isOpen:Cr.bool,className:Cr.node,tag:Cr.oneOfType([Cr.func,Cr.string]),cssModule:Cr.object,navbar:Cr.bool,delay:Cr.oneOfType([Cr.shape({show:Cr.number,hide:Cr.number}),Cr.number]),onOpened:Cr.func,onClosed:Cr.func},xr={show:350,hide:350},Dr=function(Qr){function ei(ti){tt(this,ei);var oi=rt(this,(ei.__proto__||Object.getPrototypeOf(ei)).call(this,ti));return oi.state={collapse:ti.isOpen?Or:Pr,height:null},oi.element=null,oi}return nt(ei,Qr),ot(ei,[{key:'componentWillReceiveProps',value:function(oi){var si=this,ai=oi.isOpen,ni=this.state.collapse;ai&&ni===Pr?this.setState({collapse:_r},function(){si.setState({height:si.getHeight()}),si.transitionTag=setTimeout(function(){si.setState({collapse:Or,height:null})},si.getDelay('show'))}):!ai&&ni===Or&&(this.setState({height:this.getHeight()},function(){si.setState({collapse:Er,height:si.getHeight()},function(){si.setState({height:0})})}),this.transitionTag=setTimeout(function(){si.setState({collapse:Pr,height:null})},this.getDelay('hide')))}},{key:'componentDidUpdate',value:function(oi,si){this.state.collapse===Or&&si&&si.collapse!==Or&&this.props.onOpened(),this.state.collapse===Pr&&si&&si.collapse!==Pr&&this.props.onClosed()}},{key:'componentWillUnmount',value:function(){clearTimeout(this.transitionTag)}},{key:'getDelay',value:function(oi){var si=this.props.delay;return'object'===('undefined'==typeof si?'undefined':et(si))?isNaN(si[oi])?xr[oi]:si[oi]:si}},{key:'getHeight',value:function(){return this.element.scrollHeight}},{key:'render',value:function(){var ui,oi=this,si=Ao(this.props,['isOpen','delay','onOpened','onClosed']),ai=si.navbar,ni=si.className,li=si.cssModule,ri=si.tag,ii=lt(si,['navbar','className','cssModule','tag']),di=this.state,pi=di.collapse,ci=di.height;ui=pi===_r?'collapsing':pi===Or?'collapse show':pi===Er?'collapsing':pi===Pr?'collapse':'collapse';var gi=w(it(ni,ui,ai&&'navbar-collapse'),li),fi=null===ci?null:{height:ci};return g.createElement(ri,at({},ii,{style:at({},ii.style,fi),className:gi,ref:function(hi){oi.element=hi}}))}}]),ei}(Mr);Dr.propTypes=wr,Dr.defaultProps={isOpen:!1,tag:'div',delay:xr,onOpened:function(){},onClosed:function(){}};var Ar=g.PropTypes,Lr={tag:Ar.oneOfType([Ar.func,Ar.string]),active:Ar.bool,disabled:Ar.bool,color:Ar.string,action:Ar.bool,className:Ar.any},zr=function(ei){ei.preventDefault()},Ir=function(ei){var ti=ei.className,oi=ei.tag,si=ei.active,ai=ei.disabled,ni=ei.action,li=ei.color,ri=lt(ei,['className','tag','active','disabled','action','color']),ii=it(ti,!!si&&'active',!!ai&&'disabled',!!ni&&'list-group-item-action',!!li&&'list-group-item-'+li,'list-group-item');return ai&&(ri.onClick=zr),g.createElement(oi,at({},ri,{className:ii}))};Ir.propTypes=Lr,Ir.defaultProps={tag:'li'};var Rr=g.PropTypes,Br={tag:Rr.oneOfType([Rr.func,Rr.string]),className:Rr.any},Ur=function(ei){var ti=ei.className,oi=ei.tag,si=lt(ei,['className','tag']),ai=it(ti,'list-group-item-heading');return g.createElement(oi,at({},si,{className:ai}))};Ur.propTypes=Br,Ur.defaultProps={tag:'h5'};var Hr=g.PropTypes,qr={tag:Hr.oneOfType([Hr.func,Hr.string]),className:Hr.any},Fr=function(ei){var ti=ei.className,oi=ei.tag,si=lt(ei,['className','tag']),ai=it(ti,'list-group-item-text');return g.createElement(oi,at({},si,{className:ai}))};Fr.propTypes=qr,Fr.defaultProps={tag:'p'};var Vr=g.Component,Yr={UncontrolledAlert:kr,UncontrolledButtonDropdown:Ms,UncontrolledDropdown:ts,UncontrolledNavDropdown:ns,UncontrolledTooltip:$n};Object.keys(Yr).forEach(function(Qr){var ei=Yr[Qr],oi=function(si){function ai(ni){tt(this,ai);var li=rt(this,(ai.__proto__||Object.getPrototypeOf(ai)).call(this,ni));return li.state={isOpen:ei===kr},li.toggle=li.toggle.bind(li),li}return nt(ai,si),ot(ai,[{key:'toggle',value:function(){this.setState({isOpen:!this.state.isOpen})}},{key:'render',value:function(){return g.createElement(ei,at({isOpen:this.state.isOpen,toggle:this.toggle},this.props))}}]),ai}(Vr);oi.displayName=Qr,Yr[Qr]=oi});var $r=Yr.UncontrolledAlert,Xr=Yr.UncontrolledButtonDropdown,Kr=Yr.UncontrolledDropdown,Zr=Yr.UncontrolledNavDropdown,Jr=Yr.UncontrolledTooltip;d.Alert=kr,d.Container=gt,d.Row=bt,d.Col=Ot,d.Navbar=jt,d.NavbarBrand=St,d.NavbarToggler=Wt,d.Nav=Gt,d.NavItem=$t,d.NavDropdown=ns,d.NavLink=ds,d.Breadcrumb=gs,d.BreadcrumbItem=bs,d.Button=Ns,d.ButtonDropdown=Ms,d.ButtonGroup=ws,d.ButtonToolbar=As,d.Dropdown=ts,d.DropdownItem=Rs,d.DropdownMenu=Xo,d.DropdownToggle=qs,d.Fade=Ys,d.Badge=Zs,d.Card=ta,d.CardLink=Na,d.CardGroup=na,d.CardDeck=da,d.CardColumns=ga,d.CardBlock=ba,d.CardFooter=_a,d.CardHeader=wa,d.CardImg=Aa,d.CardImgOverlay=Ia,d.CardSubtitle=Ua,d.CardText=Fa,d.CardTitle=Xa,d.Popover=en,d.PopoverContent=pn,d.PopoverTitle=nn,d.Progress=On,d.Modal=xn,d.ModalHeader=Ln,d.ModalBody=Rn,d.ModalFooter=Hn,d.TetherContent=Go,d.Tooltip=$n,d.Table=Jn,d.ListGroup=sl,d.Form=rl,d.FormFeedback=cl,d.FormGroup=ml,d.FormText=vl,d.Input=Cl,d.InputGroup=El,d.InputGroupAddon=jl,d.InputGroupButton=Sl,d.Label=Hl,d.Media=Fl,d.Pagination=Xl,d.PaginationItem=Ql,d.PaginationLink=sr,d.TabContent=dr,d.TabPane=Je,d.Jumbotron=br,d.Collapse=Dr,d.ListGroupItem=Ir,d.ListGroupItemText=Fr,d.ListGroupItemHeading=Ur,d.UncontrolledAlert=$r,d.UncontrolledButtonDropdown=Xr,d.UncontrolledDropdown=Kr,d.UncontrolledNavDropdown=Zr,d.UncontrolledTooltip=Jr,Object.defineProperty(d,'__esModule',{value:!0})});
	//# sourceMappingURL=reactstrap.min.js.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 18 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(55)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = routerWarning;
	exports._resetWarned = _resetWarned;
	
	var _warning = __webpack_require__(692);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var warned = {};
	
	function routerWarning(falseToWarn, message) {
	  // Only issue deprecation warnings once.
	  if (message.indexOf('deprecated') !== -1) {
	    if (warned[message]) {
	      return;
	    }
	
	    warned[message] = true;
	  }
	
	  message = '[react-router] ' + message;
	
	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }
	
	  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
	}
	
	function _resetWarned() {
	  warned = {};
	}

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(40);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	exports.__esModule = true;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSideEffect = __webpack_require__(669);
	
	var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);
	
	var _deepEqual = __webpack_require__(227);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _objectAssign = __webpack_require__(11);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _HelmetConstants = __webpack_require__(640);
	
	var _PlainComponent = __webpack_require__(641);
	
	var _PlainComponent2 = _interopRequireDefault(_PlainComponent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var HELMET_ATTRIBUTE = "data-react-helmet";
	
	var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
	    return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
	};
	
	var getInnermostProperty = function getInnermostProperty(propsList, property) {
	    for (var i = propsList.length - 1; i >= 0; i--) {
	        var props = propsList[i];
	
	        if (props[property]) {
	            return props[property];
	        }
	    }
	    return null;
	};
	
	var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
	    var innermostTitle = getInnermostProperty(propsList, "title");
	    var innermostTemplate = getInnermostProperty(propsList, "titleTemplate");
	
	    if (innermostTemplate && innermostTitle) {
	        // use function arg to avoid need to escape $ characters
	        return innermostTemplate.replace(/%s/g, function () {
	            return innermostTitle;
	        });
	    }
	
	    var innermostDefaultTitle = getInnermostProperty(propsList, "defaultTitle");
	
	    return innermostTitle || innermostDefaultTitle || "";
	};
	
	var getOnChangeClientState = function getOnChangeClientState(propsList) {
	    return getInnermostProperty(propsList, "onChangeClientState") || function () {};
	};
	
	var getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {
	    return propsList.filter(function (props) {
	        return typeof props[tagType] !== "undefined";
	    }).map(function (props) {
	        return props[tagType];
	    }).reduce(function (tagAttrs, current) {
	        return _extends({}, tagAttrs, current);
	    }, {});
	};
	
	var getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {
	    return propsList.filter(function (props) {
	        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== "undefined";
	    }).map(function (props) {
	        return props[_HelmetConstants.TAG_NAMES.BASE];
	    }).reverse().reduce(function (innermostBaseTag, tag) {
	        if (!innermostBaseTag.length) {
	            var keys = Object.keys(tag);
	
	            for (var i = 0; i < keys.length; i++) {
	                var attributeKey = keys[i];
	                var lowerCaseAttributeKey = attributeKey.toLowerCase();
	
	                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {
	                    return innermostBaseTag.concat(tag);
	                }
	            }
	        }
	
	        return innermostBaseTag;
	    }, []);
	};
	
	var getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {
	    // Calculate list of tags, giving priority innermost component (end of the propslist)
	    var approvedSeenTags = {};
	
	    return propsList.filter(function (props) {
	        return typeof props[tagName] !== "undefined";
	    }).map(function (props) {
	        return props[tagName];
	    }).reverse().reduce(function (approvedTags, instanceTags) {
	        var instanceSeenTags = {};
	
	        instanceTags.filter(function (tag) {
	            var primaryAttributeKey = void 0;
	            var keys = Object.keys(tag);
	            for (var i = 0; i < keys.length; i++) {
	                var attributeKey = keys[i];
	                var lowerCaseAttributeKey = attributeKey.toLowerCase();
	
	                // Special rule with link tags, since rel and href are both primary tags, rel takes priority
	                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === "canonical") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === "stylesheet")) {
	                    primaryAttributeKey = lowerCaseAttributeKey;
	                }
	                // Special case for innerHTML which doesn't work lowercased
	                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {
	                    primaryAttributeKey = attributeKey;
	                }
	            }
	
	            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {
	                return false;
	            }
	
	            var value = tag[primaryAttributeKey].toLowerCase();
	
	            if (!approvedSeenTags[primaryAttributeKey]) {
	                approvedSeenTags[primaryAttributeKey] = {};
	            }
	
	            if (!instanceSeenTags[primaryAttributeKey]) {
	                instanceSeenTags[primaryAttributeKey] = {};
	            }
	
	            if (!approvedSeenTags[primaryAttributeKey][value]) {
	                instanceSeenTags[primaryAttributeKey][value] = true;
	                return true;
	            }
	
	            return false;
	        }).reverse().forEach(function (tag) {
	            return approvedTags.push(tag);
	        });
	
	        // Update seen tags with tags from this instance
	        var keys = Object.keys(instanceSeenTags);
	        for (var i = 0; i < keys.length; i++) {
	            var attributeKey = keys[i];
	            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);
	
	            approvedSeenTags[attributeKey] = tagUnion;
	        }
	
	        return approvedTags;
	    }, []).reverse();
	};
	
	var updateTitle = function updateTitle(title, attributes) {
	    document.title = title || document.title;
	    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);
	};
	
	var updateAttributes = function updateAttributes(tagName, attributes) {
	    var htmlTag = document.getElementsByTagName(tagName)[0];
	    var helmetAttributeString = htmlTag.getAttribute(HELMET_ATTRIBUTE);
	    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(",") : [];
	    var attributesToRemove = [].concat(helmetAttributes);
	    var attributeKeys = Object.keys(attributes);
	
	    for (var i = 0; i < attributeKeys.length; i++) {
	        var attribute = attributeKeys[i];
	        var value = attributes[attribute] || "";
	        htmlTag.setAttribute(attribute, value);
	
	        if (helmetAttributes.indexOf(attribute) === -1) {
	            helmetAttributes.push(attribute);
	        }
	
	        var indexToSave = attributesToRemove.indexOf(attribute);
	        if (indexToSave !== -1) {
	            attributesToRemove.splice(indexToSave, 1);
	        }
	    }
	
	    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {
	        htmlTag.removeAttribute(attributesToRemove[_i]);
	    }
	
	    if (helmetAttributes.length === attributesToRemove.length) {
	        htmlTag.removeAttribute(HELMET_ATTRIBUTE);
	    } else {
	        htmlTag.setAttribute(HELMET_ATTRIBUTE, helmetAttributes.join(","));
	    }
	};
	
	var updateTags = function updateTags(type, tags) {
	    var headElement = document.head || document.querySelector("head");
	    var tagNodes = headElement.querySelectorAll(type + "[" + HELMET_ATTRIBUTE + "]");
	    var oldTags = Array.prototype.slice.call(tagNodes);
	    var newTags = [];
	    var indexToDelete = void 0;
	
	    if (tags && tags.length) {
	        tags.forEach(function (tag) {
	            var newElement = document.createElement(type);
	
	            for (var attribute in tag) {
	                if (tag.hasOwnProperty(attribute)) {
	                    if (attribute === "innerHTML") {
	                        newElement.innerHTML = tag.innerHTML;
	                    } else if (attribute === "cssText") {
	                        if (newElement.styleSheet) {
	                            newElement.styleSheet.cssText = tag.cssText;
	                        } else {
	                            newElement.appendChild(document.createTextNode(tag.cssText));
	                        }
	                    } else {
	                        var value = typeof tag[attribute] === "undefined" ? "" : tag[attribute];
	                        newElement.setAttribute(attribute, value);
	                    }
	                }
	            }
	
	            newElement.setAttribute(HELMET_ATTRIBUTE, "true");
	
	            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.
	            if (oldTags.some(function (existingTag, index) {
	                indexToDelete = index;
	                return newElement.isEqualNode(existingTag);
	            })) {
	                oldTags.splice(indexToDelete, 1);
	            } else {
	                newTags.push(newElement);
	            }
	        });
	    }
	
	    oldTags.forEach(function (tag) {
	        return tag.parentNode.removeChild(tag);
	    });
	    newTags.forEach(function (tag) {
	        return headElement.appendChild(tag);
	    });
	
	    return {
	        oldTags: oldTags,
	        newTags: newTags
	    };
	};
	
	var generateHtmlAttributesAsString = function generateHtmlAttributesAsString(attributes) {
	    return Object.keys(attributes).reduce(function (str, key) {
	        var attr = typeof attributes[key] !== "undefined" ? key + "=\"" + attributes[key] + "\"" : "" + key;
	        return str ? str + " " + attr : attr;
	    }, "");
	};
	
	var generateTitleAsString = function generateTitleAsString(type, title, attributes) {
	    var attributeString = generateHtmlAttributesAsString(attributes);
	    return attributeString ? "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\" " + attributeString + ">" + encodeSpecialCharacters(title) + "</" + type + ">" : "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\">" + encodeSpecialCharacters(title) + "</" + type + ">";
	};
	
	var generateTagsAsString = function generateTagsAsString(type, tags) {
	    return tags.reduce(function (str, tag) {
	        var attributeHtml = Object.keys(tag).filter(function (attribute) {
	            return !(attribute === "innerHTML" || attribute === "cssText");
	        }).reduce(function (string, attribute) {
	            var attr = typeof tag[attribute] === "undefined" ? attribute : attribute + "=\"" + encodeSpecialCharacters(tag[attribute]) + "\"";
	            return string ? string + " " + attr : attr;
	        }, "");
	
	        var tagContent = tag.innerHTML || tag.cssText || "";
	
	        var isSelfClosing = [_HelmetConstants.TAG_NAMES.NOSCRIPT, _HelmetConstants.TAG_NAMES.SCRIPT, _HelmetConstants.TAG_NAMES.STYLE].indexOf(type) === -1;
	
	        return str + "<" + type + " " + HELMET_ATTRIBUTE + "=\"true\" " + attributeHtml + (isSelfClosing ? "/>" : ">" + tagContent + "</" + type + ">");
	    }, "");
	};
	
	var generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {
	    // assigning into an array to define toString function on it
	    var initProps = _defineProperty({
	        key: title
	    }, HELMET_ATTRIBUTE, true);
	    var props = Object.keys(attributes).reduce(function (obj, key) {
	        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];
	        return obj;
	    }, initProps);
	
	    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];
	};
	
	var generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {
	    return tags.map(function (tag, i) {
	        var mappedTag = _defineProperty({
	            key: i
	        }, HELMET_ATTRIBUTE, true);
	
	        Object.keys(tag).forEach(function (attribute) {
	            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;
	
	            if (mappedAttribute === "innerHTML" || mappedAttribute === "cssText") {
	                var content = tag.innerHTML || tag.cssText;
	                mappedTag.dangerouslySetInnerHTML = { __html: content };
	            } else {
	                mappedTag[mappedAttribute] = tag[attribute];
	            }
	        });
	
	        return _react2.default.createElement(type, mappedTag);
	    });
	};
	
	var getMethodsForTag = function getMethodsForTag(type, tags) {
	    switch (type) {
	        case _HelmetConstants.TAG_NAMES.TITLE:
	            return {
	                toComponent: function toComponent() {
	                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes);
	                },
	                toString: function toString() {
	                    return generateTitleAsString(type, tags.title, tags.titleAttributes);
	                }
	            };
	        case _HelmetConstants.TAG_NAMES.HTML:
	            return {
	                toComponent: function toComponent() {
	                    return tags;
	                },
	                toString: function toString() {
	                    return generateHtmlAttributesAsString(tags);
	                }
	            };
	        default:
	            return {
	                toComponent: function toComponent() {
	                    return generateTagsAsReactComponent(type, tags);
	                },
	                toString: function toString() {
	                    return generateTagsAsString(type, tags);
	                }
	            };
	    }
	};
	
	var mapStateOnServer = function mapStateOnServer(_ref) {
	    var htmlAttributes = _ref.htmlAttributes,
	        title = _ref.title,
	        titleAttributes = _ref.titleAttributes,
	        baseTag = _ref.baseTag,
	        metaTags = _ref.metaTags,
	        linkTags = _ref.linkTags,
	        scriptTags = _ref.scriptTags,
	        noscriptTags = _ref.noscriptTags,
	        styleTags = _ref.styleTags;
	    return {
	        htmlAttributes: getMethodsForTag(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes),
	        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }),
	        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag),
	        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags),
	        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags),
	        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),
	        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),
	        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags)
	    };
	};
	
	var Helmet = function Helmet(Component) {
	    var _class, _temp;
	
	    return _temp = _class = function (_React$Component) {
	        _inherits(HelmetWrapper, _React$Component);
	
	        function HelmetWrapper() {
	            _classCallCheck(this, HelmetWrapper);
	
	            return _possibleConstructorReturn(this, (HelmetWrapper.__proto__ || Object.getPrototypeOf(HelmetWrapper)).apply(this, arguments));
	        }
	
	        _createClass(HelmetWrapper, [{
	            key: "shouldComponentUpdate",
	            value: function shouldComponentUpdate(nextProps) {
	                return !(0, _deepEqual2.default)(this.props, nextProps);
	            }
	        }, {
	            key: "render",
	            value: function render() {
	                return _react2.default.createElement(Component, this.props);
	            }
	        }], [{
	            key: "canUseDOM",
	
	
	            // Component.peek comes from react-side-effect:
	            // For testing, you may use a static peek() method available on the returned component.
	            // It lets you get the current state without resetting the mounted instance stack.
	            // Don’t use it for anything other than testing.
	            set: function set(canUseDOM) {
	                Component.canUseDOM = canUseDOM;
	            }
	            /**
	             * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
	             * @param {String} title: "Title"
	             * @param {String} defaultTitle: "Default Title"
	             * @param {String} titleTemplate: "MySite.com - %s"
	             * @param {Object} titleAttributes: {"itemprop": "name"}
	             * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
	             * @param {Array} meta: [{"name": "description", "content": "Test description"}]
	             * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
	             * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
	             * @param {Array} noscript: [{"innerHTML": "<img src='http://mysite.com/js/test.js'"}]
	             * @param {Array} style: [{"type": "text/css", "cssText": "div{ display: block; color: blue; }"}]
	             * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
	             */
	
	        }]);
	
	        return HelmetWrapper;
	    }(_react2.default.Component), _class.propTypes = {
	        htmlAttributes: _react2.default.PropTypes.object,
	        title: _react2.default.PropTypes.string,
	        defaultTitle: _react2.default.PropTypes.string,
	        titleTemplate: _react2.default.PropTypes.string,
	        titleAttributes: _react2.default.PropTypes.object,
	        base: _react2.default.PropTypes.object,
	        meta: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object),
	        link: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object),
	        script: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object),
	        noscript: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object),
	        style: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object),
	        onChangeClientState: _react2.default.PropTypes.func
	    }, _class.peek = Component.peek, _class.rewind = function () {
	        var mappedState = Component.rewind();
	        if (!mappedState) {
	            // provide fallback if mappedState is undefined
	            mappedState = mapStateOnServer({
	                htmlAttributes: {},
	                title: "",
	                titleAttributes: {},
	                baseTag: [],
	                metaTags: [],
	                linkTags: [],
	                scriptTags: [],
	                noscriptTags: [],
	                styleTags: []
	            });
	        }
	
	        return mappedState;
	    }, _temp;
	};
	
	var reducePropsToState = function reducePropsToState(propsList) {
	    return {
	        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.TAG_NAMES.HTML, propsList),
	        title: getTitleFromPropsList(propsList),
	        titleAttributes: getAttributesFromPropsList("titleAttributes", propsList),
	        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),
	        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),
	        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),
	        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
	        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),
	        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),
	        onChangeClientState: getOnChangeClientState(propsList)
	    };
	};
	
	var handleClientStateChange = function handleClientStateChange(newState) {
	    var htmlAttributes = newState.htmlAttributes,
	        title = newState.title,
	        titleAttributes = newState.titleAttributes,
	        baseTag = newState.baseTag,
	        metaTags = newState.metaTags,
	        linkTags = newState.linkTags,
	        scriptTags = newState.scriptTags,
	        noscriptTags = newState.noscriptTags,
	        styleTags = newState.styleTags,
	        onChangeClientState = newState.onChangeClientState;
	
	
	    updateAttributes("html", htmlAttributes);
	
	    updateTitle(title, titleAttributes);
	
	    var tagUpdates = {
	        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),
	        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),
	        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),
	        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),
	        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),
	        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)
	    };
	
	    var addedTags = {};
	    var removedTags = {};
	
	    Object.keys(tagUpdates).forEach(function (tagType) {
	        var _tagUpdates$tagType = tagUpdates[tagType],
	            newTags = _tagUpdates$tagType.newTags,
	            oldTags = _tagUpdates$tagType.oldTags;
	
	
	        if (newTags.length) {
	            addedTags[tagType] = newTags;
	        }
	        if (oldTags.length) {
	            removedTags[tagType] = tagUpdates[tagType].oldTags;
	        }
	    });
	
	    onChangeClientState(newState, addedTags, removedTags);
	};
	
	var HelmetSideEffects = (0, _reactSideEffect2.default)(reducePropsToState, handleClientStateChange, mapStateOnServer)(_PlainComponent2.default);
	
	exports.default = Helmet(HelmetSideEffects);
	module.exports = exports["default"];

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.PlaybackRate = exports.PlaybackRateMenuButton = exports.VolumeMenuButton = exports.TimeDivider = exports.DurationDisplay = exports.CurrentTimeDisplay = exports.RemainingTimeDisplay = exports.MouseTimeDisplay = exports.LoadProgressBar = exports.PlayProgressBar = exports.Slider = exports.SeekBar = exports.ProgressControl = exports.FullscreenToggle = exports.ReplayControl = exports.ForwardControl = exports.PlayToggle = exports.ControlBar = exports.Shortcut = exports.Bezel = exports.PosterImage = exports.LoadingSpinner = exports.BigPlayButton = exports.Video = exports.Player = undefined;
	
	var _Player = __webpack_require__(324);
	
	var _Player2 = _interopRequireDefault(_Player);
	
	var _Video = __webpack_require__(181);
	
	var _Video2 = _interopRequireDefault(_Video);
	
	var _BigPlayButton = __webpack_require__(176);
	
	var _BigPlayButton2 = _interopRequireDefault(_BigPlayButton);
	
	var _LoadingSpinner = __webpack_require__(178);
	
	var _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);
	
	var _PosterImage = __webpack_require__(179);
	
	var _PosterImage2 = _interopRequireDefault(_PosterImage);
	
	var _Slider = __webpack_require__(116);
	
	var _Slider2 = _interopRequireDefault(_Slider);
	
	var _Bezel = __webpack_require__(175);
	
	var _Bezel2 = _interopRequireDefault(_Bezel);
	
	var _Shortcut = __webpack_require__(180);
	
	var _Shortcut2 = _interopRequireDefault(_Shortcut);
	
	var _ControlBar = __webpack_require__(182);
	
	var _ControlBar2 = _interopRequireDefault(_ControlBar);
	
	var _PlayToggle = __webpack_require__(189);
	
	var _PlayToggle2 = _interopRequireDefault(_PlayToggle);
	
	var _ForwardControl = __webpack_require__(183);
	
	var _ForwardControl2 = _interopRequireDefault(_ForwardControl);
	
	var _ReplayControl = __webpack_require__(191);
	
	var _ReplayControl2 = _interopRequireDefault(_ReplayControl);
	
	var _FullscreenToggle = __webpack_require__(185);
	
	var _FullscreenToggle2 = _interopRequireDefault(_FullscreenToggle);
	
	var _ProgressControl = __webpack_require__(190);
	
	var _ProgressControl2 = _interopRequireDefault(_ProgressControl);
	
	var _SeekBar = __webpack_require__(192);
	
	var _SeekBar2 = _interopRequireDefault(_SeekBar);
	
	var _PlayProgressBar = __webpack_require__(188);
	
	var _PlayProgressBar2 = _interopRequireDefault(_PlayProgressBar);
	
	var _LoadProgressBar = __webpack_require__(186);
	
	var _LoadProgressBar2 = _interopRequireDefault(_LoadProgressBar);
	
	var _MouseTimeDisplay = __webpack_require__(187);
	
	var _MouseTimeDisplay2 = _interopRequireDefault(_MouseTimeDisplay);
	
	var _VolumeMenuButton = __webpack_require__(193);
	
	var _VolumeMenuButton2 = _interopRequireDefault(_VolumeMenuButton);
	
	var _PlaybackRateMenuButton = __webpack_require__(117);
	
	var _PlaybackRateMenuButton2 = _interopRequireDefault(_PlaybackRateMenuButton);
	
	var _PlaybackRate = __webpack_require__(325);
	
	var _PlaybackRate2 = _interopRequireDefault(_PlaybackRate);
	
	var _RemainingTimeDisplay = __webpack_require__(196);
	
	var _RemainingTimeDisplay2 = _interopRequireDefault(_RemainingTimeDisplay);
	
	var _CurrentTimeDisplay = __webpack_require__(194);
	
	var _CurrentTimeDisplay2 = _interopRequireDefault(_CurrentTimeDisplay);
	
	var _DurationDisplay = __webpack_require__(195);
	
	var _DurationDisplay2 = _interopRequireDefault(_DurationDisplay);
	
	var _TimeDivider = __webpack_require__(197);
	
	var _TimeDivider2 = _interopRequireDefault(_TimeDivider);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Player = _Player2.default;
	exports.Video = _Video2.default;
	exports.BigPlayButton = _BigPlayButton2.default;
	exports.LoadingSpinner = _LoadingSpinner2.default;
	exports.PosterImage = _PosterImage2.default;
	exports.Bezel = _Bezel2.default;
	exports.Shortcut = _Shortcut2.default;
	exports.ControlBar = _ControlBar2.default;
	exports.PlayToggle = _PlayToggle2.default;
	exports.ForwardControl = _ForwardControl2.default;
	exports.ReplayControl = _ReplayControl2.default;
	exports.FullscreenToggle = _FullscreenToggle2.default;
	exports.ProgressControl = _ProgressControl2.default;
	exports.SeekBar = _SeekBar2.default;
	exports.Slider = _Slider2.default;
	exports.PlayProgressBar = _PlayProgressBar2.default;
	exports.LoadProgressBar = _LoadProgressBar2.default;
	exports.MouseTimeDisplay = _MouseTimeDisplay2.default;
	exports.RemainingTimeDisplay = _RemainingTimeDisplay2.default;
	exports.CurrentTimeDisplay = _CurrentTimeDisplay2.default;
	exports.DurationDisplay = _DurationDisplay2.default;
	exports.TimeDivider = _TimeDivider2.default;
	exports.VolumeMenuButton = _VolumeMenuButton2.default;
	exports.PlaybackRateMenuButton = _PlaybackRateMenuButton2.default;
	exports.PlaybackRate = _PlaybackRate2.default; // import '../styles/scss/video-react.scss';

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (true) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _PrismCode = __webpack_require__(642);
	
	Object.defineProperty(exports, "PrismCode", {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PrismCode).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(74);
	
	var ReactCurrentOwner = __webpack_require__(48);
	
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}
	
	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
	
	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;
	
	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();
	
	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };
	
	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};
	
	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };
	
	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };
	
	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}
	
	var unmountedIDs = [];
	
	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;
	
	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	   true ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ?  true ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;
	
	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ?  true ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  true ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ?  true ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ?  true ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ?  true ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },
	
	
	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs
	};
	
	module.exports = ReactComponentTreeHook;

/***/ },
/* 27 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(15)
	  , createDesc = __webpack_require__(54);
	module.exports = __webpack_require__(14) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(7)
	  , hide      = __webpack_require__(29)
	  , has       = __webpack_require__(27)
	  , SRC       = __webpack_require__(67)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(49).inspectSource = function(it){
	  return $toString.call(it);
	};
	
	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1)
	  , fails   = __webpack_require__(9)
	  , defined = __webpack_require__(40)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(88)
	  , defined = __webpack_require__(40);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// Trust the developer to only use ReactInstrumentation with a __DEV__ check
	
	var debugTool = null;
	
	if (true) {
	  var ReactDebugTool = __webpack_require__(242);
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	var CallbackQueue = __webpack_require__(236);
	var PooledClass = __webpack_require__(69);
	var ReactFeatureFlags = __webpack_require__(245);
	var ReactReconciler = __webpack_require__(57);
	var Transaction = __webpack_require__(107);
	
	var invariant = __webpack_require__(3);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  true ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  true ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  true ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  true ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  true ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  true ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  true ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(89)
	  , createDesc     = __webpack_require__(54)
	  , toIObject      = __webpack_require__(32)
	  , toPrimitive    = __webpack_require__(45)
	  , has            = __webpack_require__(27)
	  , IE8_DOM_DEFINE = __webpack_require__(207)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(14) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(27)
	  , toObject    = __webpack_require__(21)
	  , IE_PROTO    = __webpack_require__(134)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 37 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var ReactChildren = __webpack_require__(674);
	var ReactComponent = __webpack_require__(170);
	var ReactPureComponent = __webpack_require__(679);
	var ReactClass = __webpack_require__(675);
	var ReactDOMFactories = __webpack_require__(676);
	var ReactElement = __webpack_require__(73);
	var ReactPropTypes = __webpack_require__(677);
	var ReactVersion = __webpack_require__(682);
	
	var onlyChild = __webpack_require__(284);
	var warning = __webpack_require__(4);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (true) {
	  var canDefineProperty = __webpack_require__(114);
	  var ReactElementValidator = __webpack_require__(279);
	  var didWarnPropTypesDeprecated = false;
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (true) {
	  var warned = false;
	  __spread = function () {
	     true ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	// TODO: Fix tests so that this deprecation warning doesn't cause failures.
	if (true) {
	  if (canDefineProperty) {
	    Object.defineProperty(React, 'PropTypes', {
	      get: function () {
	         true ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;
	        didWarnPropTypesDeprecated = true;
	        return ReactPropTypes;
	      }
	    });
	  }
	}
	
	module.exports = React;

/***/ },
/* 39 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 40 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(9);
	
	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.mediaProperties = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.formatTime = formatTime;
	exports.isVideoChild = isVideoChild;
	exports.mergeAndSortChildren = mergeAndSortChildren;
	exports.deprecatedWarning = deprecatedWarning;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * @file format-time.js
	 *
	 * Format seconds as a time string, H:MM:SS or M:SS
	 * Supplying a guide (in seconds) will force a number of leading zeros
	 * to cover the length of the guide
	 *
	 * @param  {Number} seconds Number of seconds to be turned into a string
	 * @param  {Number} guide   Number (in seconds) to model the string after
	 * @return {String}         Time formatted as H:MM:SS or M:SS
	 * @private
	 * @function formatTime
	 */
	function formatTime() {
	  var seconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
	  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;
	
	  var s = Math.floor(seconds % 60);
	  var m = Math.floor(seconds / 60 % 60);
	  var h = Math.floor(seconds / 3600);
	  var gm = Math.floor(guide / 60 % 60);
	  var gh = Math.floor(guide / 3600);
	
	  // handle invalid times
	  if (isNaN(seconds) || seconds === Infinity) {
	    // '-' is false for all relational operators (e.g. <, >=) so this setting
	    // will add the minimum number of fields specified by the guide
	    h = m = s = '-';
	  }
	
	  // Check if we need to show hours
	  h = h > 0 || gh > 0 ? h + ':' : '';
	
	  // If hours are showing, we may need to add a leading zero.
	  // Always show at least one digit of minutes.
	  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';
	
	  // Check if leading zero is need for seconds
	  s = s < 10 ? '0' + s : s;
	
	  return h + m + s;
	}
	
	// Check if the element belongs to a video element
	// only accept <source />, <track />,
	// <MyComponent isVideoChild />
	// elements
	function isVideoChild(c) {
	  if (c.props && c.props.isVideoChild) {
	    return true;
	  }
	  return c.type === 'source' || c.type === 'track';
	}
	
	// merge default children
	// sort them by `order` property
	// filter them by `disabled` property
	function mergeAndSortChildren(defaultChildren, _children, _parentProps) {
	  var defaultOrder = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
	
	  var children = _react2.default.Children.toArray(_children);
	  var parentProps = _extends({}, _parentProps);
	  return children.filter(function (e) {
	    return !e.props.disabled;
	  }).concat(defaultChildren.filter(function (c) {
	    return !children.find(function (component) {
	      return component.type === c.type;
	    });
	  })).map(function (element) {
	    var defaultComponent = defaultChildren.find(function (c) {
	      return c.type === element.type;
	    });
	    delete parentProps.order;
	    var defaultProps = defaultComponent ? defaultComponent.props : {};
	    var props = _extends({}, parentProps, defaultProps, element.props);
	    var e = _react2.default.cloneElement(element, props, element.props.children);
	    return e;
	  }).sort(function (a, b) {
	    return (a.props.order || defaultOrder) - (b.props.order || defaultOrder);
	  });
	}
	
	/**
	 * Temporary utility for generating the warnings
	 */
	function deprecatedWarning(oldMethodCall, newMethodCall) {
	  // eslint-disable-next-line no-console
	  console.warn('WARNING: ' + oldMethodCall + ' will be deprecated soon! Please use ' + newMethodCall + ' instead.');
	}
	
	var mediaProperties = exports.mediaProperties = ['error', 'src', 'srcObject', 'currentSrc', 'crossOrigin', 'networkState', 'preload', 'buffered', 'readyState', 'seeking', 'currentTime', 'duration', 'paused', 'defaultPlaybackRate', 'playbackRate', 'played', 'seekable', 'ended', 'autoplay', 'loop', 'mediaGroup', 'controller', 'controls', 'volume', 'muted', 'defaultMuted', 'audioTracks', 'videoTracks', 'textTracks', 'width', 'height', 'videoWidth', 'videoHeight', 'poster'];

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(50)
	  , IObject  = __webpack_require__(88)
	  , toObject = __webpack_require__(21)
	  , toLength = __webpack_require__(19)
	  , asc      = __webpack_require__(340);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(1)
	  , core    = __webpack_require__(49)
	  , fails   = __webpack_require__(9);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(12);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var PooledClass = __webpack_require__(69);
	
	var emptyFunction = __webpack_require__(37);
	var warning = __webpack_require__(4);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (true) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (true) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }
	
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (true) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (true) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (true) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	               true ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	     true ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = function() {};
	
	if (true) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;


/***/ },
/* 48 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 49 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(28);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(223)
	  , $export = __webpack_require__(1)
	  , shared  = __webpack_require__(104)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(226)));
	
	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};
	
	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(14)){
	  var LIBRARY             = __webpack_require__(60)
	    , global              = __webpack_require__(7)
	    , fails               = __webpack_require__(9)
	    , $export             = __webpack_require__(1)
	    , $typed              = __webpack_require__(105)
	    , $buffer             = __webpack_require__(141)
	    , ctx                 = __webpack_require__(50)
	    , anInstance          = __webpack_require__(59)
	    , propertyDesc        = __webpack_require__(54)
	    , hide                = __webpack_require__(29)
	    , redefineAll         = __webpack_require__(64)
	    , toInteger           = __webpack_require__(55)
	    , toLength            = __webpack_require__(19)
	    , toIndex             = __webpack_require__(66)
	    , toPrimitive         = __webpack_require__(45)
	    , has                 = __webpack_require__(27)
	    , same                = __webpack_require__(220)
	    , classof             = __webpack_require__(87)
	    , isObject            = __webpack_require__(12)
	    , toObject            = __webpack_require__(21)
	    , isArrayIter         = __webpack_require__(126)
	    , create              = __webpack_require__(61)
	    , getPrototypeOf      = __webpack_require__(36)
	    , gOPN                = __webpack_require__(62).f
	    , getIterFn           = __webpack_require__(143)
	    , uid                 = __webpack_require__(67)
	    , wks                 = __webpack_require__(13)
	    , createArrayMethod   = __webpack_require__(43)
	    , createArrayIncludes = __webpack_require__(95)
	    , speciesConstructor  = __webpack_require__(135)
	    , ArrayIterators      = __webpack_require__(144)
	    , Iterators           = __webpack_require__(77)
	    , $iterDetect         = __webpack_require__(101)
	    , setSpecies          = __webpack_require__(65)
	    , arrayFill           = __webpack_require__(119)
	    , arrayCopyWithin     = __webpack_require__(200)
	    , $DP                 = __webpack_require__(15)
	    , $GOPD               = __webpack_require__(35)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';
	
	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });
	
	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });
	
	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });
	
	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };
	
	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };
	
	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };
	
	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };
	
	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };
	
	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };
	
	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };
	
	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };
	
	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };
	
	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });
	
	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };
	
	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };
	
	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };
	
	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };
	
	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };
	
	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };
	
	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }
	
	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });
	
	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }
	
	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });
	
	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);
	
	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }
	
	    O[NAME] = TypedArray;
	
	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
	
	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });
	
	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
	
	    $export($export.P, NAME, proto);
	
	    setSpecies(NAME);
	
	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});
	
	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
	
	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});
	
	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});
	
	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});
	
	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(67)('meta')
	  , isObject = __webpack_require__(12)
	  , has      = __webpack_require__(27)
	  , setDesc  = __webpack_require__(15).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(9)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 54 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 55 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var invariant = __webpack_require__(3);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  true ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  true ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (true) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (true) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName:  true ? { autofocus: 'autoFocus' } : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(611);
	var ReactInstrumentation = __webpack_require__(33);
	
	var warning = __webpack_require__(4);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       true ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (true) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function isValidChild(object) {
	  return object == null || _react2.default.isValidElement(object);
	}
	
	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}
	
	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}
	
	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);
	
	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);
	
	    if (childRoutes.length) route.childRoutes = childRoutes;
	
	    delete route.children;
	  }
	
	  return route;
	}
	
	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];
	
	  _react2.default.Children.forEach(children, function (element) {
	    if (_react2.default.isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);
	
	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });
	
	  return routes;
	}
	
	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }
	
	  return routes;
	}

/***/ },
/* 59 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 60 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(5)
	  , dPs         = __webpack_require__(213)
	  , enumBugKeys = __webpack_require__(122)
	  , IE_PROTO    = __webpack_require__(134)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(121)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(124).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(215)
	  , hiddenKeys = __webpack_require__(122).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(215)
	  , enumBugKeys = __webpack_require__(122);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(30);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(7)
	  , dP          = __webpack_require__(15)
	  , DESCRIPTORS = __webpack_require__(14)
	  , SPECIES     = __webpack_require__(13)('species');
	
	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(55)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 67 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (true) {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;

/***/ },
/* 69 */
[694, 6],
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
	exports.falsy = falsy;
	
	var _react = __webpack_require__(2);
	
	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var arrayOf = _react.PropTypes.arrayOf;
	var oneOfType = _react.PropTypes.oneOfType;
	var element = _react.PropTypes.element;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}
	
	var history = exports.history = shape({
	  listen: func.isRequired,
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired
	});
	
	var component = exports.component = oneOfType([func, string]);
	var components = exports.components = oneOfType([component, object]);
	var route = exports.route = oneOfType([object, element]);
	var routes = exports.routes = oneOfType([route, arrayOf(route)]);

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.PropTypes = exports.RoutingContext = exports.RouterContext = exports.createRoutes = exports.useRoutes = exports.RouteContext = exports.Lifecycle = exports.History = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;
	
	var _RouteUtils = __webpack_require__(58);
	
	Object.defineProperty(exports, 'createRoutes', {
	  enumerable: true,
	  get: function get() {
	    return _RouteUtils.createRoutes;
	  }
	});
	
	var _PropTypes2 = __webpack_require__(165);
	
	Object.defineProperty(exports, 'locationShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.locationShape;
	  }
	});
	Object.defineProperty(exports, 'routerShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.routerShape;
	  }
	});
	
	var _PatternUtils = __webpack_require__(85);
	
	Object.defineProperty(exports, 'formatPattern', {
	  enumerable: true,
	  get: function get() {
	    return _PatternUtils.formatPattern;
	  }
	});
	
	var _Router2 = __webpack_require__(650);
	
	var _Router3 = _interopRequireDefault(_Router2);
	
	var _Link2 = __webpack_require__(265);
	
	var _Link3 = _interopRequireDefault(_Link2);
	
	var _IndexLink2 = __webpack_require__(644);
	
	var _IndexLink3 = _interopRequireDefault(_IndexLink2);
	
	var _withRouter2 = __webpack_require__(663);
	
	var _withRouter3 = _interopRequireDefault(_withRouter2);
	
	var _IndexRedirect2 = __webpack_require__(645);
	
	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);
	
	var _IndexRoute2 = __webpack_require__(646);
	
	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);
	
	var _Redirect2 = __webpack_require__(266);
	
	var _Redirect3 = _interopRequireDefault(_Redirect2);
	
	var _Route2 = __webpack_require__(648);
	
	var _Route3 = _interopRequireDefault(_Route2);
	
	var _History2 = __webpack_require__(643);
	
	var _History3 = _interopRequireDefault(_History2);
	
	var _Lifecycle2 = __webpack_require__(647);
	
	var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);
	
	var _RouteContext2 = __webpack_require__(649);
	
	var _RouteContext3 = _interopRequireDefault(_RouteContext2);
	
	var _useRoutes2 = __webpack_require__(662);
	
	var _useRoutes3 = _interopRequireDefault(_useRoutes2);
	
	var _RouterContext2 = __webpack_require__(110);
	
	var _RouterContext3 = _interopRequireDefault(_RouterContext2);
	
	var _RoutingContext2 = __webpack_require__(651);
	
	var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);
	
	var _PropTypes3 = _interopRequireDefault(_PropTypes2);
	
	var _match2 = __webpack_require__(660);
	
	var _match3 = _interopRequireDefault(_match2);
	
	var _useRouterHistory2 = __webpack_require__(271);
	
	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);
	
	var _applyRouterMiddleware2 = __webpack_require__(653);
	
	var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);
	
	var _browserHistory2 = __webpack_require__(654);
	
	var _browserHistory3 = _interopRequireDefault(_browserHistory2);
	
	var _hashHistory2 = __webpack_require__(658);
	
	var _hashHistory3 = _interopRequireDefault(_hashHistory2);
	
	var _createMemoryHistory2 = __webpack_require__(268);
	
	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Router = _Router3.default; /* components */
	
	exports.Link = _Link3.default;
	exports.IndexLink = _IndexLink3.default;
	exports.withRouter = _withRouter3.default;
	
	/* components (configuration) */
	
	exports.IndexRedirect = _IndexRedirect3.default;
	exports.IndexRoute = _IndexRoute3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	
	/* mixins */
	
	exports.History = _History3.default;
	exports.Lifecycle = _Lifecycle3.default;
	exports.RouteContext = _RouteContext3.default;
	
	/* utils */
	
	exports.useRoutes = _useRoutes3.default;
	exports.RouterContext = _RouterContext3.default;
	exports.RoutingContext = _RoutingContext3.default;
	exports.PropTypes = _PropTypes3.default;
	exports.match = _match3.default;
	exports.useRouterHistory = _useRouterHistory3.default;
	exports.applyRouterMiddleware = _applyRouterMiddleware3.default;
	
	/* histories */
	
	exports.browserHistory = _browserHistory3.default;
	exports.hashHistory = _hashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.extractPath = extractPath;
	exports.parsePath = parsePath;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);
	
	  if (match == null) return string;
	
	  return string.substring(match[0].length);
	}
	
	function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';
	
	   true ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;
	
	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }
	
	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }
	
	  if (pathname === '') pathname = '/';
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var ReactCurrentOwner = __webpack_require__(48);
	
	var warning = __webpack_require__(4);
	var canDefineProperty = __webpack_require__(114);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	var REACT_ELEMENT_TYPE = __webpack_require__(278);
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (true) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (true) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	       true ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}
	
	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	       true ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (true) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (true) {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (true) {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;

/***/ },
/* 74 */
6,
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(13)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(29)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(50)
	  , call        = __webpack_require__(209)
	  , isArrayIter = __webpack_require__(126)
	  , anObject    = __webpack_require__(5)
	  , toLength    = __webpack_require__(19)
	  , getIterFn   = __webpack_require__(143)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 77 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(15).f
	  , has = __webpack_require__(27)
	  , TAG = __webpack_require__(13)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1)
	  , defined = __webpack_require__(40)
	  , fails   = __webpack_require__(9)
	  , spaces  = __webpack_require__(139)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');
	
	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};
	
	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};
	
	module.exports = exporter;

/***/ },
/* 80 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(147);
	var setInnerHTML = __webpack_require__(109);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(156);
	var setTextContent = __webpack_require__(263);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var EventPluginRegistry = __webpack_require__(92);
	var EventPluginUtils = __webpack_require__(148);
	var ReactErrorUtils = __webpack_require__(154);
	
	var accumulateInto = __webpack_require__(256);
	var forEachAccumulated = __webpack_require__(258);
	var invariant = __webpack_require__(3);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  true ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][key];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  true ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(82);
	var EventPluginUtils = __webpack_require__(148);
	
	var accumulateInto = __webpack_require__(256);
	var forEachAccumulated = __webpack_require__(258);
	var warning = __webpack_require__(4);
	
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (true) {
	     true ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;

/***/ },
/* 84 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}
	
	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];
	
	  var match = void 0,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
	    }
	
	    if (match[1]) {
	      regexpSource += '([^/]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '(.*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '(.*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    }
	
	    tokens.push(match[0]);
	
	    lastIndex = matcher.lastIndex;
	  }
	
	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
	  }
	
	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}
	
	var CompiledPatternsCache = Object.create(null);
	
	function compilePattern(pattern) {
	  if (!CompiledPatternsCache[pattern]) CompiledPatternsCache[pattern] = _compilePattern(pattern);
	
	  return CompiledPatternsCache[pattern];
	}
	
	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 *  The function calls callback(error, matched) when finished.
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	function matchPattern(pattern, pathname) {
	  // Ensure pattern starts with leading slash for consistency with pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }
	
	  var _compilePattern2 = compilePattern(pattern);
	
	  var regexpSource = _compilePattern2.regexpSource;
	  var paramNames = _compilePattern2.paramNames;
	  var tokens = _compilePattern2.tokens;
	
	
	  if (pattern.charAt(pattern.length - 1) !== '/') {
	    regexpSource += '/?'; // Allow optional path separator at end.
	  }
	
	  // Special-case patterns like '*' for catch-all routes.
	  if (tokens[tokens.length - 1] === '*') {
	    regexpSource += '$';
	  }
	
	  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
	  if (match == null) {
	    return null;
	  }
	
	  var matchedPath = match[0];
	  var remainingPathname = pathname.substr(matchedPath.length);
	
	  if (remainingPathname) {
	    // Require that the match ends at a path separator, if we didn't match
	    // the full path, so any remaining pathname is a new path segment.
	    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
	      return null;
	    }
	
	    // If there is a remaining pathname, treat the path separator as part of
	    // the remaining pathname for properly continuing the match.
	    remainingPathname = '/' + remainingPathname;
	  }
	
	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: match.slice(1).map(function (v) {
	      return v && decodeURIComponent(v);
	    })
	  };
	}
	
	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}
	
	function getParams(pattern, pathname) {
	  var match = matchPattern(pattern, pathname);
	  if (!match) {
	    return null;
	  }
	
	  var paramNames = match.paramNames;
	  var paramValues = match.paramValues;
	
	  var params = {};
	
	  paramNames.forEach(function (paramName, index) {
	    params[paramName] = paramValues[index];
	  });
	
	  return params;
	}
	
	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	function formatPattern(pattern, params) {
	  params = params || {};
	
	  var _compilePattern3 = compilePattern(pattern);
	
	  var tokens = _compilePattern3.tokens;
	
	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0;
	
	  var token = void 0,
	      paramName = void 0,
	      paramValue = void 0;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];
	
	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;
	
	      !(paramValue != null || parenCount > 0) ?  true ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenCount += 1;
	    } else if (token === ')') {
	      parenCount -= 1;
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];
	
	      !(paramValue != null || parenCount > 0) ?  true ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue != null) pathname += encodeURIComponent(paramValue);
	    } else {
	      pathname += token;
	    }
	  }
	
	  return pathname.replace(/\/+/g, '/');
	}

/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';
	
	exports.__esModule = true;
	var PUSH = 'PUSH';
	
	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';
	
	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';
	
	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(39)
	  , TAG = __webpack_require__(13)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(39);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 89 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	// React 15.5 references this module, and assumes PropTypes are still callable in production.
	// Therefore we re-export development-only version with all the PropTypes checks here.
	// However if one is migrating to the `prop-types` npm library, they will go through the
	// `index.js` entry point, and it will branch depending on the environment.
	var factory = __webpack_require__(233);
	module.exports = function(isValidElement) {
	  // It is still allowed in 15.5.
	  var throwOnDirectAccess = false;
	  return factory(isValidElement, throwOnDirectAccess);
	};


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(152);


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var invariant = __webpack_require__(3);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ?  true ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  true ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  true ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  true ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
	
	  if (true) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  true ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	
	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (true) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var EventPluginRegistry = __webpack_require__(92);
	var ReactEventEmitterMixin = __webpack_require__(602);
	var ViewportMetrics = __webpack_require__(255);
	
	var getVendorPrefixedEventName = __webpack_require__(261);
	var isEventSupported = __webpack_require__(161);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(46);
	
	var getEventTarget = __webpack_require__(159);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(32)
	  , toLength  = __webpack_require__(19)
	  , toIndex   = __webpack_require__(66);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(7)
	  , $export           = __webpack_require__(1)
	  , redefine          = __webpack_require__(30)
	  , redefineAll       = __webpack_require__(64)
	  , meta              = __webpack_require__(53)
	  , forOf             = __webpack_require__(76)
	  , anInstance        = __webpack_require__(59)
	  , isObject          = __webpack_require__(12)
	  , fails             = __webpack_require__(9)
	  , $iterDetect       = __webpack_require__(101)
	  , setToStringTag    = __webpack_require__(78)
	  , inheritIfRequired = __webpack_require__(125);
	
	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }
	
	  setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);
	
	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(29)
	  , redefine = __webpack_require__(30)
	  , fails    = __webpack_require__(9)
	  , defined  = __webpack_require__(40)
	  , wks      = __webpack_require__(13);
	
	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , fns      = exec(defined, SYMBOL, ''[KEY])
	    , strfn    = fns[0]
	    , rxfn     = fns[1];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return rxfn.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return rxfn.call(string, this); }
	    );
	  }
	};

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(5);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 99 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(12)
	  , cof      = __webpack_require__(39)
	  , MATCH    = __webpack_require__(13)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(13)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(60)|| !__webpack_require__(9)(function(){
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function(){ /* empty */});
	  delete __webpack_require__(7)[K];
	});

/***/ },
/* 103 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(7)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(7)
	  , hide   = __webpack_require__(29)
	  , uid    = __webpack_require__(67)
	  , TYPED  = uid('typed_array')
	  , VIEW   = uid('view')
	  , ABV    = !!(global.ArrayBuffer && global.DataView)
	  , CONSTR = ABV
	  , i = 0, l = 9, Typed;
	
	var TypedArrayConstructors = (
	  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
	).split(',');
	
	while(i < l){
	  if(Typed = global[TypedArrayConstructors[i++]]){
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}
	
	module.exports = {
	  ABV:    ABV,
	  CONSTR: CONSTR,
	  TYPED:  TYPED,
	  VIEW:   VIEW
	};

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(94);
	var ViewportMetrics = __webpack_require__(255);
	
	var getEventModifierState = __webpack_require__(158);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var invariant = __webpack_require__(3);
	
	var OBSERVED_ERROR = {};
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  true ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  true ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	module.exports = TransactionImpl;

/***/ },
/* 108 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(18);
	var DOMNamespaces = __webpack_require__(147);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(156);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _deprecateObjectProperties = __webpack_require__(111);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	var _getRouteParams = __webpack_require__(657);
	
	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);
	
	var _RouteUtils = __webpack_require__(58);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var array = _React$PropTypes.array;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	
	/**
	 * A <RouterContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */
	
	var RouterContext = _react2.default.createClass({
	  displayName: 'RouterContext',
	
	
	  propTypes: {
	    history: object,
	    router: object.isRequired,
	    location: object.isRequired,
	    routes: array.isRequired,
	    params: object.isRequired,
	    components: array.isRequired,
	    createElement: func.isRequired
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      createElement: _react2.default.createElement
	    };
	  },
	
	
	  childContextTypes: {
	    history: object,
	    location: object.isRequired,
	    router: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    var _props = this.props;
	    var router = _props.router;
	    var history = _props.history;
	    var location = _props.location;
	
	    if (!router) {
	       true ? (0, _routerWarning2.default)(false, '`<RouterContext>` expects a `router` rather than a `history`') : void 0;
	
	      router = _extends({}, history, {
	        setRouteLeaveHook: history.listenBeforeLeavingRoute
	      });
	      delete router.listenBeforeLeavingRoute;
	    }
	
	    if (true) {
	      location = (0, _deprecateObjectProperties2.default)(location, '`context.location` is deprecated, please use a route component\'s `props.location` instead. http://tiny.cc/router-accessinglocation');
	    }
	
	    return { history: history, location: location, router: router };
	  },
	  createElement: function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  },
	  render: function render() {
	    var _this = this;
	
	    var _props2 = this.props;
	    var history = _props2.history;
	    var location = _props2.location;
	    var routes = _props2.routes;
	    var params = _props2.params;
	    var components = _props2.components;
	
	    var element = null;
	
	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.
	
	        var route = routes[index];
	        var routeParams = (0, _getRouteParams2.default)(route, params);
	        var props = {
	          history: history,
	          location: location,
	          params: params,
	          route: route,
	          routeParams: routeParams,
	          routes: routes
	        };
	
	        if ((0, _RouteUtils.isReactChildren)(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (Object.prototype.hasOwnProperty.call(element, prop)) props[prop] = element[prop];
	          }
	        }
	
	        if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
	          var elements = {};
	
	          for (var key in components) {
	            if (Object.prototype.hasOwnProperty.call(components, key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }
	
	          return elements;
	        }
	
	        return _this.createElement(components, props);
	      }, element);
	    }
	
	    !(element === null || element === false || _react2.default.isValidElement(element)) ?  true ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;
	
	    return element;
	  }
	});
	
	exports.default = RouterContext;
	module.exports = exports['default'];

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.canUseMembrane = undefined;
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var canUseMembrane = exports.canUseMembrane = false;
	
	// No-op by default.
	var deprecateObjectProperties = function deprecateObjectProperties(object) {
	  return object;
	};
	
	if (true) {
	  try {
	    if (Object.defineProperty({}, 'x', {
	      get: function get() {
	        return true;
	      }
	    }).x) {
	      exports.canUseMembrane = canUseMembrane = true;
	    }
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	
	  if (canUseMembrane) {
	    deprecateObjectProperties = function deprecateObjectProperties(object, message) {
	      // Wrap the deprecated object in a membrane to warn on property access.
	      var membrane = {};
	
	      var _loop = function _loop(prop) {
	        if (!Object.prototype.hasOwnProperty.call(object, prop)) {
	          return 'continue';
	        }
	
	        if (typeof object[prop] === 'function') {
	          // Can't use fat arrow here because of use of arguments below.
	          membrane[prop] = function () {
	             true ? (0, _routerWarning2.default)(false, message) : void 0;
	            return object[prop].apply(object, arguments);
	          };
	          return 'continue';
	        }
	
	        // These properties are non-enumerable to prevent React dev tools from
	        // seeing them and causing spurious warnings when accessing them. In
	        // principle this could be done with a proxy, but support for the
	        // ownKeys trap on proxies is not universal, even among browsers that
	        // otherwise support proxies.
	        Object.defineProperty(membrane, prop, {
	          get: function get() {
	             true ? (0, _routerWarning2.default)(false, message) : void 0;
	            return object[prop];
	          }
	        });
	      };
	
	      for (var prop in object) {
	        var _ret = _loop(prop);
	
	        if (_ret === 'continue') continue;
	      }
	
	      return membrane;
	    };
	  }
	}
	
	exports.default = deprecateObjectProperties;

/***/ },
/* 112 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	exports.canUseDOM = canUseDOM;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _queryString = __webpack_require__(668);
	
	var _runTransitionHook = __webpack_require__(169);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _PathUtils = __webpack_require__(72);
	
	var _deprecate = __webpack_require__(168);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	var SEARCH_BASE_KEY = '$searchBase';
	
	function defaultStringifyQuery(query) {
	  return _queryString.stringify(query).replace(/%20/g, '+');
	}
	
	var defaultParseQueryString = _queryString.parse;
	
	function isNestedObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;
	  }return false;
	}
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var history = createHistory(options);
	
	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;
	
	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;
	
	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;
	
	    function addQuery(location) {
	      if (location.query == null) {
	        var search = location.search;
	
	        location.query = parseQueryString(search.substring(1));
	        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
	      }
	
	      // TODO: Instead of all the book-keeping here, this should just strip the
	      // stringified query from the search.
	
	      return location;
	    }
	
	    function appendQuery(location, query) {
	      var _extends2;
	
	      var searchBaseSpec = location[SEARCH_BASE_KEY];
	      var queryString = query ? stringifyQuery(query) : '';
	      if (!searchBaseSpec && !queryString) {
	        return location;
	      }
	
	       true ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      var searchBase = undefined;
	      if (searchBaseSpec && location.search === searchBaseSpec.search) {
	        searchBase = searchBaseSpec.searchBase;
	      } else {
	        searchBase = location.search || '';
	      }
	
	      var search = searchBase;
	      if (queryString) {
	        search += (search ? '&' : '?') + queryString;
	      }
	
	      return _extends({}, location, (_extends2 = {
	        search: search
	      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));
	    }
	
	    // Override all read methods with query-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addQuery(location), callback);
	      });
	    }
	
	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addQuery(location));
	      });
	    }
	
	    // Override all write methods with query-aware versions.
	    function push(location) {
	      history.push(appendQuery(location, location.query));
	    }
	
	    function replace(location) {
	      history.replace(appendQuery(location, location.query));
	    }
	
	    function createPath(location, query) {
	       true ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;
	
	      return history.createPath(appendQuery(location, query || location.query));
	    }
	
	    function createHref(location, query) {
	       true ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;
	
	      return history.createHref(appendQuery(location, query || location.query));
	    }
	
	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));
	      if (location.query) {
	        fullLocation.query = location.query;
	      }
	      return addQuery(fullLocation);
	    }
	
	    // deprecated
	    function pushState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      push(_extends({ state: state }, path, { query: query }));
	    }
	
	    // deprecated
	    function replaceState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      replace(_extends({ state: state }, path, { query: query }));
	    }
	
	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,
	
	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}
	
	exports['default'] = useQueries;
	module.exports = exports['default'];

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (true) {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.USER_ACTIVATE = exports.PLAYER_ACTIVATE = exports.FULLSCREEN_CHANGE = exports.OPERATE = undefined;
	exports.handleFullscreenChange = handleFullscreenChange;
	exports.activate = activate;
	exports.userActivate = userActivate;
	exports.play = play;
	exports.pause = pause;
	exports.togglePlay = togglePlay;
	exports.seek = seek;
	exports.forward = forward;
	exports.replay = replay;
	exports.changeRate = changeRate;
	exports.changeVolume = changeVolume;
	exports.mute = mute;
	exports.toggleFullscreen = toggleFullscreen;
	
	var _fullscreen = __webpack_require__(198);
	
	var _fullscreen2 = _interopRequireDefault(_fullscreen);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var OPERATE = exports.OPERATE = 'video-react/OPERATE';
	var FULLSCREEN_CHANGE = exports.FULLSCREEN_CHANGE = 'video-react/FULLSCREEN_CHANGE';
	var PLAYER_ACTIVATE = exports.PLAYER_ACTIVATE = 'video-react/PLAYER_ACTIVATE';
	var USER_ACTIVATE = exports.USER_ACTIVATE = 'video-react/USER_ACTIVATE';
	
	function handleFullscreenChange(isFullscreen) {
	  return {
	    type: FULLSCREEN_CHANGE,
	    isFullscreen: isFullscreen
	  };
	}
	
	function activate(activity) {
	  return {
	    type: PLAYER_ACTIVATE,
	    activity: activity
	  };
	}
	
	function userActivate(activity) {
	  return {
	    type: USER_ACTIVATE,
	    activity: activity
	  };
	}
	
	function play() {
	  var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
	    action: 'play',
	    source: ''
	  };
	
	  this.video.play();
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	function pause() {
	  var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
	    action: 'pause',
	    source: ''
	  };
	
	  this.video.pause();
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	function togglePlay() {
	  var operation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
	    action: 'toggle-play',
	    source: ''
	  };
	
	  this.video.togglePlay();
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	// seek video by time
	function seek(time) {
	  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
	    action: 'seek',
	    source: ''
	  };
	
	  this.video.seek(time);
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	// jump forward x seconds
	function forward(seconds) {
	  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
	    action: 'forward-' + seconds,
	    source: ''
	  };
	
	  this.video.forward(seconds);
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	// jump back x seconds
	function replay(seconds) {
	  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
	    action: 'replay-' + seconds,
	    source: ''
	  };
	
	  this.video.replay(seconds);
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	function changeRate(rate) {
	  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
	    action: 'change-rate',
	    source: ''
	  };
	
	  this.video.playbackRate = rate;
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	function changeVolume(volume) {
	  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
	    action: 'change-volume',
	    source: ''
	  };
	
	  var v = volume;
	  if (volume < 0) {
	    v = 0;
	  }
	  if (volume > 1) {
	    v = 1;
	  }
	  this.video.volume = v;
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	function mute(muted) {
	  var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
	    action: muted ? 'muted' : 'unmuted',
	    source: ''
	  };
	
	  this.video.muted = muted;
	
	  return {
	    type: OPERATE,
	    operation: operation
	  };
	}
	
	function toggleFullscreen(player) {
	  if (_fullscreen2.default.enabled) {
	    if (_fullscreen2.default.isFullscreen) {
	      _fullscreen2.default.exit();
	    } else {
	      _fullscreen2.default.request(this.rootElement);
	    }
	    return {
	      type: OPERATE,
	      operation: {
	        action: 'toggle-fullscreen',
	        source: ''
	      }
	    };
	  }
	
	  return {
	    type: FULLSCREEN_CHANGE,
	    isFullscreen: !player.isFullscreen
	  };
	}

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(91);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _dom = __webpack_require__(118);
	
	var Dom = _interopRequireWildcard(_dom);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  className: _propTypes2.default.string,
	  onMouseDown: _propTypes2.default.func,
	  onMouseMove: _propTypes2.default.func,
	  stepForward: _propTypes2.default.func,
	  stepBack: _propTypes2.default.func,
	  sliderActive: _propTypes2.default.func,
	  sliderInactive: _propTypes2.default.func,
	  onMouseUp: _propTypes2.default.func,
	  onFocus: _propTypes2.default.func,
	  onBlur: _propTypes2.default.func,
	  onClick: _propTypes2.default.func,
	  getPercent: _propTypes2.default.func,
	  vertical: _propTypes2.default.bool,
	  children: _propTypes2.default.node,
	  label: _propTypes2.default.string,
	  valuenow: _propTypes2.default.string,
	  valuetext: _propTypes2.default.string
	};
	
	var Slider = function (_Component) {
	  _inherits(Slider, _Component);
	
	  function Slider(props, context) {
	    _classCallCheck(this, Slider);
	
	    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props, context));
	
	    _this.handleMouseDown = _this.handleMouseDown.bind(_this);
	    _this.handleMouseMove = _this.handleMouseMove.bind(_this);
	    _this.handleMouseUp = _this.handleMouseUp.bind(_this);
	    _this.handleFocus = _this.handleFocus.bind(_this);
	    _this.handleBlur = _this.handleBlur.bind(_this);
	    _this.handleClick = _this.handleClick.bind(_this);
	    _this.handleKeyPress = _this.handleKeyPress.bind(_this);
	    _this.stepForward = _this.stepForward.bind(_this);
	    _this.stepBack = _this.stepBack.bind(_this);
	    _this.calculateDistance = _this.calculateDistance.bind(_this);
	    _this.getProgress = _this.getProgress.bind(_this);
	    _this.renderChildren = _this.renderChildren.bind(_this);
	
	    _this.state = {
	      active: false
	    };
	    return _this;
	  }
	
	  _createClass(Slider, [{
	    key: 'getProgress',
	    value: function getProgress() {
	      var getPercent = this.props.getPercent;
	
	      if (!getPercent) {
	        return 0;
	      }
	      var progress = getPercent();
	
	      // Protect against no duration and other division issues
	      if (typeof progress !== 'number' || progress < 0 || progress === Infinity) {
	        progress = 0;
	      }
	      return progress;
	    }
	  }, {
	    key: 'handleMouseDown',
	    value: function handleMouseDown(event) {
	      var onMouseDown = this.props.onMouseDown;
	      // event.preventDefault();
	      // event.stopPropagation();
	
	      document.addEventListener('mousemove', this.handleMouseMove, true);
	      document.addEventListener('mouseup', this.handleMouseUp, true);
	      document.addEventListener('touchmove', this.handleMouseMove, true);
	      document.addEventListener('touchend', this.handleMouseUp, true);
	
	      this.setState({
	        active: true,
	        distance: 0
	      });
	
	      if (this.props.sliderActive) {
	        this.props.sliderActive(event);
	      }
	
	      this.handleMouseMove(event);
	
	      if (onMouseDown) {
	        onMouseDown(event);
	      }
	    }
	  }, {
	    key: 'handleMouseMove',
	    value: function handleMouseMove(event) {
	      var onMouseMove = this.props.onMouseMove;
	
	
	      if (onMouseMove) {
	        onMouseMove(event);
	      }
	    }
	  }, {
	    key: 'handleMouseUp',
	    value: function handleMouseUp(event) {
	      var onMouseUp = this.props.onMouseUp;
	
	
	      document.removeEventListener('mousemove', this.handleMouseMove, true);
	      document.removeEventListener('mouseup', this.handleMouseUp, true);
	      document.removeEventListener('touchmove', this.handleMouseMove, true);
	      document.removeEventListener('touchend', this.handleMouseUp, true);
	
	      this.setState({
	        active: false
	      });
	
	      if (this.props.sliderInactive) {
	        this.props.sliderInactive(event);
	      }
	
	      if (onMouseUp) {
	        onMouseUp(event);
	      }
	    }
	  }, {
	    key: 'handleFocus',
	    value: function handleFocus(e) {
	      document.addEventListener('keydown', this.handleKeyPress, true);
	      if (this.props.onFocus) {
	        this.props.onFocus(e);
	      }
	    }
	  }, {
	    key: 'handleBlur',
	    value: function handleBlur(e) {
	      document.removeEventListener('keydown', this.handleKeyPress, true);
	      if (this.props.onBlur) {
	        this.props.onBlur(e);
	      }
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick(event) {
	      event.preventDefault();
	      // event.stopPropagation();
	      if (this.props.onClick) {
	        this.props.onClick(event);
	      }
	    }
	  }, {
	    key: 'handleKeyPress',
	    value: function handleKeyPress(event) {
	      if (event.which === 37 || event.which === 40) {
	        // Left and Down Arrows
	        event.preventDefault();
	        event.stopPropagation();
	        this.stepBack();
	      } else if (event.which === 38 || event.which === 39) {
	        // Up and Right Arrows
	        event.preventDefault();
	        event.stopPropagation();
	        this.stepForward();
	      }
	    }
	  }, {
	    key: 'stepForward',
	    value: function stepForward() {
	      if (this.props.stepForward) {
	        this.props.stepForward();
	      }
	    }
	  }, {
	    key: 'stepBack',
	    value: function stepBack() {
	      if (this.props.stepBack) {
	        this.props.stepBack();
	      }
	    }
	  }, {
	    key: 'calculateDistance',
	    value: function calculateDistance(event) {
	      var node = (0, _reactDom.findDOMNode)(this);
	      var position = Dom.getPointerPosition(node, event);
	      if (this.props.vertical) {
	        return position.y;
	      }
	      return position.x;
	    }
	  }, {
	    key: 'renderChildren',
	    value: function renderChildren() {
	      var progress = this.getProgress();
	      var percentage = (progress * 100).toFixed(2) + '%';
	      return _react2.default.Children.map(this.props.children, function (child) {
	        return _react2.default.cloneElement(child, { progress: progress, percentage: percentage });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          vertical = _props.vertical,
	          label = _props.label,
	          valuenow = _props.valuenow,
	          valuetext = _props.valuetext;
	
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)(this.props.className, {
	            'video-react-slider-vertical': vertical,
	            'video-react-slider-horizontal': !vertical,
	            'video-react-sliding': this.state.active
	          }, 'video-react-slider'),
	          tabIndex: '0',
	          onMouseDown: this.handleMouseDown,
	          onTouchStart: this.handleMouseDown,
	          onFocus: this.handleFocus,
	          onBlur: this.handleBlur,
	          onClick: this.handleClick,
	          'aria-label': label || '',
	          'aria-valuenow': valuenow || '',
	          'aria-valuetext': valuetext || '',
	          'aria-valuemin': 0,
	          'aria-valuemax': 100
	        },
	        this.renderChildren()
	      );
	    }
	  }]);
	
	  return Slider;
	}(_react.Component);
	
	exports.default = Slider;
	
	
	Slider.propTypes = propTypes;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _MenuButton = __webpack_require__(327);
	
	var _MenuButton2 = _interopRequireDefault(_MenuButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  actions: _propTypes2.default.object,
	  rates: _propTypes2.default.array,
	  className: _propTypes2.default.string
	};
	
	var defaultProps = {
	  rates: [2, 1.5, 1.25, 1, 0.5, 0.25]
	};
	
	var PlaybackRateMenuButton = function (_Component) {
	  _inherits(PlaybackRateMenuButton, _Component);
	
	  function PlaybackRateMenuButton(props, context) {
	    _classCallCheck(this, PlaybackRateMenuButton);
	
	    var _this = _possibleConstructorReturn(this, (PlaybackRateMenuButton.__proto__ || Object.getPrototypeOf(PlaybackRateMenuButton)).call(this, props, context));
	
	    _this.handleSelectItem = _this.handleSelectItem.bind(_this);
	    return _this;
	  }
	
	  _createClass(PlaybackRateMenuButton, [{
	    key: 'handleSelectItem',
	    value: function handleSelectItem(index) {
	      var _props = this.props,
	          rates = _props.rates,
	          actions = _props.actions;
	
	      if (index >= 0 && index < rates.length) {
	        actions.changeRate(rates[index]);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          rates = _props2.rates,
	          player = _props2.player;
	
	      var items = rates.map(function (rate) {
	        return {
	          label: rate + 'x',
	          value: rate
	        };
	      });
	      var selectedIndex = rates.indexOf(player.playbackRate) || 0;
	
	      return _react2.default.createElement(
	        _MenuButton2.default,
	        {
	          className: (0, _classnames2.default)('video-react-playback-rate', this.props.className),
	          onSelectItem: this.handleSelectItem,
	          items: items,
	          selectedIndex: selectedIndex
	        },
	        _react2.default.createElement(
	          'span',
	          { className: 'video-react-control-text' },
	          'Playback Rate'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'video-react-playback-rate-value' },
	          player.playbackRate.toFixed(2),
	          'x'
	        )
	      );
	    }
	  }]);
	
	  return PlaybackRateMenuButton;
	}(_react.Component);
	
	PlaybackRateMenuButton.propTypes = propTypes;
	PlaybackRateMenuButton.defaultProps = defaultProps;
	exports.default = PlaybackRateMenuButton;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.findElPosition = findElPosition;
	exports.getPointerPosition = getPointerPosition;
	exports.blurNode = blurNode;
	exports.hasClass = hasClass;
	
	var _reactDom = __webpack_require__(91);
	
	/**
	 * Offset Left
	 * getBoundingClientRect technique from
	 * John Resig http://ejohn.org/blog/getboundingclientrect-is-awesome/
	 *
	 * @function findElPosition
	 * @param {Element} el Element from which to get offset
	 * @return {Object}
	 */
	function findElPosition(el) {
	  var box = void 0;
	
	  if (el.getBoundingClientRect && el.parentNode) {
	    box = el.getBoundingClientRect();
	  }
	
	  if (!box) {
	    return {
	      left: 0,
	      top: 0
	    };
	  }
	
	  var docEl = document.documentElement;
	  var body = document.body;
	
	  var clientLeft = docEl.clientLeft || body.clientLeft || 0;
	  var scrollLeft = window.pageXOffset || body.scrollLeft;
	  var left = box.left + scrollLeft - clientLeft;
	
	  var clientTop = docEl.clientTop || body.clientTop || 0;
	  var scrollTop = window.pageYOffset || body.scrollTop;
	  var top = box.top + scrollTop - clientTop;
	
	  // Android sometimes returns slightly off decimal values, so need to round
	  return {
	    left: Math.round(left),
	    top: Math.round(top)
	  };
	}
	
	/**
	 * Get pointer position in element
	 * Returns an object with x and y coordinates.
	 * The base on the coordinates are the bottom left of the element.
	 *
	 * @function getPointerPosition
	 * @param {Element} el Element on which to get the pointer position on
	 * @param {Event} event Event object
	 * @return {Object} This object will have x and y coordinates corresponding to the mouse position
	 */
	function getPointerPosition(el, event) {
	  var position = {};
	  var box = findElPosition(el);
	  var boxW = el.offsetWidth;
	  var boxH = el.offsetHeight;
	
	  var boxY = box.top;
	  var boxX = box.left;
	  var pageY = event.pageY;
	  var pageX = event.pageX;
	
	  if (event.changedTouches) {
	    pageX = event.changedTouches[0].pageX;
	    pageY = event.changedTouches[0].pageY;
	  }
	
	  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));
	  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));
	
	  return position;
	}
	
	// blur an element
	function blurNode(reactNode) {
	  var domNode = (0, _reactDom.findDOMNode)(reactNode);
	  if (domNode && domNode.blur) {
	    domNode.blur();
	  }
	}
	
	// check if an element has a class name
	function hasClass(elm, cls) {
	  var classes = elm.className.split(' ');
	  for (var i = 0; i < classes.length; i++) {
	    if (classes[i].toLowerCase() === cls.toLowerCase()) {
	      return true;
	    }
	  }
	  return false;
	}

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(21)
	  , toIndex  = __webpack_require__(66)
	  , toLength = __webpack_require__(19);
	module.exports = function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , aLen   = arguments.length
	    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
	    , end    = aLen > 2 ? arguments[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(15)
	  , createDesc      = __webpack_require__(54);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(12)
	  , document = __webpack_require__(7).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 122 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(13)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(7).document && document.documentElement;

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(12)
	  , setPrototypeOf = __webpack_require__(133).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(77)
	  , ITERATOR   = __webpack_require__(13)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(39);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(61)
	  , descriptor     = __webpack_require__(54)
	  , setToStringTag = __webpack_require__(78)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(29)(IteratorPrototype, __webpack_require__(13)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(60)
	  , $export        = __webpack_require__(1)
	  , redefine       = __webpack_require__(30)
	  , hide           = __webpack_require__(29)
	  , has            = __webpack_require__(27)
	  , Iterators      = __webpack_require__(77)
	  , $iterCreate    = __webpack_require__(128)
	  , setToStringTag = __webpack_require__(78)
	  , getPrototypeOf = __webpack_require__(36)
	  , ITERATOR       = __webpack_require__(13)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 130 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 131 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(7)
	  , macrotask = __webpack_require__(140).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(39)(process) == 'process';
	
	module.exports = function(){
	  var head, last, notify;
	
	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };
	
	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(12)
	  , anObject = __webpack_require__(5);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(50)(Function.call, __webpack_require__(35).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(104)('keys')
	  , uid    = __webpack_require__(67);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(5)
	  , aFunction = __webpack_require__(28)
	  , SPECIES   = __webpack_require__(13)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(55)
	  , defined   = __webpack_require__(40);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(100)
	  , defined  = __webpack_require__(40);
	
	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(55)
	  , defined   = __webpack_require__(40);
	
	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 139 */
/***/ function(module, exports) {

	module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(50)
	  , invoke             = __webpack_require__(99)
	  , html               = __webpack_require__(124)
	  , cel                = __webpack_require__(121)
	  , global             = __webpack_require__(7)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(39)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(7)
	  , DESCRIPTORS    = __webpack_require__(14)
	  , LIBRARY        = __webpack_require__(60)
	  , $typed         = __webpack_require__(105)
	  , hide           = __webpack_require__(29)
	  , redefineAll    = __webpack_require__(64)
	  , fails          = __webpack_require__(9)
	  , anInstance     = __webpack_require__(59)
	  , toInteger      = __webpack_require__(55)
	  , toLength       = __webpack_require__(19)
	  , gOPN           = __webpack_require__(62).f
	  , dP             = __webpack_require__(15).f
	  , arrayFill      = __webpack_require__(119)
	  , setToStringTag = __webpack_require__(78)
	  , ARRAY_BUFFER   = 'ArrayBuffer'
	  , DATA_VIEW      = 'DataView'
	  , PROTOTYPE      = 'prototype'
	  , WRONG_LENGTH   = 'Wrong length!'
	  , WRONG_INDEX    = 'Wrong index!'
	  , $ArrayBuffer   = global[ARRAY_BUFFER]
	  , $DataView      = global[DATA_VIEW]
	  , Math           = global.Math
	  , RangeError     = global.RangeError
	  , Infinity       = global.Infinity
	  , BaseBuffer     = $ArrayBuffer
	  , abs            = Math.abs
	  , pow            = Math.pow
	  , floor          = Math.floor
	  , log            = Math.log
	  , LN2            = Math.LN2
	  , BUFFER         = 'buffer'
	  , BYTE_LENGTH    = 'byteLength'
	  , BYTE_OFFSET    = 'byteOffset'
	  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
	  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
	  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;
	
	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function(value, mLen, nBytes){
	  var buffer = Array(nBytes)
	    , eLen   = nBytes * 8 - mLen - 1
	    , eMax   = (1 << eLen) - 1
	    , eBias  = eMax >> 1
	    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
	    , i      = 0
	    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
	    , e, m, c;
	  value = abs(value)
	  if(value != value || value === Infinity){
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if(value * (c = pow(2, -e)) < 1){
	      e--;
	      c *= 2;
	    }
	    if(e + eBias >= 1){
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if(value * c >= 2){
	      e++;
	      c /= 2;
	    }
	    if(e + eBias >= eMax){
	      m = 0;
	      e = eMax;
	    } else if(e + eBias >= 1){
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
	  e = e << mLen | m;
	  eLen += mLen;
	  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function(buffer, mLen, nBytes){
	  var eLen  = nBytes * 8 - mLen - 1
	    , eMax  = (1 << eLen) - 1
	    , eBias = eMax >> 1
	    , nBits = eLen - 7
	    , i     = nBytes - 1
	    , s     = buffer[i--]
	    , e     = s & 127
	    , m;
	  s >>= 7;
	  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
	  if(e === 0){
	    e = 1 - eBias;
	  } else if(e === eMax){
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  } return (s ? -1 : 1) * m * pow(2, e - mLen);
	};
	
	var unpackI32 = function(bytes){
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function(it){
	  return [it & 0xff];
	};
	var packI16 = function(it){
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function(it){
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function(it){
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function(it){
	  return packIEEE754(it, 23, 4);
	};
	
	var addGetter = function(C, key, internal){
	  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
	};
	
	var get = function(view, bytes, index, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function(view, bytes, index, conversion, value, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = conversion(+value);
	  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	};
	
	var validateArrayBufferArguments = function(that, length){
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length
	    , byteLength   = toLength(numberLength);
	  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};
	
	if(!$typed.ABV){
	  $ArrayBuffer = function ArrayBuffer(length){
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b       = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };
	
	  $DataView = function DataView(buffer, byteOffset, byteLength){
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH]
	      , offset       = toInteger(byteOffset);
	    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };
	
	  if(DESCRIPTORS){
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }
	
	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset){
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset){
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if(!fails(function(){
	    new $ArrayBuffer;     // eslint-disable-line no-new
	  }) || !fails(function(){
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })){
	    $ArrayBuffer = function ArrayBuffer(length){
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
	      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2))
	    , $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(7)
	  , core           = __webpack_require__(49)
	  , LIBRARY        = __webpack_require__(60)
	  , wksExt         = __webpack_require__(222)
	  , defineProperty = __webpack_require__(15).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(87)
	  , ITERATOR  = __webpack_require__(13)('iterator')
	  , Iterators = __webpack_require__(77);
	module.exports = __webpack_require__(49).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(75)
	  , step             = __webpack_require__(210)
	  , Iterators        = __webpack_require__(77)
	  , toIObject        = __webpack_require__(32);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(129)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 145 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(81);
	var Danger = __webpack_require__(579);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactInstrumentation = __webpack_require__(33);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(156);
	var setInnerHTML = __webpack_require__(109);
	var setTextContent = __webpack_require__(263);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (true) {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (true) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (true) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: { toIndex: update.toIndex, content: update.content.toString() }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (true) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;

/***/ },
/* 147 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var ReactErrorUtils = __webpack_require__(154);
	
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (true) {
	       true ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (true) {
	       true ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}
	
	var validateEventDispatches;
	if (true) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	     true ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (true) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (true) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (true) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  true ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;

/***/ },
/* 149 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var ReactPropTypesSecret = __webpack_require__(251);
	var propTypesFactory = __webpack_require__(90);
	
	var React = __webpack_require__(38);
	var PropTypes = propTypesFactory(React.isValidElement);
	
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  true ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  true ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  true ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: PropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	         true ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var invariant = __webpack_require__(3);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  true ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactDefaultInjection = __webpack_require__(243);
	var ReactMount = __webpack_require__(249);
	var ReactReconciler = __webpack_require__(57);
	var ReactUpdates = __webpack_require__(34);
	var ReactVersion = __webpack_require__(254);
	
	var findDOMNode = __webpack_require__(257);
	var getHostComponentFromComposite = __webpack_require__(259);
	var renderSubtreeIntoContainer = __webpack_require__(638);
	var warning = __webpack_require__(4);
	
	ReactDefaultInjection.inject();
	
	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (true) {
	  var ExecutionEnvironment = __webpack_require__(18);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	     true ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	     true ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	         true ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	if (true) {
	  var ReactInstrumentation = __webpack_require__(33);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(600);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(593);
	  var ReactDOMInvalidARIAHook = __webpack_require__(592);
	
	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}
	
	module.exports = ReactDOM;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var ReactUpdates = __webpack_require__(34);
	var Transaction = __webpack_require__(107);
	
	var emptyFunction = __webpack_require__(37);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (true) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = func.bind(null, a);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactInstanceMap = __webpack_require__(84);
	var ReactInstrumentation = __webpack_require__(33);
	var ReactUpdates = __webpack_require__(34);
	
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (true) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	       true ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }
	
	  if (true) {
	     true ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (true) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	         true ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    // Future-proof 15.5
	    if (callback !== undefined && callback !== null) {
	      ReactUpdateQueue.validateCallback(callback, 'replaceState');
	      if (internalInstance._pendingCallbacks) {
	        internalInstance._pendingCallbacks.push(callback);
	      } else {
	        internalInstance._pendingCallbacks = [callback];
	      }
	    }
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (true) {
	      ReactInstrumentation.debugTool.onSetState();
	       true ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  true ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;

/***/ },
/* 156 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 157 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 158 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 159 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	var ReactCompositeComponent = __webpack_require__(238);
	var ReactEmptyComponent = __webpack_require__(244);
	var ReactHostComponent = __webpack_require__(246);
	
	var getNextDebugID = __webpack_require__(283);
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (true) {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ?  true ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  true ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (true) {
	     true ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (true) {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (true) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	module.exports = instantiateReactComponent;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(18);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 162 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var emptyFunction = __webpack_require__(37);
	var warning = __webpack_require__(4);
	
	var validateDOMNesting = emptyFunction;
	
	if (true) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    if (childText != null) {
	       true ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	         true ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	         true ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;

/***/ },
/* 164 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = void 0;
	
	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(Array.prototype.slice.call(arguments));
	      return;
	    }
	
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) {
	      return;
	    }
	
	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }
	
	    sync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }
	
	    sync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }
	
	  next();
	}
	
	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];
	
	  if (length === 0) return callback(null, values);
	
	  var isDone = false,
	      doneCount = 0;
	
	  function done(index, error, value) {
	    if (isDone) return;
	
	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;
	
	      isDone = ++doneCount === length;
	
	      if (isDone) callback(null, values);
	    }
	  }
	
	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.router = exports.routes = exports.route = exports.components = exports.component = exports.location = exports.history = exports.falsy = exports.locationShape = exports.routerShape = undefined;
	
	var _react = __webpack_require__(2);
	
	var _deprecateObjectProperties = __webpack_require__(111);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	var _InternalPropTypes = __webpack_require__(70);
	
	var InternalPropTypes = _interopRequireWildcard(_InternalPropTypes);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	var routerShape = exports.routerShape = shape({
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired,
	  setRouteLeaveHook: func.isRequired,
	  isActive: func.isRequired
	});
	
	var locationShape = exports.locationShape = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});
	
	// Deprecated stuff below:
	
	var falsy = exports.falsy = InternalPropTypes.falsy;
	var history = exports.history = InternalPropTypes.history;
	var location = exports.location = locationShape;
	var component = exports.component = InternalPropTypes.component;
	var components = exports.components = InternalPropTypes.components;
	var route = exports.route = InternalPropTypes.route;
	var routes = exports.routes = InternalPropTypes.routes;
	var router = exports.router = routerShape;
	
	if (true) {
	  (function () {
	    var deprecatePropType = function deprecatePropType(propType, message) {
	      return function () {
	         true ? (0, _routerWarning2.default)(false, message) : void 0;
	        return propType.apply(undefined, arguments);
	      };
	    };
	
	    var deprecateInternalPropType = function deprecateInternalPropType(propType) {
	      return deprecatePropType(propType, 'This prop type is not intended for external use, and was previously exported by mistake. These internal prop types are deprecated for external use, and will be removed in a later version.');
	    };
	
	    var deprecateRenamedPropType = function deprecateRenamedPropType(propType, name) {
	      return deprecatePropType(propType, 'The `' + name + '` prop type is now exported as `' + name + 'Shape` to avoid name conflicts. This export is deprecated and will be removed in a later version.');
	    };
	
	    exports.falsy = falsy = deprecateInternalPropType(falsy);
	    exports.history = history = deprecateInternalPropType(history);
	    exports.component = component = deprecateInternalPropType(component);
	    exports.components = components = deprecateInternalPropType(components);
	    exports.route = route = deprecateInternalPropType(route);
	    exports.routes = routes = deprecateInternalPropType(routes);
	
	    exports.location = location = deprecateRenamedPropType(location, 'location');
	    exports.router = router = deprecateRenamedPropType(router, 'router');
	  })();
	}
	
	var defaultExport = {
	  falsy: falsy,
	  history: history,
	  location: location,
	  component: component,
	  components: components,
	  route: route,
	  // For some reason, routes was never here.
	  router: router
	};
	
	if (true) {
	  defaultExport = (0, _deprecateObjectProperties2.default)(defaultExport, 'The default export from `react-router/lib/PropTypes` is deprecated. Please use the named exports instead.');
	}
	
	exports.default = defaultExport;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = createTransitionManager;
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _computeChangedRoutes2 = __webpack_require__(655);
	
	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);
	
	var _TransitionUtils = __webpack_require__(652);
	
	var _isActive2 = __webpack_require__(659);
	
	var _isActive3 = _interopRequireDefault(_isActive2);
	
	var _getComponents = __webpack_require__(656);
	
	var _getComponents2 = _interopRequireDefault(_getComponents);
	
	var _matchRoutes = __webpack_require__(661);
	
	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return true;
	  }return false;
	}
	
	function createTransitionManager(history, routes) {
	  var state = {};
	
	  // Signature should be (location, indexOnly), but needs to support (path,
	  // query, indexOnly)
	  function isActive(location) {
	    var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	    var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
	    var indexOnly = void 0;
	    if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {
	       true ? (0, _routerWarning2.default)(false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
	      location = { pathname: location, query: indexOnlyOrDeprecatedQuery };
	      indexOnly = deprecatedIndexOnly || false;
	    } else {
	      location = history.createLocation(location);
	      indexOnly = indexOnlyOrDeprecatedQuery;
	    }
	
	    return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
	  }
	
	  var partialNextState = void 0;
	
	  function match(location, callback) {
	    if (partialNextState && partialNextState.location === location) {
	      // Continue from where we left off.
	      finishMatch(partialNextState, callback);
	    } else {
	      (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	        if (error) {
	          callback(error);
	        } else if (nextState) {
	          finishMatch(_extends({}, nextState, { location: location }), callback);
	        } else {
	          callback();
	        }
	      });
	    }
	  }
	
	  function finishMatch(nextState, callback) {
	    var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState);
	
	    var leaveRoutes = _computeChangedRoutes.leaveRoutes;
	    var changeRoutes = _computeChangedRoutes.changeRoutes;
	    var enterRoutes = _computeChangedRoutes.enterRoutes;
	
	
	    (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);
	
	    // Tear down confirmation hooks for left routes
	    leaveRoutes.filter(function (route) {
	      return enterRoutes.indexOf(route) === -1;
	    }).forEach(removeListenBeforeHooksForRoute);
	
	    // change and enter hooks are run in series
	    (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function (error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
	    });
	
	    function finishEnterHooks(error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      // TODO: Fetch components after state is updated.
	      (0, _getComponents2.default)(nextState, function (error, components) {
	        if (error) {
	          callback(error);
	        } else {
	          // TODO: Make match a pure function and have some other API
	          // for "match and update state".
	          callback(null, null, state = _extends({}, nextState, { components: components }));
	        }
	      });
	    }
	
	    function handleErrorOrRedirect(error, redirectInfo) {
	      if (error) callback(error);else callback(null, redirectInfo);
	    }
	  }
	
	  var RouteGuid = 1;
	
	  function getRouteID(route) {
	    var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
	
	    return route.__id__ || create && (route.__id__ = RouteGuid++);
	  }
	
	  var RouteHooks = Object.create(null);
	
	  function getRouteHooksForRoutes(routes) {
	    return routes.reduce(function (hooks, route) {
	      hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
	      return hooks;
	    }, []);
	  }
	
	  function transitionHook(location, callback) {
	    (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	      if (nextState == null) {
	        // TODO: We didn't actually match anything, but hang
	        // onto error/nextState so we don't have to matchRoutes
	        // again in the listen callback.
	        callback();
	        return;
	      }
	
	      // Cache some state here so we don't have to
	      // matchRoutes() again in the listen callback.
	      partialNextState = _extends({}, nextState, { location: location });
	
	      var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);
	
	      var result = void 0;
	      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	        // Passing the location arg here indicates to
	        // the user that this is a transition hook.
	        result = hooks[i](location);
	      }
	
	      callback(result);
	    });
	  }
	
	  /* istanbul ignore next: untestable with Karma */
	  function beforeUnloadHook() {
	    // Synchronously check to see if any route hooks want
	    // to prevent the current window/tab from closing.
	    if (state.routes) {
	      var hooks = getRouteHooksForRoutes(state.routes);
	
	      var message = void 0;
	      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	        // Passing no args indicates to the user that this is a
	        // beforeunload hook. We don't know the next location.
	        message = hooks[i]();
	      }
	
	      return message;
	    }
	  }
	
	  var unlistenBefore = void 0,
	      unlistenBeforeUnload = void 0;
	
	  function removeListenBeforeHooksForRoute(route) {
	    var routeID = getRouteID(route, false);
	    if (!routeID) {
	      return;
	    }
	
	    delete RouteHooks[routeID];
	
	    if (!hasAnyProperties(RouteHooks)) {
	      // teardown transition & beforeunload hooks
	      if (unlistenBefore) {
	        unlistenBefore();
	        unlistenBefore = null;
	      }
	
	      if (unlistenBeforeUnload) {
	        unlistenBeforeUnload();
	        unlistenBeforeUnload = null;
	      }
	    }
	  }
	
	  /**
	   * Registers the given hook function to run before leaving the given route.
	   *
	   * During a normal transition, the hook function receives the next location
	   * as its only argument and can return either a prompt message (string) to show the user,
	   * to make sure they want to leave the page; or `false`, to prevent the transition.
	   * Any other return value will have no effect.
	   *
	   * During the beforeunload event (in browsers) the hook receives no arguments.
	   * In this case it must return a prompt message to prevent the transition.
	   *
	   * Returns a function that may be used to unbind the listener.
	   */
	  function listenBeforeLeavingRoute(route, hook) {
	    // TODO: Warn if they register for a route that isn't currently
	    // active. They're probably doing something wrong, like re-creating
	    // route objects on every location change.
	    var routeID = getRouteID(route);
	    var hooks = RouteHooks[routeID];
	
	    if (!hooks) {
	      var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);
	
	      RouteHooks[routeID] = [hook];
	
	      if (thereWereNoRouteHooks) {
	        // setup transition & beforeunload hooks
	        unlistenBefore = history.listenBefore(transitionHook);
	
	        if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	      }
	    } else {
	      if (hooks.indexOf(hook) === -1) {
	         true ? (0, _routerWarning2.default)(false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : void 0;
	
	        hooks.push(hook);
	      }
	    }
	
	    return function () {
	      var hooks = RouteHooks[routeID];
	
	      if (hooks) {
	        var newHooks = hooks.filter(function (item) {
	          return item !== hook;
	        });
	
	        if (newHooks.length === 0) {
	          removeListenBeforeHooksForRoute(route);
	        } else {
	          RouteHooks[routeID] = newHooks;
	        }
	      }
	    };
	  }
	
	  /**
	   * This is the API for stateful environments. As the location
	   * changes, we update state and call the listener. We can also
	   * gracefully handle errors and redirects.
	   */
	  function listen(listener) {
	    // TODO: Only use a single history listener. Otherwise we'll
	    // end up with multiple concurrent calls to match.
	    return history.listen(function (location) {
	      if (state.location === location) {
	        listener(null, state);
	      } else {
	        match(location, function (error, redirectLocation, nextState) {
	          if (error) {
	            listener(error);
	          } else if (redirectLocation) {
	            history.replace(redirectLocation);
	          } else if (nextState) {
	            listener(null, nextState);
	          } else {
	             true ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
	          }
	        });
	      }
	    });
	  }
	
	  return {
	    isActive: isActive,
	    match: match,
	    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	    listen: listen
	  };
	}
	
	//export default useRoutes
	
	module.exports = exports['default'];

/***/ },
/* 167 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.addEventListener = addEventListener;
	exports.removeEventListener = removeEventListener;
	exports.getHashPath = getHashPath;
	exports.replaceHashPath = replaceHashPath;
	exports.getWindowPath = getWindowPath;
	exports.go = go;
	exports.getUserConfirmation = getUserConfirmation;
	exports.supportsHistory = supportsHistory;
	exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;
	
	function addEventListener(node, event, listener) {
	  if (node.addEventListener) {
	    node.addEventListener(event, listener, false);
	  } else {
	    node.attachEvent('on' + event, listener);
	  }
	}
	
	function removeEventListener(node, event, listener) {
	  if (node.removeEventListener) {
	    node.removeEventListener(event, listener, false);
	  } else {
	    node.detachEvent('on' + event, listener);
	  }
	}
	
	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  return window.location.href.split('#')[1] || '';
	}
	
	function replaceHashPath(path) {
	  window.location.replace(window.location.pathname + window.location.search + '#' + path);
	}
	
	function getWindowPath() {
	  return window.location.pathname + window.location.search + window.location.hash;
	}
	
	function go(n) {
	  if (n) window.history.go(n);
	}
	
	function getUserConfirmation(message, callback) {
	  callback(window.confirm(message));
	}
	
	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	 */
	
	function supportsHistory() {
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}
	
	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	
	function supportsGoWithoutReloadUsingHash() {
	  var ua = navigator.userAgent;
	  return ua.indexOf('Firefox') === -1;
	}

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function deprecate(fn, message) {
	  return function () {
	     true ? _warning2['default'](false, '[history] ' + message) : undefined;
	    return fn.apply(this, arguments);
	  };
	}
	
	exports['default'] = deprecate;
	module.exports = exports['default'];

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);
	
	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	     true ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
	  }
	}
	
	exports['default'] = runTransitionHook;
	module.exports = exports['default'];

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(74);
	
	var ReactNoopUpdateQueue = __webpack_require__(171);
	
	var canDefineProperty = __webpack_require__(114);
	var emptyObject = __webpack_require__(68);
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  true ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (true) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	           true ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var warning = __webpack_require__(4);
	
	function warnNoop(publicInstance, callerName) {
	  if (true) {
	    var constructor = publicInstance.constructor;
	     true ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactstrap = __webpack_require__(17);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  return _react2.default.createElement(
	    'div',
	    { className: 'footer' },
	    _react2.default.createElement(
	      _reactstrap.Container,
	      null,
	      _react2.default.createElement(
	        _reactstrap.Row,
	        null,
	        _react2.default.createElement(
	          _reactstrap.Col,
	          { className: 'text-center' },
	          _react2.default.createElement(
	            'p',
	            { className: 'social' },
	            _react2.default.createElement('iframe', { src: 'https://ghbtns.com/github-btn.html?user=video-react&repo=video-react&type=star&count=true', frameBorder: '0', scrolling: '0', width: '100', height: '20px' }),
	            _react2.default.createElement('iframe', { src: 'https://ghbtns.com/github-btn.html?user=video-react&repo=video-react&type=fork&count=true', frameBorder: '0', scrolling: '0', width: '100', height: '20px' }),
	            _react2.default.createElement(
	              'a',
	              { href: 'https://js.org', target: '_blank', title: 'JS.ORG | JavaScript Community' },
	              _react2.default.createElement('img', { src: 'https://logo.js.org/dark_horz.png', height: '20', alt: 'JS.ORG Logo' })
	            )
	          )
	        )
	      )
	    )
	  );
	};

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(71);
	
	var _reactstrap = __webpack_require__(17);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UINav = function (_React$Component) {
	  _inherits(UINav, _React$Component);
	
	  function UINav(props) {
	    _classCallCheck(this, UINav);
	
	    var _this = _possibleConstructorReturn(this, (UINav.__proto__ || Object.getPrototypeOf(UINav)).call(this, props));
	
	    _this.toggleNavbar = _this.toggleNavbar.bind(_this);
	    _this.state = {
	      showNavbar: false
	    };
	    return _this;
	  }
	
	  _createClass(UINav, [{
	    key: 'toggleNavbar',
	    value: function toggleNavbar(e) {
	      e.preventDefault();
	      this.setState({
	        showNavbar: !this.state.showNavbar
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactstrap.Navbar,
	        { className: 'header', full: true, color: 'faded', light: true, toggleable: true },
	        _react2.default.createElement(
	          _reactstrap.Container,
	          null,
	          _react2.default.createElement(_reactstrap.NavbarToggler, { right: true, onClick: this.toggleNavbar }),
	          _react2.default.createElement(
	            _reactstrap.NavbarBrand,
	            { className: 'mr-auto', tag: _reactRouter.Link, to: '/' },
	            'Video-React'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Collapse,
	            { navbar: true, isOpen: this.state.showNavbar },
	            _react2.default.createElement(
	              _reactstrap.Nav,
	              { navbar: true, className: 'ml-sm-auto' },
	              _react2.default.createElement(
	                _reactstrap.NavItem,
	                null,
	                _react2.default.createElement(
	                  _reactstrap.NavLink,
	                  { tag: _reactRouter.Link, className: 'nav-link', to: '/customize/', activeClassName: 'active' },
	                  'Customize'
	                )
	              ),
	              _react2.default.createElement(
	                _reactstrap.NavItem,
	                null,
	                _react2.default.createElement(
	                  _reactstrap.NavLink,
	                  { tag: _reactRouter.Link, className: 'nav-link', to: '/components/', activeClassName: 'active' },
	                  'Components'
	                )
	              ),
	              _react2.default.createElement(
	                _reactstrap.NavItem,
	                null,
	                _react2.default.createElement(
	                  _reactstrap.NavLink,
	                  { href: 'https://github.com/video-react/video-react' },
	                  'Github'
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	
	  return UINav;
	}(_react2.default.Component);
	
	exports.default = UINav;

/***/ },
/* 174 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.handleLoadStart = handleLoadStart;
	exports.handleCanPlay = handleCanPlay;
	exports.handleWaiting = handleWaiting;
	exports.handleCanPlayThrough = handleCanPlayThrough;
	exports.handlePlaying = handlePlaying;
	exports.handlePlay = handlePlay;
	exports.handlePause = handlePause;
	exports.handleEnd = handleEnd;
	exports.handleSeeking = handleSeeking;
	exports.handleSeeked = handleSeeked;
	exports.handleDurationChange = handleDurationChange;
	exports.handleTimeUpdate = handleTimeUpdate;
	exports.handleVolumeChange = handleVolumeChange;
	exports.handleProgressChange = handleProgressChange;
	exports.handleRateChange = handleRateChange;
	exports.handleSuspend = handleSuspend;
	exports.handleAbort = handleAbort;
	exports.handleEmptied = handleEmptied;
	exports.handleStalled = handleStalled;
	exports.handleLoadedMetaData = handleLoadedMetaData;
	exports.handleLoadedData = handleLoadedData;
	exports.handleResize = handleResize;
	exports.handleError = handleError;
	exports.handleSeekingTime = handleSeekingTime;
	exports.handleEndSeeking = handleEndSeeking;
	var LOAD_START = exports.LOAD_START = 'video-react/LOAD_START';
	var CAN_PLAY = exports.CAN_PLAY = 'video-react/CAN_PLAY';
	var WAITING = exports.WAITING = 'video-react/WAITING';
	var CAN_PLAY_THROUGH = exports.CAN_PLAY_THROUGH = 'video-react/CAN_PLAY_THROUGH';
	var PLAYING = exports.PLAYING = 'video-react/PLAYING';
	var PLAY = exports.PLAY = 'video-react/PLAY';
	var PAUSE = exports.PAUSE = 'video-react/PAUSE';
	var END = exports.END = 'video-react/END';
	var SEEKING = exports.SEEKING = 'video-react/SEEKING';
	var SEEKED = exports.SEEKED = 'video-react/SEEKED';
	var SEEKING_TIME = exports.SEEKING_TIME = 'video-react/SEEKING_TIME';
	var END_SEEKING = exports.END_SEEKING = 'video-react/END_SEEKING';
	var DURATION_CHANGE = exports.DURATION_CHANGE = 'video-react/DURATION_CHANGE';
	var TIME_UPDATE = exports.TIME_UPDATE = 'video-react/TIME_UPDATE';
	var VOLUME_CHANGE = exports.VOLUME_CHANGE = 'video-react/VOLUME_CHANGE';
	var PROGRESS_CHANGE = exports.PROGRESS_CHANGE = 'video-react/PROGRESS_CHANGE';
	var RATE_CHANGE = exports.RATE_CHANGE = 'video-react/RATE_CHANGE';
	var SUSPEND = exports.SUSPEND = 'video-react/SUSPEND';
	var ABORT = exports.ABORT = 'video-react/ABORT';
	var EMPTIED = exports.EMPTIED = 'video-react/EMPTIED';
	var STALLED = exports.STALLED = 'video-react/STALLED';
	var LOADED_META_DATA = exports.LOADED_META_DATA = 'video-react/LOADED_META_DATA';
	var LOADED_DATA = exports.LOADED_DATA = 'video-react/LOADED_DATA';
	var RESIZE = exports.RESIZE = 'video-react/RESIZE';
	var ERROR = exports.ERROR = 'video-react/ERROR';
	
	function handleLoadStart(videoProps) {
	  return {
	    type: LOAD_START,
	    videoProps: videoProps
	  };
	}
	
	function handleCanPlay(videoProps) {
	  return {
	    type: CAN_PLAY,
	    videoProps: videoProps
	  };
	}
	
	function handleWaiting(videoProps) {
	  return {
	    type: WAITING,
	    videoProps: videoProps
	  };
	}
	
	function handleCanPlayThrough(videoProps) {
	  return {
	    type: CAN_PLAY_THROUGH,
	    videoProps: videoProps
	  };
	}
	
	function handlePlaying(videoProps) {
	  return {
	    type: PLAYING,
	    videoProps: videoProps
	  };
	}
	
	function handlePlay(videoProps) {
	  return {
	    type: PLAY,
	    videoProps: videoProps
	  };
	}
	
	function handlePause(videoProps) {
	  return {
	    type: PAUSE,
	    videoProps: videoProps
	  };
	}
	
	function handleEnd(videoProps) {
	  return {
	    type: END,
	    videoProps: videoProps
	  };
	}
	
	function handleSeeking(videoProps) {
	  return {
	    type: SEEKING,
	    videoProps: videoProps
	  };
	}
	
	function handleSeeked(videoProps) {
	  return {
	    type: SEEKED,
	    videoProps: videoProps
	  };
	}
	
	function handleDurationChange(videoProps) {
	  return {
	    type: DURATION_CHANGE,
	    videoProps: videoProps
	  };
	}
	
	function handleTimeUpdate(videoProps) {
	  return {
	    type: TIME_UPDATE,
	    videoProps: videoProps
	  };
	}
	
	function handleVolumeChange(videoProps) {
	  return {
	    type: VOLUME_CHANGE,
	    videoProps: videoProps
	  };
	}
	
	function handleProgressChange(videoProps) {
	  return {
	    type: PROGRESS_CHANGE,
	    videoProps: videoProps
	  };
	}
	
	function handleRateChange(videoProps) {
	  return {
	    type: RATE_CHANGE,
	    videoProps: videoProps
	  };
	}
	
	function handleSuspend(videoProps) {
	  return {
	    type: SUSPEND,
	    videoProps: videoProps
	  };
	}
	
	function handleAbort(videoProps) {
	  return {
	    type: ABORT,
	    videoProps: videoProps
	  };
	}
	
	function handleEmptied(videoProps) {
	  return {
	    type: EMPTIED,
	    videoProps: videoProps
	  };
	}
	
	function handleStalled(videoProps) {
	  return {
	    type: STALLED,
	    videoProps: videoProps
	  };
	}
	
	function handleLoadedMetaData(videoProps) {
	  return {
	    type: LOADED_META_DATA,
	    videoProps: videoProps
	  };
	}
	
	function handleLoadedData(videoProps) {
	  return {
	    type: LOADED_DATA,
	    videoProps: videoProps
	  };
	}
	
	function handleResize(videoProps) {
	  return {
	    type: RESIZE,
	    videoProps: videoProps
	  };
	}
	
	function handleError(videoProps) {
	  return {
	    type: ERROR,
	    videoProps: videoProps
	  };
	}
	
	function handleSeekingTime(time) {
	  return {
	    type: SEEKING_TIME,
	    time: time
	  };
	}
	
	function handleEndSeeking(time) {
	  return {
	    type: END_SEEKING,
	    time: time
	  };
	}

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  manager: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	var Bezel = function (_Component) {
	  _inherits(Bezel, _Component);
	
	  function Bezel(props, context) {
	    _classCallCheck(this, Bezel);
	
	    var _this = _possibleConstructorReturn(this, (Bezel.__proto__ || Object.getPrototypeOf(Bezel)).call(this, props, context));
	
	    _this.timer = null;
	    props.manager.subscribeToOperationStateChange(_this.handleStateChange.bind(_this));
	
	    _this.state = {
	      hidden: true,
	      operation: {}
	    };
	    return _this;
	  }
	
	  _createClass(Bezel, [{
	    key: 'handleStateChange',
	    value: function handleStateChange(state, prevState) {
	      var _this2 = this;
	
	      if (state.count !== prevState.count && state.operation.source === 'shortcut') {
	        if (this.timer) {
	          // previous animation is not finished
	          clearTimeout(this.timer); // cancel it
	          this.timer = null;
	        }
	
	        // show it
	        // update operation
	        this.setState({
	          hidden: false,
	          count: state.count,
	          operation: state.operation
	        });
	
	        // hide it after 0.5s
	        this.timer = setTimeout(function () {
	          _this2.setState({
	            hidden: true
	          });
	          _this2.timer = null;
	        }, 500);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      // only displays for shortcut so far
	      if (this.state.operation.source !== 'shortcut') {
	        return null;
	      }
	      var style = this.state.hidden ? {
	        display: 'none'
	      } : null;
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)({
	            'video-react-bezel': true,
	            'video-react-bezel-animation': this.state.count % 2 === 0,
	            'video-react-bezel-animation-alt': this.state.count % 2 === 1
	          }, this.props.className),
	          style: style,
	          role: 'status',
	          'aria-label': this.state.operation.action
	        },
	        _react2.default.createElement('div', {
	          className: (0, _classnames2.default)('video-react-bezel-icon', 'video-react-bezel-icon-' + this.state.operation.action)
	        })
	      );
	    }
	  }]);
	
	  return Bezel;
	}(_react.Component);
	
	exports.default = Bezel;
	
	
	Bezel.propTypes = propTypes;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  actions: _propTypes2.default.object,
	  player: _propTypes2.default.object,
	  position: _propTypes2.default.string,
	  className: _propTypes2.default.string
	};
	
	var defaultProps = {
	  position: 'left'
	};
	
	var BigPlayButton = function (_Component) {
	  _inherits(BigPlayButton, _Component);
	
	  function BigPlayButton(props, context) {
	    _classCallCheck(this, BigPlayButton);
	
	    var _this = _possibleConstructorReturn(this, (BigPlayButton.__proto__ || Object.getPrototypeOf(BigPlayButton)).call(this, props, context));
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(BigPlayButton, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {}
	  }, {
	    key: 'handleClick',
	    value: function handleClick() {
	      var actions = this.props.actions;
	
	      actions.play();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          player = _props.player,
	          position = _props.position;
	
	      if (player.hasStarted || !player.currentSrc) {
	        return null;
	      }
	      return _react2.default.createElement(
	        'button',
	        {
	          className: (0, _classnames2.default)('video-react-big-play-button', 'video-react-big-play-button-' + position, this.props.className),
	          type: 'button',
	          'aria-live': 'polite',
	          tabIndex: '0',
	          onClick: this.handleClick
	        },
	        _react2.default.createElement(
	          'span',
	          { className: 'video-react-control-text' },
	          'Play Video'
	        )
	      );
	    }
	  }]);
	
	  return BigPlayButton;
	}(_react.Component);
	
	exports.default = BigPlayButton;
	
	
	BigPlayButton.propTypes = propTypes;
	BigPlayButton.defaultProps = defaultProps;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  tagName: _propTypes2.default.string.isRequired,
	  onClick: _propTypes2.default.func.isRequired,
	  onFocus: _propTypes2.default.func,
	  onBlur: _propTypes2.default.func,
	  className: _propTypes2.default.string
	};
	
	var defaultProps = {
	  tagName: 'div'
	};
	
	var ClickableComponent = function (_Component) {
	  _inherits(ClickableComponent, _Component);
	
	  function ClickableComponent(props, context) {
	    _classCallCheck(this, ClickableComponent);
	
	    var _this = _possibleConstructorReturn(this, (ClickableComponent.__proto__ || Object.getPrototypeOf(ClickableComponent)).call(this, props, context));
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    _this.handleFocus = _this.handleFocus.bind(_this);
	    _this.handleBlur = _this.handleBlur.bind(_this);
	    _this.handleKeypress = _this.handleKeypress.bind(_this);
	    return _this;
	  }
	
	  _createClass(ClickableComponent, [{
	    key: 'handleKeypress',
	    value: function handleKeypress(event) {
	      // Support Space (32) or Enter (13) key operation to fire a click event
	      if (event.which === 32 || event.which === 13) {
	        event.preventDefault();
	        this.handleClick(event);
	      }
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick(event) {
	      var onClick = this.props.onClick;
	
	      onClick(event);
	    }
	  }, {
	    key: 'handleFocus',
	    value: function handleFocus(e) {
	      document.addEventListener('keydown', this.handleKeypress);
	      if (this.props.onFocus) {
	        this.props.onFocus(e);
	      }
	    }
	  }, {
	    key: 'handleBlur',
	    value: function handleBlur(e) {
	      document.removeEventListener('keydown', this.handleKeypress);
	      if (this.props.onBlur) {
	        this.props.onBlur(e);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var Tag = this.props.tagName;
	      var props = _extends({}, this.props);
	      delete props.tagName;
	      delete props.className;
	      return _react2.default.createElement(Tag, _extends({
	        className: (0, _classnames2.default)(this.props.className),
	        role: 'button',
	        tabIndex: '0',
	        onClick: this.handleClick,
	        onFocus: this.handleFocus,
	        onBlur: this.handleBlur
	      }, props));
	    }
	  }]);
	
	  return ClickableComponent;
	}(_react.Component);
	
	exports.default = ClickableComponent;
	
	
	ClickableComponent.propTypes = propTypes;
	ClickableComponent.defaultProps = defaultProps;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = LoadingSpinner;
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	function LoadingSpinner(_ref) {
	  var player = _ref.player,
	      className = _ref.className;
	
	  if (!player.hasStarted || !player.seeking && !player.waiting) {
	    return null;
	  }
	
	  return _react2.default.createElement('div', {
	    className: (0, _classnames2.default)('video-react-loading-spinner', className)
	  });
	}
	
	LoadingSpinner.propTypes = propTypes;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  poster: _propTypes2.default.string,
	  player: _propTypes2.default.object,
	  actions: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	function PosterImage(_ref) {
	  var poster = _ref.poster,
	      player = _ref.player,
	      actions = _ref.actions,
	      className = _ref.className;
	
	  if (!poster || player.hasStarted) {
	    return null;
	  }
	
	  return _react2.default.createElement('div', {
	    className: (0, _classnames2.default)('video-react-poster', className),
	    style: {
	      backgroundImage: 'url("' + poster + '")'
	    },
	    onClick: function onClick() {
	      if (player.paused) {
	        actions.play();
	      }
	    }
	  });
	}
	
	PosterImage.propTypes = propTypes;
	
	exports.default = PosterImage;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _dom = __webpack_require__(118);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  manager: _propTypes2.default.object,
	  actions: _propTypes2.default.object,
	  player: _propTypes2.default.object,
	  shortcuts: _propTypes2.default.array
	};
	
	var Shortcut = function (_Component) {
	  _inherits(Shortcut, _Component);
	
	  function Shortcut(props, context) {
	    _classCallCheck(this, Shortcut);
	
	    var _this = _possibleConstructorReturn(this, (Shortcut.__proto__ || Object.getPrototypeOf(Shortcut)).call(this, props, context));
	
	    _this.defaultShortcuts = [{
	      keyCode: 32, // spacebar
	      handle: _this.togglePlay
	    }, {
	      keyCode: 75, // k
	      handle: _this.togglePlay
	    }, {
	      keyCode: 70, // f
	      handle: _this.toggleFullscreen
	    }, {
	      keyCode: 37, // Left arrow
	      handle: function handle(player, actions) {
	        if (!player.hasStarted) {
	          return;
	        }
	        actions.replay(5, {
	          action: 'replay-5',
	          source: 'shortcut'
	        }); // Go back 5 seconds
	      }
	    }, {
	      keyCode: 74, // j
	      handle: function handle(player, actions) {
	        if (!player.hasStarted) {
	          return;
	        }
	        actions.replay(10, {
	          action: 'replay-10',
	          source: 'shortcut'
	        }); // Go back 10 seconds
	      }
	    }, {
	      keyCode: 39, // Right arrow
	      handle: function handle(player, actions) {
	        if (!player.hasStarted) {
	          return;
	        }
	        actions.forward(5, {
	          action: 'forward-5',
	          source: 'shortcut'
	        }); // Go forward 5 seconds
	      }
	    }, {
	      keyCode: 76, // l
	      handle: function handle(player, actions) {
	        if (!player.hasStarted) {
	          return;
	        }
	        actions.forward(10, {
	          action: 'forward-10',
	          source: 'shortcut'
	        }); // Go forward 10 seconds
	      }
	    }, {
	      keyCode: 36, // Home
	      handle: function handle(player, actions) {
	        if (!player.hasStarted) {
	          return;
	        }
	        actions.seek(0); // Go to beginning of video
	      }
	    }, {
	      keyCode: 35, // End
	      handle: function handle(player, actions) {
	        if (!player.hasStarted) {
	          return;
	        }
	        // Go to end of video
	        actions.seek(player.duration);
	      }
	    }, {
	      keyCode: 38, // Up arrow
	      handle: function handle(player, actions) {
	        // Increase volume 5%
	        var v = player.volume + 0.05;
	        if (v > 1) {
	          v = 1;
	        }
	        actions.changeVolume(v, {
	          action: 'volume-up',
	          source: 'shortcut'
	        });
	      }
	    }, {
	      keyCode: 40, // Down arrow
	      handle: function handle(player, actions) {
	        // Decrease volume 5%
	        var v = player.volume - 0.05;
	        if (v < 0) {
	          v = 0;
	        }
	        var action = v > 0 ? 'volume-down' : 'volume-off';
	        actions.changeVolume(v, {
	          action: action,
	          source: 'shortcut'
	        });
	      }
	    }, {
	      keyCode: 190, // Shift + >
	      shift: true,
	      handle: function handle(player, actions) {
	        // Increase speed
	        var playbackRate = player.playbackRate;
	        if (playbackRate >= 1.5) {
	          playbackRate = 2;
	        } else if (playbackRate >= 1.25) {
	          playbackRate = 1.5;
	        } else if (playbackRate >= 1.0) {
	          playbackRate = 1.25;
	        } else if (playbackRate >= 0.5) {
	          playbackRate = 1.0;
	        } else if (playbackRate >= 0.25) {
	          playbackRate = 0.5;
	        } else if (playbackRate >= 0) {
	          playbackRate = 0.25;
	        }
	        actions.changeRate(playbackRate, {
	          action: 'fast-forward',
	          source: 'shortcut'
	        });
	      }
	    }, {
	      keyCode: 188, // Shift + <
	      shift: true,
	      handle: function handle(player, actions) {
	        // Decrease speed
	        var playbackRate = player.playbackRate;
	        if (playbackRate <= 0.5) {
	          playbackRate = 0.25;
	        } else if (playbackRate <= 1.0) {
	          playbackRate = 0.5;
	        } else if (playbackRate <= 1.25) {
	          playbackRate = 1.0;
	        } else if (playbackRate <= 1.5) {
	          playbackRate = 1.25;
	        } else if (playbackRate <= 2) {
	          playbackRate = 1.5;
	        }
	        actions.changeRate(playbackRate, {
	          action: 'fast-rewind',
	          source: 'shortcut'
	        });
	      }
	    }];
	
	    _this.shortcuts = [].concat(_toConsumableArray(_this.defaultShortcuts));
	
	    _this.mergeShortcuts = _this.mergeShortcuts.bind(_this);
	    _this.handleKeyPress = _this.handleKeyPress.bind(_this);
	    _this.handleClick = _this.handleClick.bind(_this);
	    _this.handleDoubleClick = _this.handleDoubleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(Shortcut, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.mergeShortcuts();
	      document.addEventListener('keydown', this.handleKeyPress);
	      document.addEventListener('click', this.handleClick);
	      document.addEventListener('dblclick', this.handleDoubleClick);
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      if (prevProps.shortcuts !== this.props.shortcuts) {
	        this.mergeShortcuts();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      document.removeEventListener('keydown', this.handleKeyPress);
	    }
	
	    // merge the shortcuts from props
	
	  }, {
	    key: 'mergeShortcuts',
	    value: function mergeShortcuts() {
	      var gradeShortcut = function gradeShortcut(s) {
	        var score = 0;
	        var ps = ['ctrl', 'shift', 'alt'];
	        ps.forEach(function (key) {
	          if (s[key]) {
	            score++;
	          }
	        });
	        return score;
	      };
	
	      var shortcuts = (this.props.shortcuts || []).filter(function (s) {
	        return s.keyCode && s.handle && typeof s.handle === 'function';
	      });
	
	      this.shortcuts = [].concat(_toConsumableArray(shortcuts), _toConsumableArray(this.defaultShortcuts)).sort(function (a, b) {
	        return gradeShortcut(b) - gradeShortcut(a);
	      });
	    }
	  }, {
	    key: 'togglePlay',
	    value: function togglePlay(player, actions) {
	      if (player.paused) {
	        actions.play({
	          action: 'play',
	          source: 'shortcut'
	        });
	      } else {
	        actions.pause({
	          action: 'pause',
	          source: 'shortcut'
	        });
	      }
	    }
	  }, {
	    key: 'toggleFullscreen',
	    value: function toggleFullscreen(player, actions) {
	      actions.toggleFullscreen(player);
	    }
	  }, {
	    key: 'handleKeyPress',
	    value: function handleKeyPress(e) {
	      var _props = this.props,
	          player = _props.player,
	          actions = _props.actions;
	
	      if (!player.isActive) {
	        return;
	      }
	      if (document.activeElement && ((0, _dom.hasClass)(document.activeElement, 'video-react-control') || (0, _dom.hasClass)(document.activeElement, 'video-react-menu-button-active')
	      // || hasClass(document.activeElement, 'video-react-slider')
	      || (0, _dom.hasClass)(document.activeElement, 'video-react-big-play-button'))) {
	        return;
	      }
	
	      var keyCode = e.keyCode || e.which;
	      var ctrl = e.ctrlKey || e.metaKey;
	      var shift = e.shiftKey;
	      var alt = e.altKey;
	
	      var shortcut = this.shortcuts.find(function (s) {
	        if (!s.keyCode || s.keyCode - keyCode !== 0) {
	          return false;
	        }
	        if (s.ctrl !== undefined && s.ctrl !== ctrl || s.shift !== undefined && s.shift !== shift || s.alt !== undefined && s.alt !== alt) {
	          return false;
	        }
	        return true;
	      });
	
	      if (shortcut) {
	        shortcut.handle(player, actions);
	        e.preventDefault();
	      }
	    }
	
	    // only if player is active and player is ready
	
	  }, {
	    key: 'canBeClicked',
	    value: function canBeClicked(player, e) {
	      if (!player.isActive || e.target.nodeName !== 'VIDEO' || player.readyState !== 4) {
	        return false;
	      }
	      return true;
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick(e) {
	      var _props2 = this.props,
	          player = _props2.player,
	          actions = _props2.actions;
	
	      if (!this.canBeClicked(player, e)) {
	        return;
	      }
	      this.togglePlay(player, actions);
	      // e.preventDefault();
	    }
	  }, {
	    key: 'handleDoubleClick',
	    value: function handleDoubleClick(e) {
	      var _props3 = this.props,
	          player = _props3.player,
	          actions = _props3.actions;
	
	      if (!this.canBeClicked(player, e)) {
	        return;
	      }
	      this.toggleFullscreen(player, actions);
	      // e.preventDefault();
	    }
	
	    // this component dose not render anything
	    // it's just for the key down event
	
	  }, {
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	
	  return Shortcut;
	}(_react.Component);
	
	exports.default = Shortcut;
	
	
	Shortcut.propTypes = propTypes;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _lodash = __webpack_require__(231);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  actions: _propTypes2.default.object,
	  player: _propTypes2.default.object,
	  children: _propTypes2.default.any,
	  startTime: _propTypes2.default.number,
	  loop: _propTypes2.default.bool,
	  muted: _propTypes2.default.bool,
	  autoPlay: _propTypes2.default.bool,
	  playsInline: _propTypes2.default.bool,
	  src: _propTypes2.default.string,
	  poster: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	  preload: _propTypes2.default.oneOf(['auto', 'metadata', 'none']),
	
	  onLoadStart: _propTypes2.default.func,
	  onWaiting: _propTypes2.default.func,
	  onCanPlay: _propTypes2.default.func,
	  onCanPlayThrough: _propTypes2.default.func,
	  onPlaying: _propTypes2.default.func,
	  onEnded: _propTypes2.default.func,
	  onSeeking: _propTypes2.default.func,
	  onSeeked: _propTypes2.default.func,
	  onPlay: _propTypes2.default.func,
	  onPause: _propTypes2.default.func,
	  onProgress: _propTypes2.default.func,
	  onDurationChange: _propTypes2.default.func,
	  onError: _propTypes2.default.func,
	  onSuspend: _propTypes2.default.func,
	  onAbort: _propTypes2.default.func,
	  onEmptied: _propTypes2.default.func,
	  onStalled: _propTypes2.default.func,
	  onLoadedMetadata: _propTypes2.default.func,
	  onLoadedData: _propTypes2.default.func,
	  onTimeUpdate: _propTypes2.default.func,
	  onRateChange: _propTypes2.default.func,
	  onVolumeChange: _propTypes2.default.func,
	  onResize: _propTypes2.default.func
	};
	
	var defaultProps = {
	  preload: 'auto'
	};
	
	var Video = function (_Component) {
	  _inherits(Video, _Component);
	
	  function Video(props) {
	    _classCallCheck(this, Video);
	
	    var _this = _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).call(this, props));
	
	    _this.video = null; // the html5 video
	    _this.play = _this.play.bind(_this);
	    _this.pause = _this.pause.bind(_this);
	    _this.seek = _this.seek.bind(_this);
	    _this.forward = _this.forward.bind(_this);
	    _this.replay = _this.replay.bind(_this);
	    _this.toggleFullscreen = _this.toggleFullscreen.bind(_this);
	    _this.getProperties = _this.getProperties.bind(_this);
	    _this.renderChildren = _this.renderChildren.bind(_this);
	    _this.handleLoadStart = _this.handleLoadStart.bind(_this);
	    _this.handleCanPlay = _this.handleCanPlay.bind(_this);
	    _this.handleCanPlayThrough = _this.handleCanPlayThrough.bind(_this);
	    _this.handlePlay = _this.handlePlay.bind(_this);
	    _this.handlePlaying = _this.handlePlaying.bind(_this);
	    _this.handlePause = _this.handlePause.bind(_this);
	    _this.handleEnded = _this.handleEnded.bind(_this);
	    _this.handleWaiting = _this.handleWaiting.bind(_this);
	    _this.handleSeeking = _this.handleSeeking.bind(_this);
	    _this.handleSeeked = _this.handleSeeked.bind(_this);
	    _this.handleFullscreenChange = _this.handleFullscreenChange.bind(_this);
	    _this.handleError = _this.handleError.bind(_this);
	    _this.handleSuspend = _this.handleSuspend.bind(_this);
	    _this.handleAbort = _this.handleAbort.bind(_this);
	    _this.handleEmptied = _this.handleEmptied.bind(_this);
	    _this.handleStalled = _this.handleStalled.bind(_this);
	    _this.handleLoadedMetaData = _this.handleLoadedMetaData.bind(_this);
	    _this.handleLoadedData = _this.handleLoadedData.bind(_this);
	    _this.handleTimeUpdate = _this.handleTimeUpdate.bind(_this);
	    _this.handleRateChange = _this.handleRateChange.bind(_this);
	    _this.handleVolumeChange = _this.handleVolumeChange.bind(_this);
	    _this.handleDurationChange = _this.handleDurationChange.bind(_this);
	    _this.handleProgress = (0, _lodash2.default)(_this.handleProgress.bind(_this), 250);
	    _this.handleKeypress = _this.handleKeypress.bind(_this);
	    return _this;
	  }
	
	  _createClass(Video, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.forceUpdate(); // make sure the children can get the video property
	    }
	
	    // get all video properties
	
	  }, {
	    key: 'getProperties',
	    value: function getProperties() {
	      var _this2 = this;
	
	      if (!this.video) {
	        return null;
	      }
	
	      return _utils.mediaProperties.reduce(function (properties, key) {
	        properties[key] = _this2.video[key];
	        return properties;
	      }, {});
	    }
	
	    // get playback rate
	
	  }, {
	    key: 'play',
	
	
	    // play the video
	    value: function play() {
	      this.video.play();
	    }
	
	    // pause the video
	
	  }, {
	    key: 'pause',
	    value: function pause() {
	      this.video.pause();
	    }
	
	    // Change the video source and re-load the video:
	
	  }, {
	    key: 'load',
	    value: function load() {
	      this.video.load();
	    }
	
	    // Add a new text track to the video
	
	  }, {
	    key: 'addTextTrack',
	    value: function addTextTrack() {
	      var _video;
	
	      (_video = this.video).addTextTrack.apply(_video, arguments);
	    }
	
	    // Check if your browser can play different types of video:
	
	  }, {
	    key: 'canPlayType',
	    value: function canPlayType() {
	      var _video2;
	
	      (_video2 = this.video).canPlayType.apply(_video2, arguments);
	    }
	
	    // toggle play
	
	  }, {
	    key: 'togglePlay',
	    value: function togglePlay() {
	      if (this.video.paused) {
	        this.play();
	      } else {
	        this.pause();
	      }
	    }
	
	    // seek video by time
	
	  }, {
	    key: 'seek',
	    value: function seek(time) {
	      try {
	        this.video.currentTime = time;
	      } catch (e) {
	        // console.log(e, 'Video is not ready.')
	      }
	    }
	
	    // jump forward x seconds
	
	  }, {
	    key: 'forward',
	    value: function forward(seconds) {
	      this.seek(this.video.currentTime + seconds);
	    }
	
	    // jump back x seconds
	
	  }, {
	    key: 'replay',
	    value: function replay(seconds) {
	      this.forward(-seconds);
	    }
	
	    // enter or exist full screen
	
	  }, {
	    key: 'toggleFullscreen',
	    value: function toggleFullscreen() {
	      var _props = this.props,
	          player = _props.player,
	          actions = _props.actions;
	
	      actions.toggleFullscreen(player);
	    }
	
	    // Fired when the user agent
	    // begins looking for media data
	
	  }, {
	    key: 'handleLoadStart',
	    value: function handleLoadStart() {
	      var _props2 = this.props,
	          actions = _props2.actions,
	          onLoadStart = _props2.onLoadStart;
	
	      actions.handleLoadStart(this.getProperties());
	      if (onLoadStart) {
	        onLoadStart.apply(undefined, arguments);
	      }
	    }
	
	    // A handler for events that
	    // signal that waiting has ended
	
	  }, {
	    key: 'handleCanPlay',
	    value: function handleCanPlay() {
	      var _props3 = this.props,
	          actions = _props3.actions,
	          onCanPlay = _props3.onCanPlay;
	
	
	      actions.handleCanPlay(this.getProperties());
	
	      if (onCanPlay) {
	        onCanPlay.apply(undefined, arguments);
	      }
	    }
	
	    // A handler for events that
	    // signal that waiting has ended
	
	  }, {
	    key: 'handleCanPlayThrough',
	    value: function handleCanPlayThrough() {
	      var _props4 = this.props,
	          actions = _props4.actions,
	          onCanPlayThrough = _props4.onCanPlayThrough;
	
	      actions.handleCanPlayThrough(this.getProperties());
	
	      if (onCanPlayThrough) {
	        onCanPlayThrough.apply(undefined, arguments);
	      }
	    }
	
	    // A handler for events that
	    // signal that waiting has ended
	
	  }, {
	    key: 'handlePlaying',
	    value: function handlePlaying() {
	      var _props5 = this.props,
	          actions = _props5.actions,
	          onPlaying = _props5.onPlaying;
	
	      actions.handlePlaying(this.getProperties());
	
	      if (onPlaying) {
	        onPlaying.apply(undefined, arguments);
	      }
	    }
	
	    // Fired whenever the media has been started
	
	  }, {
	    key: 'handlePlay',
	    value: function handlePlay() {
	      var _props6 = this.props,
	          actions = _props6.actions,
	          onPlay = _props6.onPlay;
	
	      actions.handlePlay(this.getProperties());
	
	      if (onPlay) {
	        onPlay.apply(undefined, arguments);
	      }
	    }
	
	    // Fired whenever the media has been paused
	
	  }, {
	    key: 'handlePause',
	    value: function handlePause() {
	      var _props7 = this.props,
	          actions = _props7.actions,
	          onPause = _props7.onPause;
	
	      actions.handlePause(this.getProperties());
	
	      if (onPause) {
	        onPause.apply(undefined, arguments);
	      }
	    }
	
	    // Fired when the duration of
	    // the media resource is first known or changed
	
	  }, {
	    key: 'handleDurationChange',
	    value: function handleDurationChange() {
	      var _props8 = this.props,
	          actions = _props8.actions,
	          onDurationChange = _props8.onDurationChange;
	
	      actions.handleDurationChange(this.getProperties());
	
	      if (onDurationChange) {
	        onDurationChange.apply(undefined, arguments);
	      }
	    }
	
	    // Fired while the user agent
	    // is downloading media data
	
	  }, {
	    key: 'handleProgress',
	    value: function handleProgress() {
	      var _props9 = this.props,
	          actions = _props9.actions,
	          onProgress = _props9.onProgress;
	
	      if (this.video) {
	        actions.handleProgressChange(this.getProperties());
	      }
	
	      if (onProgress) {
	        onProgress.apply(undefined, arguments);
	      }
	    }
	
	    // Fired when the end of the media resource
	    // is reached (currentTime == duration)
	
	  }, {
	    key: 'handleEnded',
	    value: function handleEnded() {
	      var _props10 = this.props,
	          loop = _props10.loop,
	          player = _props10.player,
	          actions = _props10.actions,
	          onEnded = _props10.onEnded;
	
	      if (loop) {
	        this.seek(0);
	        this.play();
	      } else if (!player.paused) {
	        this.pause();
	      }
	      actions.handleEnd(this.getProperties());
	
	      if (onEnded) {
	        onEnded.apply(undefined, arguments);
	      }
	    }
	
	    // Fired whenever the media begins waiting
	
	  }, {
	    key: 'handleWaiting',
	    value: function handleWaiting() {
	      var _props11 = this.props,
	          actions = _props11.actions,
	          onWaiting = _props11.onWaiting;
	
	      actions.handleWaiting(this.getProperties());
	
	      if (onWaiting) {
	        onWaiting.apply(undefined, arguments);
	      }
	    }
	
	    // Fired whenever the player
	    // is jumping to a new time
	
	  }, {
	    key: 'handleSeeking',
	    value: function handleSeeking() {
	      var _props12 = this.props,
	          actions = _props12.actions,
	          onSeeking = _props12.onSeeking;
	
	      actions.handleSeeking(this.getProperties());
	
	      if (onSeeking) {
	        onSeeking.apply(undefined, arguments);
	      }
	    }
	
	    // Fired when the player has
	    // finished jumping to a new time
	
	  }, {
	    key: 'handleSeeked',
	    value: function handleSeeked() {
	      var _props13 = this.props,
	          actions = _props13.actions,
	          onSeeked = _props13.onSeeked;
	
	      actions.handleSeeked(this.getProperties());
	
	      if (onSeeked) {
	        onSeeked.apply(undefined, arguments);
	      }
	    }
	
	    // Handle Fullscreen Change
	
	  }, {
	    key: 'handleFullscreenChange',
	    value: function handleFullscreenChange() {}
	
	    // Fires when the browser is
	    // intentionally not getting media data
	
	  }, {
	    key: 'handleSuspend',
	    value: function handleSuspend() {
	      var _props14 = this.props,
	          actions = _props14.actions,
	          onSuspend = _props14.onSuspend;
	
	      actions.handleSuspend(this.getProperties());
	      if (onSuspend) {
	        onSuspend.apply(undefined, arguments);
	      }
	    }
	
	    // Fires when the loading of an audio/video is aborted
	
	  }, {
	    key: 'handleAbort',
	    value: function handleAbort() {
	      var _props15 = this.props,
	          actions = _props15.actions,
	          onAbort = _props15.onAbort;
	
	      actions.handleAbort(this.getProperties());
	      if (onAbort) {
	        onAbort.apply(undefined, arguments);
	      }
	    }
	
	    // Fires when the current playlist is empty
	
	  }, {
	    key: 'handleEmptied',
	    value: function handleEmptied() {
	      var _props16 = this.props,
	          actions = _props16.actions,
	          onEmptied = _props16.onEmptied;
	
	      actions.handleEmptied(this.getProperties());
	      if (onEmptied) {
	        onEmptied.apply(undefined, arguments);
	      }
	    }
	
	    // Fires when the browser is trying to
	    // get media data, but data is not available
	
	  }, {
	    key: 'handleStalled',
	    value: function handleStalled() {
	      var _props17 = this.props,
	          actions = _props17.actions,
	          onStalled = _props17.onStalled;
	
	      actions.handleStalled(this.getProperties());
	
	      if (onStalled) {
	        onStalled.apply(undefined, arguments);
	      }
	    }
	
	    // Fires when the browser has loaded
	    // meta data for the audio/video
	
	  }, {
	    key: 'handleLoadedMetaData',
	    value: function handleLoadedMetaData() {
	      var _props18 = this.props,
	          actions = _props18.actions,
	          onLoadedMetadata = _props18.onLoadedMetadata,
	          startTime = _props18.startTime;
	
	
	      if (startTime && startTime > 0) {
	        this.video.currentTime = startTime;
	      }
	
	      actions.handleLoadedMetaData(this.getProperties());
	
	      if (onLoadedMetadata) {
	        onLoadedMetadata.apply(undefined, arguments);
	      }
	    }
	
	    // Fires when the browser has loaded
	    // the current frame of the audio/video
	
	  }, {
	    key: 'handleLoadedData',
	    value: function handleLoadedData() {
	      var _props19 = this.props,
	          actions = _props19.actions,
	          onLoadedData = _props19.onLoadedData;
	
	      actions.handleLoadedData(this.getProperties());
	
	      if (onLoadedData) {
	        onLoadedData.apply(undefined, arguments);
	      }
	    }
	
	    // Fires when the current
	    // playback position has changed
	
	  }, {
	    key: 'handleTimeUpdate',
	    value: function handleTimeUpdate() {
	      var _props20 = this.props,
	          actions = _props20.actions,
	          onTimeUpdate = _props20.onTimeUpdate;
	
	      actions.handleTimeUpdate(this.getProperties());
	
	      if (onTimeUpdate) {
	        onTimeUpdate.apply(undefined, arguments);
	      }
	    }
	
	    /**
	     * Fires when the playing speed of the audio/video is changed
	     */
	
	  }, {
	    key: 'handleRateChange',
	    value: function handleRateChange() {
	      var _props21 = this.props,
	          actions = _props21.actions,
	          onRateChange = _props21.onRateChange;
	
	      actions.handleRateChange(this.getProperties());
	
	      if (onRateChange) {
	        onRateChange.apply(undefined, arguments);
	      }
	    }
	
	    // Fires when the volume has been changed
	
	  }, {
	    key: 'handleVolumeChange',
	    value: function handleVolumeChange() {
	      var _props22 = this.props,
	          actions = _props22.actions,
	          onVolumeChange = _props22.onVolumeChange;
	
	      actions.handleVolumeChange(this.getProperties());
	
	      if (onVolumeChange) {
	        onVolumeChange.apply(undefined, arguments);
	      }
	    }
	
	    // Fires when an error occurred
	    // during the loading of an audio/video
	
	  }, {
	    key: 'handleError',
	    value: function handleError() {
	      var _props23 = this.props,
	          actions = _props23.actions,
	          onError = _props23.onError;
	
	      actions.handleError(this.getProperties());
	      if (onError) {
	        onError.apply(undefined, arguments);
	      }
	    }
	  }, {
	    key: 'handleResize',
	    value: function handleResize() {
	      var _props24 = this.props,
	          actions = _props24.actions,
	          onResize = _props24.onResize;
	
	      actions.handleResize(this.getProperties());
	      if (onResize) {
	        onResize.apply(undefined, arguments);
	      }
	    }
	  }, {
	    key: 'handleKeypress',
	    value: function handleKeypress() {}
	  }, {
	    key: 'renderChildren',
	    value: function renderChildren() {
	      var _this3 = this;
	
	      var props = _extends({}, this.props, {
	        video: this.video
	      });
	
	      // to make sure the children can get video property
	      if (!this.video) {
	        return null;
	      }
	
	      // only keep <source />, <track />, <MyComponent isVideoChild /> elements
	      return _react2.default.Children.toArray(this.props.children).filter(_utils.isVideoChild).map(function (c) {
	        var cprops = void 0;
	        if (typeof c.type === 'string') {
	          // add onError to <source />
	          if (c.type === 'source') {
	            cprops = _extends({}, c.props);
	            var preOnError = cprops.onError;
	            cprops.onError = function () {
	              if (preOnError) {
	                preOnError.apply(undefined, arguments);
	              }
	              _this3.handleError.apply(_this3, arguments);
	            };
	          }
	        } else {
	          cprops = props;
	        }
	        return _react2.default.cloneElement(c, cprops);
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;
	
	      var _props25 = this.props,
	          loop = _props25.loop,
	          poster = _props25.poster,
	          preload = _props25.preload,
	          src = _props25.src,
	          autoPlay = _props25.autoPlay,
	          playsInline = _props25.playsInline,
	          muted = _props25.muted;
	
	
	      return _react2.default.createElement(
	        'video',
	        {
	          className: (0, _classnames2.default)('video-react-video', this.props.className),
	          ref: function ref(c) {
	            _this4.video = c;
	          },
	          muted: muted,
	          preload: preload,
	          loop: loop,
	          playsInline: playsInline,
	          autoPlay: autoPlay,
	          poster: poster,
	          src: src,
	          onLoadStart: this.handleLoadStart,
	          onWaiting: this.handleWaiting,
	          onCanPlay: this.handleCanPlay,
	          onCanPlayThrough: this.handleCanPlayThrough,
	          onPlaying: this.handlePlaying,
	          onEnded: this.handleEnded,
	          onSeeking: this.handleSeeking,
	          onSeeked: this.handleSeeked,
	          onPlay: this.handlePlay,
	          onPause: this.handlePause,
	          onProgress: this.handleProgress,
	          onDurationChange: this.handleDurationChange,
	          onError: this.handleError,
	          onSuspend: this.handleSuspend,
	          onAbort: this.handleAbort,
	          onEmptied: this.handleEmptied,
	          onStalled: this.handleStalled,
	          onLoadedMetadata: this.handleLoadedMetaData,
	          onLoadedData: this.handleLoadedData,
	          onTimeUpdate: this.handleTimeUpdate,
	          onRateChange: this.handleRateChange,
	          onVolumeChange: this.handleVolumeChange
	        },
	        this.renderChildren()
	      );
	    }
	  }, {
	    key: 'playbackRate',
	    get: function get() {
	      return this.video.playbackRate;
	    }
	
	    // set playback rate
	    // speed of video
	    ,
	    set: function set(rate) {
	      this.video.playbackRate = rate;
	    }
	  }, {
	    key: 'muted',
	    get: function get() {
	      return this.video.muted;
	    },
	    set: function set(val) {
	      this.video.muted = val;
	    }
	  }, {
	    key: 'volume',
	    get: function get() {
	      return this.video.volume;
	    },
	    set: function set(val) {
	      if (val > 1) {
	        val = 1;
	      }
	      if (val < 0) {
	        val = 0;
	      }
	      this.video.volume = val;
	    }
	
	    // video width
	
	  }, {
	    key: 'videoWidth',
	    get: function get() {
	      return this.video.videoWidth;
	    }
	
	    // video height
	
	  }, {
	    key: 'videoHeight',
	    get: function get() {
	      return this.video.videoHeight;
	    }
	  }]);
	
	  return Video;
	}(_react.Component);
	
	exports.default = Video;
	
	
	Video.propTypes = propTypes;
	Video.defaultProps = defaultProps;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _ProgressControl = __webpack_require__(190);
	
	var _ProgressControl2 = _interopRequireDefault(_ProgressControl);
	
	var _PlayToggle = __webpack_require__(189);
	
	var _PlayToggle2 = _interopRequireDefault(_PlayToggle);
	
	var _ForwardControl = __webpack_require__(183);
	
	var _ForwardControl2 = _interopRequireDefault(_ForwardControl);
	
	var _ReplayControl = __webpack_require__(191);
	
	var _ReplayControl2 = _interopRequireDefault(_ReplayControl);
	
	var _FullscreenToggle = __webpack_require__(185);
	
	var _FullscreenToggle2 = _interopRequireDefault(_FullscreenToggle);
	
	var _RemainingTimeDisplay = __webpack_require__(196);
	
	var _RemainingTimeDisplay2 = _interopRequireDefault(_RemainingTimeDisplay);
	
	var _CurrentTimeDisplay = __webpack_require__(194);
	
	var _CurrentTimeDisplay2 = _interopRequireDefault(_CurrentTimeDisplay);
	
	var _DurationDisplay = __webpack_require__(195);
	
	var _DurationDisplay2 = _interopRequireDefault(_DurationDisplay);
	
	var _TimeDivider = __webpack_require__(197);
	
	var _TimeDivider2 = _interopRequireDefault(_TimeDivider);
	
	var _VolumeMenuButton = __webpack_require__(193);
	
	var _VolumeMenuButton2 = _interopRequireDefault(_VolumeMenuButton);
	
	var _PlaybackRateMenuButton = __webpack_require__(117);
	
	var _PlaybackRateMenuButton2 = _interopRequireDefault(_PlaybackRateMenuButton);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  children: _propTypes2.default.any,
	  autoHide: _propTypes2.default.bool,
	  disableDefaultControls: _propTypes2.default.bool,
	  className: _propTypes2.default.string
	};
	
	var defaultProps = {
	  autoHide: true
	};
	
	var ControlBar = function (_Component) {
	  _inherits(ControlBar, _Component);
	
	  function ControlBar(props) {
	    _classCallCheck(this, ControlBar);
	
	    var _this = _possibleConstructorReturn(this, (ControlBar.__proto__ || Object.getPrototypeOf(ControlBar)).call(this, props));
	
	    _this.getDefaultChildren = _this.getDefaultChildren.bind(_this);
	    _this.getFullChildren = _this.getFullChildren.bind(_this);
	    return _this;
	  }
	
	  _createClass(ControlBar, [{
	    key: 'getDefaultChildren',
	    value: function getDefaultChildren() {
	      return [_react2.default.createElement(_PlayToggle2.default, _extends({}, this.props, {
	        key: 'play-toggle',
	        order: 1
	      })), _react2.default.createElement(_VolumeMenuButton2.default, _extends({}, this.props, {
	        key: 'volume-menu-button',
	        order: 4
	      })), _react2.default.createElement(_CurrentTimeDisplay2.default, _extends({}, this.props, {
	        key: 'current-time-display',
	        order: 5.1
	      })), _react2.default.createElement(_TimeDivider2.default, _extends({}, this.props, {
	        key: 'time-divider',
	        order: 5.2
	      })), _react2.default.createElement(_DurationDisplay2.default, _extends({}, this.props, {
	        key: 'duration-display',
	        order: 5.3
	      })), _react2.default.createElement(_ProgressControl2.default, _extends({}, this.props, {
	        key: 'progress-control',
	        order: 6
	      })), _react2.default.createElement(_FullscreenToggle2.default, _extends({}, this.props, {
	        key: 'fullscreen-toggle',
	        order: 8
	      }))];
	    }
	  }, {
	    key: 'getFullChildren',
	    value: function getFullChildren() {
	      return [_react2.default.createElement(_PlayToggle2.default, _extends({}, this.props, {
	        key: 'play-toggle',
	        order: 1
	      })), _react2.default.createElement(_ReplayControl2.default, _extends({}, this.props, {
	        key: 'replay-control',
	        order: 2
	      })), _react2.default.createElement(_ForwardControl2.default, _extends({}, this.props, {
	        key: 'forward-control',
	        order: 3
	      })), _react2.default.createElement(_VolumeMenuButton2.default, _extends({}, this.props, {
	        key: 'volume-menu-button',
	        order: 4
	      })), _react2.default.createElement(_CurrentTimeDisplay2.default, _extends({}, this.props, {
	        key: 'current-time-display',
	        order: 5
	      })), _react2.default.createElement(_TimeDivider2.default, _extends({}, this.props, {
	        key: 'time-divider',
	        order: 6
	      })), _react2.default.createElement(_DurationDisplay2.default, _extends({}, this.props, {
	        key: 'duration-display',
	        order: 7
	      })), _react2.default.createElement(_ProgressControl2.default, _extends({}, this.props, {
	        key: 'progress-control',
	        order: 8
	      })), _react2.default.createElement(_RemainingTimeDisplay2.default, _extends({}, this.props, {
	        key: 'remaining-time-display',
	        order: 9
	      })), _react2.default.createElement(_PlaybackRateMenuButton2.default, _extends({}, this.props, {
	        rates: [1, 1.25, 1.5, 2],
	        key: 'playback-rate',
	        order: 10
	      })), _react2.default.createElement(_FullscreenToggle2.default, _extends({}, this.props, {
	        key: 'fullscreen-toggle',
	        order: 11
	      }))];
	    }
	  }, {
	    key: 'getChildren',
	    value: function getChildren() {
	      var children = _react2.default.Children.toArray(this.props.children);
	      var defaultChildren = this.props.disableDefaultControls ? [] : this.getDefaultChildren();
	      return (0, _utils.mergeAndSortChildren)(defaultChildren, children, this.props);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          autoHide = _props.autoHide,
	          className = _props.className;
	
	      var children = this.getChildren();
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)('video-react-control-bar', {
	            'video-react-control-bar-auto-hide': autoHide,
	            className: className
	          })
	        },
	        children
	      );
	    }
	  }]);
	
	  return ControlBar;
	}(_react.Component);
	
	exports.default = ControlBar;
	
	
	ControlBar.propTypes = propTypes;
	ControlBar.defaultProps = defaultProps;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ForwardReplayControl = __webpack_require__(184);
	
	var _ForwardReplayControl2 = _interopRequireDefault(_ForwardReplayControl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Pass mode into parent function
	exports.default = (0, _ForwardReplayControl2.default)('forward');

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  actions: _propTypes2.default.object,
	  className: _propTypes2.default.string,
	  seconds: _propTypes2.default.oneOf([5, 10, 30])
	};
	
	var defaultProps = {
	  seconds: 10
	};
	
	exports.default = function (mode) {
	  var ForwardReplayControl = function (_Component) {
	    _inherits(ForwardReplayControl, _Component);
	
	    function ForwardReplayControl(props, context) {
	      _classCallCheck(this, ForwardReplayControl);
	
	      var _this = _possibleConstructorReturn(this, (ForwardReplayControl.__proto__ || Object.getPrototypeOf(ForwardReplayControl)).call(this, props, context));
	
	      _this.handleClick = _this.handleClick.bind(_this);
	      return _this;
	    }
	
	    _createClass(ForwardReplayControl, [{
	      key: 'handleClick',
	      value: function handleClick() {
	        var _props = this.props,
	            actions = _props.actions,
	            seconds = _props.seconds;
	        // Depends mode to implement different actions
	
	        if (mode === 'forward') {
	          actions.forward(seconds);
	        } else {
	          actions.replay(seconds);
	        }
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _this2 = this,
	            _classNames;
	
	        var _props2 = this.props,
	            seconds = _props2.seconds,
	            className = _props2.className;
	
	        return _react2.default.createElement(
	          'button',
	          {
	            ref: function ref(c) {
	              _this2.button = c;
	            },
	            className: (0, _classnames2.default)(className, (_classNames = {}, _defineProperty(_classNames, 'video-react-icon-' + mode + '-' + seconds, true), _defineProperty(_classNames, 'video-react-' + mode + '-control', true), _classNames), 'video-react-control video-react-button video-react-icon'),
	            onClick: this.handleClick
	          },
	          _react2.default.createElement(
	            'span',
	            { className: 'video-react-control-text' },
	            mode + ' ' + seconds + ' seconds'
	          )
	        );
	      }
	    }]);
	
	    return ForwardReplayControl;
	  }(_react.Component);
	
	  ForwardReplayControl.propTypes = propTypes;
	  ForwardReplayControl.defaultProps = defaultProps;
	  return ForwardReplayControl;
	};

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  actions: _propTypes2.default.object,
	  player: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	var FullscreenToggle = function (_Component) {
	  _inherits(FullscreenToggle, _Component);
	
	  function FullscreenToggle(props, context) {
	    _classCallCheck(this, FullscreenToggle);
	
	    var _this = _possibleConstructorReturn(this, (FullscreenToggle.__proto__ || Object.getPrototypeOf(FullscreenToggle)).call(this, props, context));
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(FullscreenToggle, [{
	    key: 'handleClick',
	    value: function handleClick() {
	      var _props = this.props,
	          player = _props.player,
	          actions = _props.actions;
	
	      actions.toggleFullscreen(player);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          player = _props2.player,
	          className = _props2.className;
	
	      return _react2.default.createElement(
	        'button',
	        {
	          className: (0, _classnames2.default)(className, {
	            'video-react-icon-fullscreen-exit': player.isFullscreen,
	            'video-react-icon-fullscreen': !player.isFullscreen
	          }, 'video-react-fullscreen-control video-react-control video-react-button video-react-icon'),
	          ref: function ref(c) {
	            _this2.button = c;
	          },
	          type: 'button',
	          tabIndex: '0',
	          onClick: this.handleClick
	        },
	        _react2.default.createElement(
	          'span',
	          { className: 'video-react-control-text' },
	          'Non-Fullscreen'
	        )
	      );
	    }
	  }]);
	
	  return FullscreenToggle;
	}(_react.Component);
	
	exports.default = FullscreenToggle;
	
	
	FullscreenToggle.propTypes = propTypes;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = LoadProgressBar;
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  duration: _propTypes2.default.number,
	  buffered: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	// Shows load progress
	function LoadProgressBar(_ref) {
	  var buffered = _ref.buffered,
	      duration = _ref.duration,
	      className = _ref.className;
	
	  if (!buffered || !buffered.length) {
	    return null;
	  }
	  var bufferedEnd = buffered.end(buffered.length - 1);
	  var style = {};
	
	  if (bufferedEnd > duration) {
	    bufferedEnd = duration;
	  }
	
	  // get the percent width of a time compared to the total end
	  function percentify(time, end) {
	    var percent = time / end || 0; // no NaN
	    return (percent >= 1 ? 1 : percent) * 100 + '%';
	  }
	
	  // the width of the progress bar
	  style.width = percentify(bufferedEnd, duration);
	
	  var parts = [];
	
	  // add child elements to represent the individual buffered time ranges
	  for (var i = 0; i < buffered.length; i++) {
	    var start = buffered.start(i);
	    var end = buffered.end(i);
	    // set the percent based on the width of the progress bar (bufferedEnd)
	    var part = _react2.default.createElement('div', {
	      style: {
	        left: percentify(start, bufferedEnd),
	        width: percentify(end - start, bufferedEnd)
	      },
	      key: 'part-' + i
	    });
	    parts.push(part);
	  }
	
	  if (parts.length === 0) {
	    parts = null;
	  }
	
	  return _react2.default.createElement(
	    'div',
	    {
	      style: style,
	      className: (0, _classnames2.default)('video-react-load-progress', className)
	    },
	    _react2.default.createElement(
	      'span',
	      { className: 'video-react-control-text' },
	      _react2.default.createElement(
	        'span',
	        null,
	        'Loaded'
	      ),
	      ': 0%'
	    ),
	    parts
	  );
	}
	
	LoadProgressBar.propTypes = propTypes;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function MouseTimeDisplay(_ref) {
	  var duration = _ref.duration,
	      mouseTime = _ref.mouseTime,
	      className = _ref.className;
	
	  if (!mouseTime.time) {
	    return null;
	  }
	
	  var time = (0, _utils.formatTime)(mouseTime.time, duration);
	
	  return _react2.default.createElement('div', {
	    className: (0, _classnames2.default)('video-react-mouse-display', className),
	    style: {
	      left: mouseTime.position + 'px'
	    },
	    'data-current-time': time
	  });
	}
	
	MouseTimeDisplay.propTypes = {
	  duration: _propTypes2.default.number,
	  mouseTime: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	exports.default = MouseTimeDisplay;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = PlayProgressBar;
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  currentTime: _propTypes2.default.number,
	  duration: _propTypes2.default.number,
	  percentage: _propTypes2.default.string,
	  className: _propTypes2.default.string
	};
	
	// Shows play progress
	function PlayProgressBar(_ref) {
	  var currentTime = _ref.currentTime,
	      duration = _ref.duration,
	      percentage = _ref.percentage,
	      className = _ref.className;
	
	  return _react2.default.createElement(
	    'div',
	    {
	      'data-current-time': (0, _utils.formatTime)(currentTime, duration),
	      className: (0, _classnames2.default)('video-react-play-progress video-react-slider-bar', className),
	      style: {
	        width: percentage
	      }
	    },
	    _react2.default.createElement(
	      'span',
	      { className: 'video-react-control-text' },
	      _react2.default.createElement(
	        'span',
	        null,
	        'Progress'
	      ),
	      ': ',
	      percentage
	    )
	  );
	}
	
	PlayProgressBar.propTypes = propTypes;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  actions: _propTypes2.default.object,
	  player: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	var PlayToggle = function (_Component) {
	  _inherits(PlayToggle, _Component);
	
	  function PlayToggle(props, context) {
	    _classCallCheck(this, PlayToggle);
	
	    var _this = _possibleConstructorReturn(this, (PlayToggle.__proto__ || Object.getPrototypeOf(PlayToggle)).call(this, props, context));
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(PlayToggle, [{
	    key: 'handleClick',
	    value: function handleClick() {
	      var _props = this.props,
	          actions = _props.actions,
	          player = _props.player;
	
	      if (player.paused) {
	        actions.play();
	      } else {
	        actions.pause();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          player = _props2.player,
	          className = _props2.className;
	
	      var controlText = player.paused ? 'Play' : 'Pause';
	
	      return _react2.default.createElement(
	        'button',
	        {
	          ref: function ref(c) {
	            _this2.button = c;
	          },
	          className: (0, _classnames2.default)(className, {
	            'video-react-play-control': true,
	            'video-react-control': true,
	            'video-react-button': true,
	            'video-react-paused': player.paused,
	            'video-react-playing': !player.paused
	          }),
	          tabIndex: '0',
	          onClick: this.handleClick
	        },
	        _react2.default.createElement(
	          'span',
	          { className: 'video-react-control-text' },
	          controlText
	        )
	      );
	    }
	  }]);
	
	  return PlayToggle;
	}(_react.Component);
	
	exports.default = PlayToggle;
	
	
	PlayToggle.propTypes = propTypes;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(91);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _dom = __webpack_require__(118);
	
	var Dom = _interopRequireWildcard(_dom);
	
	var _SeekBar = __webpack_require__(192);
	
	var _SeekBar2 = _interopRequireDefault(_SeekBar);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	var ProgressControl = function (_Component) {
	  _inherits(ProgressControl, _Component);
	
	  function ProgressControl(props, context) {
	    _classCallCheck(this, ProgressControl);
	
	    var _this = _possibleConstructorReturn(this, (ProgressControl.__proto__ || Object.getPrototypeOf(ProgressControl)).call(this, props, context));
	
	    _this.state = {
	      mouseTime: {
	        time: null,
	        position: 0
	      }
	    };
	
	    _this.handleMouseMoveThrottle = _this.handleMouseMove.bind(_this);
	    return _this;
	  }
	
	  _createClass(ProgressControl, [{
	    key: 'handleMouseMove',
	    value: function handleMouseMove(event) {
	      if (!event.pageX) {
	        return;
	      }
	      var duration = this.props.player.duration;
	
	      var node = (0, _reactDom.findDOMNode)(this.seekBar);
	      var newTime = Dom.getPointerPosition(node, event).x * duration;
	      var position = event.pageX - Dom.findElPosition(node).left;
	
	      this.setState({
	        mouseTime: {
	          time: newTime,
	          position: position
	        }
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var className = this.props.className;
	
	      return _react2.default.createElement(
	        'div',
	        {
	          onMouseMove: this.handleMouseMoveThrottle,
	          className: (0, _classnames2.default)('video-react-progress-control video-react-control', className)
	        },
	        _react2.default.createElement(_SeekBar2.default, _extends({
	          mouseTime: this.state.mouseTime,
	          ref: function ref(c) {
	            _this2.seekBar = c;
	          }
	        }, this.props))
	      );
	    }
	  }]);
	
	  return ProgressControl;
	}(_react.Component);
	
	exports.default = ProgressControl;
	
	
	ProgressControl.propTypes = propTypes;

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ForwardReplayControl = __webpack_require__(184);
	
	var _ForwardReplayControl2 = _interopRequireDefault(_ForwardReplayControl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Pass mode into parent function
	exports.default = (0, _ForwardReplayControl2.default)('replay');

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Slider = __webpack_require__(116);
	
	var _Slider2 = _interopRequireDefault(_Slider);
	
	var _PlayProgressBar = __webpack_require__(188);
	
	var _PlayProgressBar2 = _interopRequireDefault(_PlayProgressBar);
	
	var _LoadProgressBar = __webpack_require__(186);
	
	var _LoadProgressBar2 = _interopRequireDefault(_LoadProgressBar);
	
	var _MouseTimeDisplay = __webpack_require__(187);
	
	var _MouseTimeDisplay2 = _interopRequireDefault(_MouseTimeDisplay);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  mouseTime: _propTypes2.default.object,
	  actions: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	var SeekBar = function (_Component) {
	  _inherits(SeekBar, _Component);
	
	  function SeekBar(props, context) {
	    _classCallCheck(this, SeekBar);
	
	    var _this = _possibleConstructorReturn(this, (SeekBar.__proto__ || Object.getPrototypeOf(SeekBar)).call(this, props, context));
	
	    _this.getPercent = _this.getPercent.bind(_this);
	    _this.getNewTime = _this.getNewTime.bind(_this);
	    _this.stepForward = _this.stepForward.bind(_this);
	    _this.stepBack = _this.stepBack.bind(_this);
	
	    _this.handleMouseDown = _this.handleMouseDown.bind(_this);
	    _this.handleMouseMove = _this.handleMouseMove.bind(_this);
	    _this.handleMouseUp = _this.handleMouseUp.bind(_this);
	    return _this;
	  }
	
	  _createClass(SeekBar, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {}
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {}
	
	    /**
	     * Get percentage of video played
	     *
	     * @return {Number} Percentage played
	     * @method getPercent
	     */
	
	  }, {
	    key: 'getPercent',
	    value: function getPercent() {
	      var _props$player = this.props.player,
	          currentTime = _props$player.currentTime,
	          seekingTime = _props$player.seekingTime,
	          duration = _props$player.duration;
	
	      var time = seekingTime || currentTime;
	      var percent = time / duration;
	      return percent >= 1 ? 1 : percent;
	    }
	  }, {
	    key: 'getNewTime',
	    value: function getNewTime(event) {
	      var duration = this.props.player.duration;
	
	      var distance = this.slider.calculateDistance(event);
	      var newTime = distance * duration;
	
	      // Don't let video end while scrubbing.
	      return newTime === duration ? newTime - 0.1 : newTime;
	    }
	  }, {
	    key: 'handleMouseDown',
	    value: function handleMouseDown() {
	      var _props = this.props,
	          actions = _props.actions,
	          player = _props.player;
	
	      this.videoWasPlaying = !player.paused;
	      actions.pause();
	    }
	  }, {
	    key: 'handleMouseUp',
	    value: function handleMouseUp(event) {
	      var actions = this.props.actions;
	
	      var newTime = this.getNewTime(event);
	      // Set new time (tell video to seek to new time)
	      actions.seek(newTime);
	      if (this.videoWasPlaying) {
	        actions.play();
	      }
	      actions.handleEndSeeking(newTime);
	    }
	  }, {
	    key: 'handleMouseMove',
	    value: function handleMouseMove(event) {
	      var actions = this.props.actions;
	
	      var newTime = this.getNewTime(event);
	      actions.handleSeekingTime(newTime);
	    }
	  }, {
	    key: 'stepForward',
	    value: function stepForward() {
	      var actions = this.props.actions;
	
	      actions.forward(5);
	    }
	  }, {
	    key: 'stepBack',
	    value: function stepBack() {
	      var actions = this.props.actions;
	
	      actions.replay(5);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          _props2$player = _props2.player,
	          currentTime = _props2$player.currentTime,
	          seekingTime = _props2$player.seekingTime,
	          duration = _props2$player.duration,
	          buffered = _props2$player.buffered,
	          mouseTime = _props2.mouseTime;
	
	      var time = seekingTime || currentTime;
	
	      return _react2.default.createElement(
	        _Slider2.default,
	        {
	          ref: function ref(input) {
	            _this2.slider = input;
	          },
	          label: 'video progress bar',
	          className: (0, _classnames2.default)('video-react-progress-holder', this.props.className),
	          valuenow: (this.getPercent() * 100).toFixed(2),
	          valuetext: (0, _utils.formatTime)(time, duration),
	          onMouseDown: this.handleMouseDown,
	          onMouseMove: this.handleMouseMove,
	          onMouseUp: this.handleMouseUp,
	          getPercent: this.getPercent,
	          stepForward: this.stepForward,
	          stepBack: this.stepBack
	        },
	        _react2.default.createElement(_LoadProgressBar2.default, {
	          buffered: buffered,
	          currentTime: time,
	          duration: duration
	        }),
	        _react2.default.createElement(_MouseTimeDisplay2.default, {
	          duration: duration,
	          mouseTime: mouseTime
	        }),
	        _react2.default.createElement(_PlayProgressBar2.default, {
	          currentTime: time,
	          duration: duration
	        })
	      );
	    }
	  }]);
	
	  return SeekBar;
	}(_react.Component);
	
	exports.default = SeekBar;
	
	
	SeekBar.propTypes = propTypes;

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _PopupButton = __webpack_require__(330);
	
	var _PopupButton2 = _interopRequireDefault(_PopupButton);
	
	var _VolumeBar = __webpack_require__(331);
	
	var _VolumeBar2 = _interopRequireDefault(_VolumeBar);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  actions: _propTypes2.default.object,
	  vertical: _propTypes2.default.bool,
	  className: _propTypes2.default.string
	};
	
	var defaultProps = {
	  vertical: false
	};
	
	var VolumeMenuButton = function (_Component) {
	  _inherits(VolumeMenuButton, _Component);
	
	  function VolumeMenuButton(props, context) {
	    _classCallCheck(this, VolumeMenuButton);
	
	    var _this = _possibleConstructorReturn(this, (VolumeMenuButton.__proto__ || Object.getPrototypeOf(VolumeMenuButton)).call(this, props, context));
	
	    _this.state = {
	      active: false
	    };
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    _this.handleFocus = _this.handleFocus.bind(_this);
	    _this.handleBlur = _this.handleBlur.bind(_this);
	    return _this;
	  }
	
	  _createClass(VolumeMenuButton, [{
	    key: 'handleClick',
	    value: function handleClick() {
	      var _props = this.props,
	          player = _props.player,
	          actions = _props.actions;
	
	      actions.mute(!player.muted);
	    }
	  }, {
	    key: 'handleFocus',
	    value: function handleFocus() {
	      this.setState({
	        active: true
	      });
	    }
	  }, {
	    key: 'handleBlur',
	    value: function handleBlur() {
	      this.setState({
	        active: false
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          vertical = _props2.vertical,
	          player = _props2.player,
	          className = _props2.className;
	
	      var inline = !vertical;
	      var level = this.volumeLevel;
	      return _react2.default.createElement(
	        _PopupButton2.default,
	        {
	          className: (0, _classnames2.default)(className, {
	            'video-react-volume-menu-button-vertical': vertical,
	            'video-react-volume-menu-button-horizontal': !vertical,
	            'video-react-vol-muted': player.muted,
	            'video-react-vol-0': level === 0 && !player.muted,
	            'video-react-vol-1': level === 1,
	            'video-react-vol-2': level === 2,
	            'video-react-vol-3': level === 3,
	            'video-react-slider-active': this.state.active,
	            'video-react-lock-showing': this.state.active
	          }, 'video-react-volume-menu-button'),
	          onClick: this.handleClick,
	          inline: inline
	        },
	        _react2.default.createElement(_VolumeBar2.default, _extends({
	          onFocus: this.handleFocus,
	          onBlur: this.handleBlur
	        }, this.props))
	      );
	    }
	  }, {
	    key: 'volumeLevel',
	    get: function get() {
	      var _props$player = this.props.player,
	          volume = _props$player.volume,
	          muted = _props$player.muted;
	
	      var level = 3;
	      if (volume === 0 || muted) {
	        level = 0;
	      } else if (volume < 0.33) {
	        level = 1;
	      } else if (volume < 0.67) {
	        level = 2;
	      }
	      return level;
	    }
	  }]);
	
	  return VolumeMenuButton;
	}(_react.Component);
	
	VolumeMenuButton.propTypes = propTypes;
	VolumeMenuButton.defaultProps = defaultProps;
	exports.default = VolumeMenuButton;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	function CurrentTimeDisplay(_ref) {
	  var _ref$player = _ref.player,
	      currentTime = _ref$player.currentTime,
	      duration = _ref$player.duration,
	      className = _ref.className;
	
	  var formattedTime = (0, _utils.formatTime)(currentTime, duration);
	  return _react2.default.createElement(
	    'div',
	    {
	      className: (0, _classnames2.default)('video-react-current-time video-react-time-control video-react-control', className)
	    },
	    _react2.default.createElement(
	      'div',
	      {
	        className: 'video-react-current-time-display',
	        'aria-live': 'off'
	      },
	      _react2.default.createElement(
	        'span',
	        { className: 'video-react-control-text' },
	        'Current Time '
	      ),
	      formattedTime
	    )
	  );
	}
	
	CurrentTimeDisplay.propTypes = propTypes;
	
	exports.default = CurrentTimeDisplay;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	function DurationDisplay(_ref) {
	  var duration = _ref.player.duration,
	      className = _ref.className;
	
	  var formattedTime = (0, _utils.formatTime)(duration);
	  return _react2.default.createElement(
	    'div',
	    {
	      className: (0, _classnames2.default)(className, 'video-react-duration video-react-time-control video-react-control')
	    },
	    _react2.default.createElement(
	      'div',
	      {
	        className: 'video-react-duration-display',
	        'aria-live': 'off'
	      },
	      _react2.default.createElement(
	        'span',
	        { className: 'video-react-control-text' },
	        'Duration Time '
	      ),
	      formattedTime
	    )
	  );
	}
	
	DurationDisplay.propTypes = propTypes;
	
	exports.default = DurationDisplay;

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  className: _propTypes2.default.string
	};
	
	function RemainingTimeDisplay(_ref) {
	  var _ref$player = _ref.player,
	      currentTime = _ref$player.currentTime,
	      duration = _ref$player.duration,
	      className = _ref.className;
	
	  var remainingTime = duration - currentTime;
	  var formattedTime = (0, _utils.formatTime)(remainingTime);
	  return _react2.default.createElement(
	    'div',
	    {
	      className: (0, _classnames2.default)('video-react-remaining-time video-react-time-control video-react-control', className)
	    },
	    _react2.default.createElement(
	      'div',
	      {
	        className: 'video-react-remaining-time-display',
	        'aria-live': 'off'
	      },
	      _react2.default.createElement(
	        'span',
	        { className: 'video-react-control-text' },
	        'Remaining Time '
	      ),
	      '-',
	      formattedTime
	    )
	  );
	}
	
	RemainingTimeDisplay.propTypes = propTypes;
	
	exports.default = RemainingTimeDisplay;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = TimeDivider;
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  separator: _propTypes2.default.string,
	  className: _propTypes2.default.string
	};
	
	function TimeDivider(_ref) {
	  var separator = _ref.separator,
	      className = _ref.className;
	
	  var separatorText = separator || '/';
	  return _react2.default.createElement(
	    'div',
	    {
	      className: (0, _classnames2.default)('video-react-time-control video-react-time-divider', className),
	      dir: 'ltr'
	    },
	    _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        'span',
	        null,
	        separatorText
	      )
	    )
	  );
	}
	
	TimeDivider.propTypes = propTypes;

/***/ },
/* 198 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Fullscreen = function () {
	  function Fullscreen() {
	    _classCallCheck(this, Fullscreen);
	  }
	
	  _createClass(Fullscreen, [{
	    key: 'request',
	    value: function request(elm) {
	      if (elm.requestFullscreen) {
	        elm.requestFullscreen();
	      } else if (elm.webkitRequestFullscreen) {
	        elm.webkitRequestFullscreen();
	      } else if (elm.mozRequestFullScreen) {
	        elm.mozRequestFullScreen();
	      } else if (elm.msRequestFullscreen) {
	        elm.msRequestFullscreen();
	      }
	    }
	  }, {
	    key: 'exit',
	    value: function exit() {
	      if (document.exitFullscreen) {
	        document.exitFullscreen();
	      } else if (document.webkitExitFullscreen) {
	        document.webkitExitFullscreen();
	      } else if (document.mozCancelFullScreen) {
	        document.mozCancelFullScreen();
	      } else if (document.msExitFullscreen) {
	        document.msExitFullscreen();
	      }
	    }
	  }, {
	    key: 'addEventListener',
	    value: function addEventListener(handler) {
	      document.addEventListener('fullscreenchange', handler);
	      document.addEventListener('webkitfullscreenchange', handler);
	      document.addEventListener('mozfullscreenchange', handler);
	      document.addEventListener('MSFullscreenChange', handler);
	    }
	  }, {
	    key: 'removeEventListener',
	    value: function removeEventListener(handler) {
	      document.removeEventListener('fullscreenchange', handler);
	      document.removeEventListener('webkitfullscreenchange', handler);
	      document.removeEventListener('mozfullscreenchange', handler);
	      document.removeEventListener('MSFullscreenChange', handler);
	    }
	  }, {
	    key: 'isFullscreen',
	    get: function get() {
	      return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
	    }
	  }, {
	    key: 'enabled',
	    get: function get() {
	      return document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled;
	    }
	  }]);
	
	  return Fullscreen;
	}();
	
	exports.default = new Fullscreen();

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	var cof = __webpack_require__(39);
	module.exports = function(it, msg){
	  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(21)
	  , toIndex  = __webpack_require__(66)
	  , toLength = __webpack_require__(19);
	
	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , end   = arguments.length > 2 ? arguments[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(76);
	
	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(28)
	  , toObject  = __webpack_require__(21)
	  , IObject   = __webpack_require__(88)
	  , toLength  = __webpack_require__(19);
	
	module.exports = function(that, callbackfn, aLen, memo, isRight){
	  aFunction(callbackfn);
	  var O      = toObject(that)
	    , self   = IObject(O)
	    , length = toLength(O.length)
	    , index  = isRight ? length - 1 : 0
	    , i      = isRight ? -1 : 1;
	  if(aLen < 2)for(;;){
	    if(index in self){
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if(isRight ? index < 0 : length <= index){
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
	    memo = callbackfn(memo, self[index], index, O);
	  }
	  return memo;
	};

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var aFunction  = __webpack_require__(28)
	  , isObject   = __webpack_require__(12)
	  , invoke     = __webpack_require__(99)
	  , arraySlice = [].slice
	  , factories  = {};
	
	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  } return factories[len](F, args);
	};
	
	module.exports = Function.bind || function bind(that /*, args... */){
	  var fn       = aFunction(this)
	    , partArgs = arraySlice.call(arguments, 1);
	  var bound = function(/* args... */){
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if(isObject(fn.prototype))bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(15).f
	  , create      = __webpack_require__(61)
	  , redefineAll = __webpack_require__(64)
	  , ctx         = __webpack_require__(50)
	  , anInstance  = __webpack_require__(59)
	  , defined     = __webpack_require__(40)
	  , forOf       = __webpack_require__(76)
	  , $iterDefine = __webpack_require__(129)
	  , step        = __webpack_require__(210)
	  , setSpecies  = __webpack_require__(65)
	  , DESCRIPTORS = __webpack_require__(14)
	  , fastKey     = __webpack_require__(53).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';
	
	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(87)
	  , from    = __webpack_require__(201);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var redefineAll       = __webpack_require__(64)
	  , getWeak           = __webpack_require__(53).getWeak
	  , anObject          = __webpack_require__(5)
	  , isObject          = __webpack_require__(12)
	  , anInstance        = __webpack_require__(59)
	  , forOf             = __webpack_require__(76)
	  , createArrayMethod = __webpack_require__(43)
	  , $has              = __webpack_require__(27)
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;
	
	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function(that){
	  return that._l || (that._l = new UncaughtFrozenStore);
	};
	var UncaughtFrozenStore = function(){
	  this.a = [];
	};
	var findUncaughtFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function(key){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var data = getWeak(anObject(key), true);
	    if(data === true)uncaughtFrozenStore(that).set(key, value);
	    else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(14) && !__webpack_require__(9)(function(){
	  return Object.defineProperty(__webpack_require__(121)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(12)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(5);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 210 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 211 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(63)
	  , gOPS     = __webpack_require__(103)
	  , pIE      = __webpack_require__(89)
	  , toObject = __webpack_require__(21)
	  , IObject  = __webpack_require__(88)
	  , $assign  = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(9)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(15)
	  , anObject = __webpack_require__(5)
	  , getKeys  = __webpack_require__(63);
	
	module.exports = __webpack_require__(14) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(32)
	  , gOPN      = __webpack_require__(62).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(27)
	  , toIObject    = __webpack_require__(32)
	  , arrayIndexOf = __webpack_require__(95)(false)
	  , IE_PROTO     = __webpack_require__(134)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(63)
	  , toIObject = __webpack_require__(32)
	  , isEnum    = __webpack_require__(89).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var gOPN     = __webpack_require__(62)
	  , gOPS     = __webpack_require__(103)
	  , anObject = __webpack_require__(5)
	  , Reflect  = __webpack_require__(7).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = gOPN.f(anObject(it))
	    , getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	var $parseFloat = __webpack_require__(7).parseFloat
	  , $trim       = __webpack_require__(79).trim;
	
	module.exports = 1 / $parseFloat(__webpack_require__(139) + '-0') !== -Infinity ? function parseFloat(str){
	  var string = $trim(String(str), 3)
	    , result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	var $parseInt = __webpack_require__(7).parseInt
	  , $trim     = __webpack_require__(79).trim
	  , ws        = __webpack_require__(139)
	  , hex       = /^[\-+]?0[xX]/;
	
	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
	  var string = $trim(String(str), 3);
	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 220 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(19)
	  , repeat   = __webpack_require__(138)
	  , defined  = __webpack_require__(40);
	
	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength || fillStr == '')return S;
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(13);

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(204);
	
	// 23.1 Map Objects
	module.exports = __webpack_require__(96)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	if(__webpack_require__(14) && /./g.flags != 'g')__webpack_require__(15).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(98)
	});

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(204);
	
	// 23.2 Set Objects
	module.exports = __webpack_require__(96)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var each         = __webpack_require__(43)(0)
	  , redefine     = __webpack_require__(30)
	  , meta         = __webpack_require__(53)
	  , assign       = __webpack_require__(212)
	  , weak         = __webpack_require__(206)
	  , isObject     = __webpack_require__(12)
	  , getWeak      = meta.getWeak
	  , isExtensible = Object.isExtensible
	  , uncaughtFrozenStore = weak.ufstore
	  , tmp          = {}
	  , InternalMap;
	
	var wrapper = function(get){
	  return function WeakMap(){
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};
	
	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      var data = getWeak(key);
	      if(data === true)return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	};
	
	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(96)('WeakMap', wrapper, methods, weak, true, true);
	
	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on internal weakmap shim
	      if(isObject(a) && !isExtensible(a)){
	        if(!this._f)this._f = new InternalMap;
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(520);
	var isArguments = __webpack_require__(519);
	
	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	
	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();
	
	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;
	
	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}
	
	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}
	
	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}
	
	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(37);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (true) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;

/***/ },
/* 229 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 230 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 231 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;
	
	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};
	
	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	
	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;
	
	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }
	
	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }
	
	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;
	
	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }
	
	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;
	
	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }
	
	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }
	
	  function trailingEdge(time) {
	    timerId = undefined;
	
	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }
	
	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }
	
	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }
	
	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);
	
	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;
	
	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}
	
	/**
	 * Creates a throttled function that only invokes `func` at most once per
	 * every `wait` milliseconds. The throttled function comes with a `cancel`
	 * method to cancel delayed `func` invocations and a `flush` method to
	 * immediately invoke them. Provide `options` to indicate whether `func`
	 * should be invoked on the leading and/or trailing edge of the `wait`
	 * timeout. The `func` is invoked with the last arguments provided to the
	 * throttled function. Subsequent calls to the throttled function return the
	 * result of the last `func` invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the throttled function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.throttle` and `_.debounce`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to throttle.
	 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=true]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new throttled function.
	 * @example
	 *
	 * // Avoid excessively updating the position while scrolling.
	 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	 *
	 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	 * jQuery(element).on('click', throttled);
	 *
	 * // Cancel the trailing throttled invocation.
	 * jQuery(window).on('popstate', throttled.cancel);
	 */
	function throttle(func, wait, options) {
	  var leading = true,
	      trailing = true;
	
	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  if (isObject(options)) {
	    leading = 'leading' in options ? !!options.leading : leading;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	  return debounce(func, wait, {
	    'leading': leading,
	    'maxWait': wait,
	    'trailing': trailing
	  });
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = throttle;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(552);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(37);
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	var ReactPropTypesSecret = __webpack_require__(234);
	var checkPropTypes = __webpack_require__(555);
	
	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }
	
	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */
	
	  var ANONYMOUS = '<<anonymous>>';
	
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),
	
	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker
	  };
	
	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/
	
	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;
	
	  function createChainableTypeChecker(validate) {
	    if (true) {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;
	
	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          invariant(
	            false,
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	        } else if (("development") !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            warning(
	              false,
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `%s` prop on `%s`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
	              propFullName,
	              componentName
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }
	
	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);
	
	    return chainedCheckType;
	  }
	
	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);
	
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
	  }
	
	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	       true ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }
	
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }
	
	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	       true ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }
	
	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }
	
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }
	
	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }
	
	        return true;
	      default:
	        return false;
	    }
	  }
	
	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }
	
	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }
	
	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }
	
	    return false;
	  }
	
	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }
	
	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }
	
	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }
	
	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;
	
	  return ReactPropTypes;
	};


/***/ },
/* 234 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;


/***/ },
/* 235 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PooledClass = __webpack_require__(69);
	
	var invariant = __webpack_require__(3);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	
	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);
	
	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ?  true ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };
	
	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };
	
	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };
	
	  /**
	   * `PooledClass` looks for this.
	   */
	
	
	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };
	
	  return CallbackQueue;
	}();
	
	module.exports = PooledClass.addPoolingTo(CallbackQueue);

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(56);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactInstrumentation = __webpack_require__(33);
	
	var quoteAttributeValueForBrowser = __webpack_require__(637);
	var warning = __webpack_require__(4);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   true ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (true) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (true) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (true) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (true) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	var React = __webpack_require__(38);
	var ReactComponentEnvironment = __webpack_require__(151);
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactErrorUtils = __webpack_require__(154);
	var ReactInstanceMap = __webpack_require__(84);
	var ReactInstrumentation = __webpack_require__(33);
	var ReactNodeTypes = __webpack_require__(250);
	var ReactReconciler = __webpack_require__(57);
	
	if (true) {
	  var checkReactTypeSpec = __webpack_require__(631);
	}
	
	var emptyObject = __webpack_require__(68);
	var invariant = __webpack_require__(3);
	var shallowEqual = __webpack_require__(145);
	var shouldUpdateReactComponent = __webpack_require__(162);
	var warning = __webpack_require__(4);
	
	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (true) {
	     true ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	     true ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}
	
	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}
	
	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }
	
	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (true) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;
	
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ?  true ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }
	
	    if (true) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	         true ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	       true ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (true) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	       true ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	       true ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	       true ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	       true ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	       true ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	       true ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	       true ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  true ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (true) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (true) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	
	    if (doConstruct) {
	      if (true) {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }
	
	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (true) {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	
	    var debugID = 0;
	    if (true) {
	      debugID = this._debugID;
	    }
	
	    if (inst.componentWillMount) {
	      if (true) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
	
	    if (true) {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (true) {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (true) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;
	
	    if (inst.getChildContext) {
	      if (true) {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }
	
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  true ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (true) {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  true ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (true) {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  true ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (true) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (true) {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }
	
	    if (true) {
	       true ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;
	
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (true) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (true) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	
	    var debugID = 0;
	    if (true) {
	      debugID = this._debugID;
	    }
	
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
	
	      if (true) {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;
	
	    if (true) {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }
	
	    if (true) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }
	
	    return renderedElement;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (true) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  true ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedElement;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  true ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (true) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	       true ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	module.exports = ReactCompositeComponent;

/***/ },
/* 239 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(163);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (true) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var LinkedValueUtils = __webpack_require__(150);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactUpdates = __webpack_require__(34);
	
	var warning = __webpack_require__(4);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     true ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	       true ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	       true ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (true) {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       true ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactInvalidSetStateWarningHook = __webpack_require__(606);
	var ReactHostOperationHistoryHook = __webpack_require__(604);
	var ReactComponentTreeHook = __webpack_require__(26);
	var ExecutionEnvironment = __webpack_require__(18);
	
	var performanceNow = __webpack_require__(538);
	var warning = __webpack_require__(4);
	
	var hooks = [];
	var didHookThrowForEvent = {};
	
	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	     true ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}
	
	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = [];
	var currentFlushStartTime = 0;
	var currentTimerDebugID = null;
	var currentTimerStartTime = 0;
	var currentTimerNestedFlushDuration = 0;
	var currentTimerType = null;
	
	var lifeCycleTimerHasWarned = false;
	
	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements;
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();
	
	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = 0;
	    currentFlushMeasurements = [];
	    clearHistory();
	    return;
	  }
	
	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }
	
	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}
	
	function checkDebugID(debugID) {
	  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	
	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	     true ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}
	
	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	     true ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	     true ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
	      startTime = _lifeCycleTimerStack$.startTime,
	      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
	      debugID = _lifeCycleTimerStack$.debugID,
	      timerType = _lifeCycleTimerStack$.timerType;
	
	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	var lastMarkTimeStamp = 0;
	var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
	
	function shouldMark(debugID) {
	  if (!isProfiling || !canUsePerformanceMeasure) {
	    return false;
	  }
	  var element = ReactComponentTreeHook.getElement(debugID);
	  if (element == null || typeof element !== 'object') {
	    return false;
	  }
	  var isHostElement = typeof element.type === 'string';
	  if (isHostElement) {
	    return false;
	  }
	  return true;
	}
	
	function markBegin(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }
	
	  var markName = debugID + '::' + markType;
	  lastMarkTimeStamp = performanceNow();
	  performance.mark(markName);
	}
	
	function markEnd(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }
	
	  var markName = debugID + '::' + markType;
	  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';
	
	  // Chrome has an issue of dropping markers recorded too fast:
	  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
	  // To work around this, we will not report very small measurements.
	  // I determined the magic number by tweaking it back and forth.
	  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
	  // When the bug is fixed, we can `measure()` unconditionally if we want to.
	  var timeStamp = performanceNow();
	  if (timeStamp - lastMarkTimeStamp > 0.1) {
	    var measurementName = displayName + ' [' + markType + ']';
	    performance.measure(measurementName, markName);
	  }
	
	  performance.clearMarks(markName);
	  performance.clearMeasures(measurementName);
	}
	
	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }
	
	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }
	
	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    markBegin(debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    markEnd(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (operation) {
	    checkDebugID(operation.instanceID);
	    emitEvent('onHostOperation', operation);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	    markBegin(debugID, 'mount');
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'mount');
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	    markBegin(debugID, 'update');
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'update');
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	    markBegin(debugID, 'unmount');
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'unmount');
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
	
	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}
	
	module.exports = ReactDebugTool;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = __webpack_require__(574);
	var BeforeInputEventPlugin = __webpack_require__(576);
	var ChangeEventPlugin = __webpack_require__(578);
	var DefaultEventPluginOrder = __webpack_require__(580);
	var EnterLeaveEventPlugin = __webpack_require__(581);
	var HTMLDOMPropertyConfig = __webpack_require__(584);
	var ReactComponentBrowserEnvironment = __webpack_require__(586);
	var ReactDOMComponent = __webpack_require__(587);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactDOMEmptyComponent = __webpack_require__(588);
	var ReactDOMTreeTraversal = __webpack_require__(599);
	var ReactDOMTextComponent = __webpack_require__(597);
	var ReactDefaultBatchingStrategy = __webpack_require__(153);
	var ReactEventListener = __webpack_require__(603);
	var ReactInjection = __webpack_require__(605);
	var ReactReconcileTransaction = __webpack_require__(252);
	var SVGDOMPropertyConfig = __webpack_require__(617);
	var SelectEventPlugin = __webpack_require__(618);
	var SimpleEventPlugin = __webpack_require__(619);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 244 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 245 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var invariant = __webpack_require__(3);
	
	var genericComponentClass = null;
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  true ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(595);
	
	var containsNode = __webpack_require__(527);
	var focusNode = __webpack_require__(229);
	var getActiveElement = __webpack_require__(230);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(630);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var DOMLazyTree = __webpack_require__(81);
	var DOMProperty = __webpack_require__(56);
	var React = __webpack_require__(38);
	var ReactBrowserEventEmitter = __webpack_require__(93);
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactDOMContainerInfo = __webpack_require__(240);
	var ReactDOMFeatureFlags = __webpack_require__(589);
	var ReactFeatureFlags = __webpack_require__(245);
	var ReactInstanceMap = __webpack_require__(84);
	var ReactInstrumentation = __webpack_require__(33);
	var ReactMarkupChecksum = __webpack_require__(248);
	var ReactReconciler = __webpack_require__(57);
	var ReactUpdateQueue = __webpack_require__(155);
	var ReactUpdates = __webpack_require__(34);
	
	var emptyObject = __webpack_require__(68);
	var instantiateReactComponent = __webpack_require__(160);
	var invariant = __webpack_require__(3);
	var setInnerHTML = __webpack_require__(109);
	var shouldUpdateReactComponent = __webpack_require__(162);
	var warning = __webpack_require__(4);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (true) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (true) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}
	
	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (true) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     true ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ?  true ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  true ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ?  true ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	     true ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (true) {
	       true ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	             true ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     true ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ?  true ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    if (true) {
	       true ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (true) {
	         true ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ?  true ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (true) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ?  true ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (true) {
	           true ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ?  true ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (true) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var React = __webpack_require__(38);
	
	var invariant = __webpack_require__(3);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  true ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;

/***/ },
/* 251 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var CallbackQueue = __webpack_require__(236);
	var PooledClass = __webpack_require__(69);
	var ReactBrowserEventEmitter = __webpack_require__(93);
	var ReactInputSelection = __webpack_require__(247);
	var ReactInstrumentation = __webpack_require__(33);
	var Transaction = __webpack_require__(107);
	var ReactUpdateQueue = __webpack_require__(155);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (true) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var PooledClass = __webpack_require__(69);
	var Transaction = __webpack_require__(107);
	var ReactInstrumentation = __webpack_require__(33);
	var ReactServerUpdateQueue = __webpack_require__(614);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (true) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ },
/* 254 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.5.4';

/***/ },
/* 255 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var invariant = __webpack_require__(3);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ?  true ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactInstanceMap = __webpack_require__(84);
	
	var getHostComponentFromComposite = __webpack_require__(259);
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (true) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	       true ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ?  true ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  true ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;

/***/ },
/* 258 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(250);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(18);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(18);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 262 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(18);
	var escapeTextContentForBrowser = __webpack_require__(108);
	var setInnerHTML = __webpack_require__(109);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var ReactCurrentOwner = __webpack_require__(48);
	var REACT_ELEMENT_TYPE = __webpack_require__(601);
	
	var getIteratorFn = __webpack_require__(635);
	var invariant = __webpack_require__(3);
	var KeyEscapeUtils = __webpack_require__(149);
	var warning = __webpack_require__(4);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (true) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	           true ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (true) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  true ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _PropTypes = __webpack_require__(165);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var bool = _React$PropTypes.bool;
	var object = _React$PropTypes.object;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	var oneOfType = _React$PropTypes.oneOfType;
	
	
	function isLeftClickEvent(event) {
	  return event.button === 0;
	}
	
	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}
	
	// TODO: De-duplicate against hasAnyProperties in createTransitionManager.
	function isEmptyObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return false;
	  }return true;
	}
	
	function createLocationDescriptor(to, _ref) {
	  var query = _ref.query;
	  var hash = _ref.hash;
	  var state = _ref.state;
	
	  if (query || hash || state) {
	    return { pathname: to, query: query, hash: hash, state: state };
	  }
	
	  return to;
	}
	
	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * activeClassName prop.
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	var Link = _react2.default.createClass({
	  displayName: 'Link',
	
	
	  contextTypes: {
	    router: _PropTypes.routerShape
	  },
	
	  propTypes: {
	    to: oneOfType([string, object]),
	    query: object,
	    hash: string,
	    state: object,
	    activeStyle: object,
	    activeClassName: string,
	    onlyActiveOnIndex: bool.isRequired,
	    onClick: func,
	    target: string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      onlyActiveOnIndex: false,
	      style: {}
	    };
	  },
	  handleClick: function handleClick(event) {
	    if (this.props.onClick) this.props.onClick(event);
	
	    if (event.defaultPrevented) return;
	
	    !this.context.router ?  true ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot navigate.') : (0, _invariant2.default)(false) : void 0;
	
	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;
	
	    // If target prop is set (e.g. to "_blank"), let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) return;
	
	    event.preventDefault();
	
	    var _props = this.props;
	    var to = _props.to;
	    var query = _props.query;
	    var hash = _props.hash;
	    var state = _props.state;
	
	    var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });
	
	    this.context.router.push(location);
	  },
	  render: function render() {
	    var _props2 = this.props;
	    var to = _props2.to;
	    var query = _props2.query;
	    var hash = _props2.hash;
	    var state = _props2.state;
	    var activeClassName = _props2.activeClassName;
	    var activeStyle = _props2.activeStyle;
	    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;
	
	    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);
	
	     true ? (0, _routerWarning2.default)(!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : void 0;
	
	    // Ignore if rendered outside the context of router, simplifies unit testing.
	    var router = this.context.router;
	
	
	    if (router) {
	      // If user does not specify a `to` prop, return an empty anchor tag.
	      if (to == null) {
	        return _react2.default.createElement('a', props);
	      }
	
	      var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });
	      props.href = router.createHref(location);
	
	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (router.isActive(location, onlyActiveOnIndex)) {
	          if (activeClassName) {
	            if (props.className) {
	              props.className += ' ' + activeClassName;
	            } else {
	              props.className = activeClassName;
	            }
	          }
	
	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }
	
	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick }));
	  }
	});
	
	exports.default = Link;
	module.exports = exports['default'];

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(58);
	
	var _PatternUtils = __webpack_require__(85);
	
	var _InternalPropTypes = __webpack_require__(70);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;
	
	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */
	
	var Redirect = _react2.default.createClass({
	  displayName: 'Redirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element) {
	      var route = (0, _RouteUtils.createRouteFromReactElement)(element);
	
	      if (route.from) route.path = route.from;
	
	      route.onEnter = function (nextState, replace) {
	        var location = nextState.location;
	        var params = nextState.params;
	
	
	        var pathname = void 0;
	        if (route.to.charAt(0) === '/') {
	          pathname = (0, _PatternUtils.formatPattern)(route.to, params);
	        } else if (!route.to) {
	          pathname = location.pathname;
	        } else {
	          var routeIndex = nextState.routes.indexOf(route);
	          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	          pathname = (0, _PatternUtils.formatPattern)(pattern, params);
	        }
	
	        replace({
	          pathname: pathname,
	          query: route.query || location.query,
	          state: route.state || location.state
	        });
	      };
	
	      return route;
	    },
	    getRoutePattern: function getRoutePattern(routes, routeIndex) {
	      var parentPattern = '';
	
	      for (var i = routeIndex; i >= 0; i--) {
	        var route = routes[i];
	        var pattern = route.path || '';
	
	        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;
	
	        if (pattern.indexOf('/') === 0) break;
	      }
	
	      return '/' + parentPattern;
	    }
	  },
	
	  propTypes: {
	    path: string,
	    from: string, // Alias for path
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  true ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Redirect;
	module.exports = exports['default'];

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createRouterObject = createRouterObject;
	exports.createRoutingHistory = createRoutingHistory;
	
	var _deprecateObjectProperties = __webpack_require__(111);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createRouterObject(history, transitionManager) {
	  return _extends({}, history, {
	    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
	    isActive: transitionManager.isActive
	  });
	}
	
	// deprecated
	function createRoutingHistory(history, transitionManager) {
	  history = _extends({}, history, transitionManager);
	
	  if (true) {
	    history = (0, _deprecateObjectProperties2.default)(history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');
	  }
	
	  return history;
	}

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = createMemoryHistory;
	
	var _useQueries = __webpack_require__(113);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(276);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	var _createMemoryHistory = __webpack_require__(667);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createMemoryHistory(options) {
	  // signatures and type checking differ between `useRoutes` and
	  // `createMemoryHistory`, have to create `memoryHistory` first because
	  // `useQueries` doesn't understand the signature
	  var memoryHistory = (0, _createMemoryHistory2.default)(options);
	  var createHistory = function createHistory() {
	    return memoryHistory;
	  };
	  var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	  history.__v2_compatible__ = true;
	  return history;
	}
	module.exports = exports['default'];

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	exports.default = function (createHistory) {
	  var history = void 0;
	  if (canUseDOM) history = (0, _useRouterHistory2.default)(createHistory)();
	  return history;
	};
	
	var _useRouterHistory = __webpack_require__(271);
	
	var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	module.exports = exports['default'];

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = makeStateWithLocation;
	
	var _deprecateObjectProperties = __webpack_require__(111);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function makeStateWithLocation(state, location) {
	  if (("development") !== 'production' && _deprecateObjectProperties.canUseMembrane) {
	    var stateWithLocation = _extends({}, state);
	
	    // I don't use deprecateObjectProperties here because I want to keep the
	    // same code path between development and production, in that we just
	    // assign extra properties to the copy of the state object in both cases.
	
	    var _loop = function _loop(prop) {
	      if (!Object.prototype.hasOwnProperty.call(location, prop)) {
	        return 'continue';
	      }
	
	      Object.defineProperty(stateWithLocation, prop, {
	        get: function get() {
	           true ? (0, _routerWarning2.default)(false, 'Accessing location properties directly from the first argument to `getComponent`, `getComponents`, `getChildRoutes`, and `getIndexRoute` is deprecated. That argument is now the router state (`nextState` or `partialNextState`) rather than the location. To access the location, use `nextState.location` or `partialNextState.location`.') : void 0;
	          return location[prop];
	        }
	      });
	    };
	
	    for (var prop in location) {
	      var _ret = _loop(prop);
	
	      if (_ret === 'continue') continue;
	    }
	
	    return stateWithLocation;
	  }
	
	  return _extends({}, state, location);
	}
	module.exports = exports['default'];

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = useRouterHistory;
	
	var _useQueries = __webpack_require__(113);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(276);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function useRouterHistory(createHistory) {
	  return function (options) {
	    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	    history.__v2_compatible__ = true;
	    return history;
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	/*eslint-disable no-empty */
	'use strict';
	
	exports.__esModule = true;
	exports.saveState = saveState;
	exports.readState = readState;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var KeyPrefix = '@@History/';
	var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];
	
	var SecurityError = 'SecurityError';
	
	function createKey(key) {
	  return KeyPrefix + key;
	}
	
	function saveState(key, state) {
	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       true ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;
	
	      return;
	    }
	
	    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	       true ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;
	
	      return;
	    }
	
	    throw error;
	  }
	}
	
	function readState(key) {
	  var json = undefined;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       true ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;
	
	      return null;
	    }
	  }
	
	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }
	
	  return null;
	}

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _ExecutionEnvironment = __webpack_require__(112);
	
	var _DOMUtils = __webpack_require__(167);
	
	var _createHistory = __webpack_require__(275);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function createDOMHistory(options) {
	  var history = _createHistory2['default'](_extends({
	    getUserConfirmation: _DOMUtils.getUserConfirmation
	  }, options, {
	    go: _DOMUtils.go
	  }));
	
	  function listen(listener) {
	    !_ExecutionEnvironment.canUseDOM ?  true ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;
	
	    return history.listen(listener);
	  }
	
	  return _extends({}, history, {
	    listen: listen
	  });
	}
	
	exports['default'] = createDOMHistory;
	module.exports = exports['default'];

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(86);
	
	var _PathUtils = __webpack_require__(72);
	
	var _ExecutionEnvironment = __webpack_require__(112);
	
	var _DOMUtils = __webpack_require__(167);
	
	var _DOMStateStorage = __webpack_require__(272);
	
	var _createDOMHistory = __webpack_require__(273);
	
	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
	
	function isAbsolutePath(path) {
	  return typeof path === 'string' && path.charAt(0) === '/';
	}
	
	function ensureSlash() {
	  var path = _DOMUtils.getHashPath();
	
	  if (isAbsolutePath(path)) return true;
	
	  _DOMUtils.replaceHashPath('/' + path);
	
	  return false;
	}
	
	function addQueryStringValueToPath(path, key, value) {
	  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
	}
	
	function stripQueryStringValueFromPath(path, key) {
	  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
	}
	
	function getQueryStringValueFromPath(path, key) {
	  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
	  return match && match[1];
	}
	
	var DefaultQueryKey = '_k';
	
	function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ?  true ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;
	
	  var queryKey = options.queryKey;
	
	  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;
	
	  function getCurrentLocation() {
	    var path = _DOMUtils.getHashPath();
	
	    var key = undefined,
	        state = undefined;
	    if (queryKey) {
	      key = getQueryStringValueFromPath(path, queryKey);
	      path = stripQueryStringValueFromPath(path, queryKey);
	
	      if (key) {
	        state = _DOMStateStorage.readState(key);
	      } else {
	        state = null;
	        key = history.createKey();
	        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
	      }
	    } else {
	      key = state = null;
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function startHashChangeListener(_ref) {
	    var transitionTo = _ref.transitionTo;
	
	    function hashChangeListener() {
	      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.
	
	      transitionTo(getCurrentLocation());
	    }
	
	    ensureSlash();
	    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);
	
	    return function () {
	      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
	    };
	  }
	
	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;
	
	    if (action === _Actions.POP) return; // Nothing to do.
	
	    var path = (basename || '') + pathname + search;
	
	    if (queryKey) {
	      path = addQueryStringValueToPath(path, queryKey, key);
	      _DOMStateStorage.saveState(key, state);
	    } else {
	      // Drop key and state.
	      location.key = location.state = null;
	    }
	
	    var currentHash = _DOMUtils.getHashPath();
	
	    if (action === _Actions.PUSH) {
	      if (currentHash !== path) {
	        window.location.hash = path;
	      } else {
	         true ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
	      }
	    } else if (currentHash !== path) {
	      // REPLACE
	      _DOMUtils.replaceHashPath(path);
	    }
	  }
	
	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));
	
	  var listenerCount = 0,
	      stopHashChangeListener = undefined;
	
	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    var unlisten = history.listenBefore(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }
	
	  function listen(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    var unlisten = history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }
	
	  function push(location) {
	     true ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.push(location);
	  }
	
	  function replace(location) {
	     true ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.replace(location);
	  }
	
	  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();
	
	  function go(n) {
	     true ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;
	
	    history.go(n);
	  }
	
	  function createHref(path) {
	    return '#' + history.createHref(path);
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    history.registerTransitionHook(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);
	
	    if (--listenerCount === 0) stopHashChangeListener();
	  }
	
	  // deprecated
	  function pushState(state, path) {
	     true ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.pushState(state, path);
	  }
	
	  // deprecated
	  function replaceState(state, path) {
	     true ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.replaceState(state, path);
	  }
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    push: push,
	    replace: replace,
	    go: go,
	    createHref: createHref,
	
	    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
	    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
	    pushState: pushState, // deprecated - warning is in createHistory
	    replaceState: replaceState // deprecated - warning is in createHistory
	  });
	}
	
	exports['default'] = createHashHistory;
	module.exports = exports['default'];

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _deepEqual = __webpack_require__(227);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _PathUtils = __webpack_require__(72);
	
	var _AsyncUtils = __webpack_require__(664);
	
	var _Actions = __webpack_require__(86);
	
	var _createLocation2 = __webpack_require__(666);
	
	var _createLocation3 = _interopRequireDefault(_createLocation2);
	
	var _runTransitionHook = __webpack_require__(169);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _deprecate = __webpack_require__(168);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function createRandomKey(length) {
	  return Math.random().toString(36).substr(2, length);
	}
	
	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search &&
	  //a.action === b.action && // Different action !== location change.
	  a.key === b.key && _deepEqual2['default'](a.state, b.state);
	}
	
	var DefaultKeyLength = 6;
	
	function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var finishTransition = options.finishTransition;
	  var saveState = options.saveState;
	  var go = options.go;
	  var getUserConfirmation = options.getUserConfirmation;
	  var keyLength = options.keyLength;
	
	  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;
	
	  var transitionHooks = [];
	
	  function listenBefore(hook) {
	    transitionHooks.push(hook);
	
	    return function () {
	      transitionHooks = transitionHooks.filter(function (item) {
	        return item !== hook;
	      });
	    };
	  }
	
	  var allKeys = [];
	  var changeListeners = [];
	  var location = undefined;
	
	  function getCurrent() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) {
	      return allKeys.indexOf(pendingLocation.key);
	    } else if (location) {
	      return allKeys.indexOf(location.key);
	    } else {
	      return -1;
	    }
	  }
	
	  function updateLocation(newLocation) {
	    var current = getCurrent();
	
	    location = newLocation;
	
	    if (location.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
	    } else if (location.action === _Actions.REPLACE) {
	      allKeys[current] = location.key;
	    }
	
	    changeListeners.forEach(function (listener) {
	      listener(location);
	    });
	  }
	
	  function listen(listener) {
	    changeListeners.push(listener);
	
	    if (location) {
	      listener(location);
	    } else {
	      var _location = getCurrentLocation();
	      allKeys = [_location.key];
	      updateLocation(_location);
	    }
	
	    return function () {
	      changeListeners = changeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }
	
	  function confirmTransitionTo(location, callback) {
	    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
	      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
	        if (result != null) {
	          done(result);
	        } else {
	          next();
	        }
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  }
	
	  var pendingLocation = undefined;
	
	  function transitionTo(nextLocation) {
	    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.
	
	    pendingLocation = nextLocation;
	
	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted.
	
	      if (ok) {
	        // treat PUSH to current path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = createPath(location);
	          var nextPath = createPath(nextLocation);
	
	          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }
	
	        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
	      } else if (location && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(location.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);
	
	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
	      }
	    });
	  }
	
	  function push(location) {
	    transitionTo(createLocation(location, _Actions.PUSH, createKey()));
	  }
	
	  function replace(location) {
	    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
	  }
	
	  function goBack() {
	    go(-1);
	  }
	
	  function goForward() {
	    go(1);
	  }
	
	  function createKey() {
	    return createRandomKey(keyLength);
	  }
	
	  function createPath(location) {
	    if (location == null || typeof location === 'string') return location;
	
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	
	    var result = pathname;
	
	    if (search) result += search;
	
	    if (hash) result += hash;
	
	    return result;
	  }
	
	  function createHref(location) {
	    return createPath(location);
	  }
	
	  function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];
	
	    if (typeof action === 'object') {
	       true ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      location = _extends({}, location, { state: action });
	
	      action = key;
	      key = arguments[3] || createKey();
	    }
	
	    return _createLocation3['default'](location, action, key);
	  }
	
	  // deprecated
	  function setState(state) {
	    if (location) {
	      updateLocationState(location, state);
	      updateLocation(location);
	    } else {
	      updateLocationState(getCurrentLocation(), state);
	    }
	  }
	
	  function updateLocationState(location, state) {
	    location.state = _extends({}, location.state, state);
	    saveState(location.key, location.state);
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    transitionHooks = transitionHooks.filter(function (item) {
	      return item !== hook;
	    });
	  }
	
	  // deprecated
	  function pushState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	    push(_extends({ state: state }, path));
	  }
	
	  // deprecated
	  function replaceState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	    replace(_extends({ state: state }, path));
	  }
	
	  return {
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: createPath,
	    createHref: createHref,
	    createLocation: createLocation,
	
	    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
	    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
	    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
	    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	  };
	}
	
	exports['default'] = createHistory;
	module.exports = exports['default'];

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _ExecutionEnvironment = __webpack_require__(112);
	
	var _PathUtils = __webpack_require__(72);
	
	var _runTransitionHook = __webpack_require__(169);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _deprecate = __webpack_require__(168);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var history = createHistory(options);
	
	    var basename = options.basename;
	
	    var checkedBaseHref = false;
	
	    function checkBaseHref() {
	      if (checkedBaseHref) {
	        return;
	      }
	
	      // Automatically use the value of <base href> in HTML
	      // documents as basename if it's not explicitly given.
	      if (basename == null && _ExecutionEnvironment.canUseDOM) {
	        var base = document.getElementsByTagName('base')[0];
	        var baseHref = base && base.getAttribute('href');
	
	        if (baseHref != null) {
	          basename = baseHref;
	
	           true ? _warning2['default'](false, 'Automatically setting basename using <base href> is deprecated and will ' + 'be removed in the next major release. The semantics of <base href> are ' + 'subtly different from basename. Please pass the basename explicitly in ' + 'the options to createHistory') : undefined;
	        }
	      }
	
	      checkedBaseHref = true;
	    }
	
	    function addBasename(location) {
	      checkBaseHref();
	
	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;
	
	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }
	
	      return location;
	    }
	
	    function prependBasename(location) {
	      checkBaseHref();
	
	      if (!basename) return location;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      var pname = location.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;
	
	      return _extends({}, location, {
	        pathname: pathname
	      });
	    }
	
	    // Override all read methods with basename-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addBasename(location), callback);
	      });
	    }
	
	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addBasename(location));
	      });
	    }
	
	    // Override all write methods with basename-aware versions.
	    function push(location) {
	      history.push(prependBasename(location));
	    }
	
	    function replace(location) {
	      history.replace(prependBasename(location));
	    }
	
	    function createPath(location) {
	      return history.createPath(prependBasename(location));
	    }
	
	    function createHref(location) {
	      return history.createHref(prependBasename(location));
	    }
	
	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    }
	
	    // deprecated
	    function pushState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      push(_extends({ state: state }, path));
	    }
	
	    // deprecated
	    function replaceState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      replace(_extends({ state: state }, path));
	    }
	
	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,
	
	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}
	
	exports['default'] = useBasename;
	module.exports = exports['default'];

/***/ },
/* 277 */
149,
/* 278 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactComponentTreeHook = __webpack_require__(26);
	var ReactElement = __webpack_require__(73);
	
	var checkReactTypeSpec = __webpack_require__(683);
	
	var canDefineProperty = __webpack_require__(114);
	var getIteratorFn = __webpack_require__(282);
	var warning = __webpack_require__(4);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function getSourceInfoErrorAddendum(elementProps) {
	  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
	    var source = elementProps.__source;
	    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
	    var lineNumber = source.lineNumber;
	    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();
	
	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	   true ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	     true ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      if (typeof type !== 'function' && typeof type !== 'string') {
	        var info = '';
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	
	        var sourceInfo = getSourceInfoErrorAddendum(props);
	        if (sourceInfo) {
	          info += sourceInfo;
	        } else {
	          info += getDeclarationErrorAddendum();
	        }
	
	        info += ReactComponentTreeHook.getCurrentStackAddendum();
	
	         true ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
	      }
	    }
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (true) {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	             true ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (true) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(38);
	var ReactTransitionChildMapping = __webpack_require__(680);
	
	var propTypesFactory = __webpack_require__(90);
	var PropTypes = propTypesFactory(React.isValidElement);
	
	var emptyFunction = __webpack_require__(37);
	
	/**
	 * A basis for animations. When children are declaratively added or removed,
	 * special lifecycle hooks are called.
	 * See https://facebook.github.io/react/docs/animation.html#low-level-api-reacttransitiongroup
	 */
	
	var ReactTransitionGroup = function (_React$Component) {
	  _inherits(ReactTransitionGroup, _React$Component);
	
	  function ReactTransitionGroup() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ReactTransitionGroup);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      // TODO: can we get useful debug information to show at this point?
	      children: ReactTransitionChildMapping.getChildMapping(_this.props.children)
	    }, _this.performAppear = function (key) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      var component = _this.refs[key];
	
	      if (component.componentWillAppear) {
	        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key));
	      } else {
	        _this._handleDoneAppearing(key);
	      }
	    }, _this._handleDoneAppearing = function (key) {
	      var component = _this.refs[key];
	      if (component.componentDidAppear) {
	        component.componentDidAppear();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(_this.props.children);
	
	      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	        // This was removed before it had fully appeared. Remove it.
	        _this.performLeave(key);
	      }
	    }, _this.performEnter = function (key) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      var component = _this.refs[key];
	
	      if (component.componentWillEnter) {
	        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key));
	      } else {
	        _this._handleDoneEntering(key);
	      }
	    }, _this._handleDoneEntering = function (key) {
	      var component = _this.refs[key];
	      if (component.componentDidEnter) {
	        component.componentDidEnter();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(_this.props.children);
	
	      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	        // This was removed before it had fully entered. Remove it.
	        _this.performLeave(key);
	      }
	    }, _this.performLeave = function (key) {
	      _this.currentlyTransitioningKeys[key] = true;
	
	      var component = _this.refs[key];
	      if (component.componentWillLeave) {
	        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key));
	      } else {
	        // Note that this is somewhat dangerous b/c it calls setState()
	        // again, effectively mutating the component before all the work
	        // is done.
	        _this._handleDoneLeaving(key);
	      }
	    }, _this._handleDoneLeaving = function (key) {
	      var component = _this.refs[key];
	
	      if (component.componentDidLeave) {
	        component.componentDidLeave();
	      }
	
	      delete _this.currentlyTransitioningKeys[key];
	
	      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(_this.props.children);
	
	      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
	        // This entered again before it fully left. Add it again.
	        _this.performEnter(key);
	      } else {
	        _this.setState(function (state) {
	          var newChildren = _assign({}, state.children);
	          delete newChildren[key];
	          return { children: newChildren };
	        });
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  ReactTransitionGroup.prototype.componentWillMount = function componentWillMount() {
	    this.currentlyTransitioningKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	  };
	
	  ReactTransitionGroup.prototype.componentDidMount = function componentDidMount() {
	    var initialChildMapping = this.state.children;
	    for (var key in initialChildMapping) {
	      if (initialChildMapping[key]) {
	        this.performAppear(key);
	      }
	    }
	  };
	
	  ReactTransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);
	    var prevChildMapping = this.state.children;
	
	    this.setState({
	      children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping)
	    });
	
	    var key;
	
	    for (key in nextChildMapping) {
	      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
	      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
	        this.keysToEnter.push(key);
	      }
	    }
	
	    for (key in prevChildMapping) {
	      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
	      if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {
	        this.keysToLeave.push(key);
	      }
	    }
	
	    // If we want to someday check for reordering, we could do it here.
	  };
	
	  ReactTransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {
	    var keysToEnter = this.keysToEnter;
	    this.keysToEnter = [];
	    keysToEnter.forEach(this.performEnter);
	
	    var keysToLeave = this.keysToLeave;
	    this.keysToLeave = [];
	    keysToLeave.forEach(this.performLeave);
	  };
	
	  ReactTransitionGroup.prototype.render = function render() {
	    // TODO: we could get rid of the need for the wrapper node
	    // by cloning a single child
	    var childrenToRender = [];
	    for (var key in this.state.children) {
	      var child = this.state.children[key];
	      if (child) {
	        // You may need to apply reactive updates to a child as it is leaving.
	        // The normal React way to do it won't work since the child will have
	        // already been removed. In case you need this behavior you can provide
	        // a childFactory function to wrap every child, even the ones that are
	        // leaving.
	        childrenToRender.push(React.cloneElement(this.props.childFactory(child), { ref: key, key: key }));
	      }
	    }
	
	    // Do not forward ReactTransitionGroup props to primitive DOM nodes
	    var props = _assign({}, this.props);
	    delete props.transitionLeave;
	    delete props.transitionName;
	    delete props.transitionAppear;
	    delete props.transitionEnter;
	    delete props.childFactory;
	    delete props.transitionLeaveTimeout;
	    delete props.transitionEnterTimeout;
	    delete props.transitionAppearTimeout;
	    delete props.component;
	
	    return React.createElement(this.props.component, props, childrenToRender);
	  };
	
	  return ReactTransitionGroup;
	}(React.Component);
	
	ReactTransitionGroup.displayName = 'ReactTransitionGroup';
	ReactTransitionGroup.propTypes = {
	  component: PropTypes.any,
	  childFactory: PropTypes.func
	};
	ReactTransitionGroup.defaultProps = {
	  component: 'span',
	  childFactory: emptyFunction.thatReturnsArgument
	};
	
	
	module.exports = ReactTransitionGroup;

/***/ },
/* 282 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 283 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var nextDebugID = 1;
	
	function getNextDebugID() {
	  return nextDebugID++;
	}
	
	module.exports = getNextDebugID;

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(74);
	
	var ReactElement = __webpack_require__(73);
	
	var invariant = __webpack_require__(3);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  true ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(74);
	
	var ReactCurrentOwner = __webpack_require__(48);
	var REACT_ELEMENT_TYPE = __webpack_require__(278);
	
	var getIteratorFn = __webpack_require__(282);
	var invariant = __webpack_require__(3);
	var KeyEscapeUtils = __webpack_require__(277);
	var warning = __webpack_require__(4);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (true) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	           true ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (true) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  true ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _BigPlayButton = __webpack_require__(306);
	
	var _BigPlayButton2 = _interopRequireDefault(_BigPlayButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var BigPlayButtonExampleSource = __webpack_require__(556);
	
	var BigPlayButtonPage = function (_React$Component) {
	  _inherits(BigPlayButtonPage, _React$Component);
	
	  function BigPlayButtonPage() {
	    _classCallCheck(this, BigPlayButtonPage);
	
	    return _possibleConstructorReturn(this, (BigPlayButtonPage.__proto__ || Object.getPrototypeOf(BigPlayButtonPage)).apply(this, arguments));
	  }
	
	  _createClass(BigPlayButtonPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'BigPlayButton' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'BigPlayButton'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'Initial play button. Shows before the video has played. The hiding of the big play button is done via CSS and player states.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_BigPlayButton2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            BigPlayButtonExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'BigPlayButton.propTypes = {\n\n  // The default position is left-top,\n  // another position is \'center\'\n  // it has a css named `video-react-big-play-button-${position}`\n  // default: \'left\'\n  position: PropTypes.string,\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return BigPlayButtonPage;
	}(_react2.default.Component);
	
	exports.default = BigPlayButtonPage;

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _ControlBar = __webpack_require__(307);
	
	var _ControlBar2 = _interopRequireDefault(_ControlBar);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var ControlBarExampleSource = __webpack_require__(557);
	
	var ControlBarPage = function (_React$Component) {
	  _inherits(ControlBarPage, _React$Component);
	
	  function ControlBarPage() {
	    _classCallCheck(this, ControlBarPage);
	
	    return _possibleConstructorReturn(this, (ControlBarPage.__proto__ || Object.getPrototypeOf(ControlBarPage)).apply(this, arguments));
	  }
	
	  _createClass(ControlBarPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'ControlBar' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'ControlBar'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'The Html5 video\'s control bar is hidden, the player offers a customizable control bar to allow the user to control video playback, including volume, seeking, and pause/resume playback.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_ControlBar2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            ControlBarExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'ControlBar.propTypes = {\n\n  // Hide the control bar automatically after the player is inactive\n  // default: \'true\'\n  autoHide: PropTypes.bool,\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return ControlBarPage;
	}(_react2.default.Component);
	
	exports.default = ControlBarPage;

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _ForwardControl = __webpack_require__(310);
	
	var _ForwardControl2 = _interopRequireDefault(_ForwardControl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var ForwardControlExampleSource = __webpack_require__(560);
	
	var ForwardControlPage = function (_React$Component) {
	  _inherits(ForwardControlPage, _React$Component);
	
	  function ForwardControlPage() {
	    _classCallCheck(this, ForwardControlPage);
	
	    return _possibleConstructorReturn(this, (ForwardControlPage.__proto__ || Object.getPrototypeOf(ForwardControlPage)).apply(this, arguments));
	  }
	
	  _createClass(ForwardControlPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'ForwardControl' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'ForwardControl'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'A button in control bar to go forward 5/10/30 seconds.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_ForwardControl2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            ForwardControlExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'ForwardControl.propTypes = {\n\n  // How many seconds to go forward\n  // default: 10\n  seconds: React.PropTypes.oneOf([5, 10, 30]),\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return ForwardControlPage;
	}(_react2.default.Component);
	
	exports.default = ForwardControlPage;

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _LoadingSpinner = __webpack_require__(312);
	
	var _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var LoadingSpinnerExampleSource = __webpack_require__(562);
	
	var LoadingSpinnerPage = function (_React$Component) {
	  _inherits(LoadingSpinnerPage, _React$Component);
	
	  function LoadingSpinnerPage() {
	    _classCallCheck(this, LoadingSpinnerPage);
	
	    return _possibleConstructorReturn(this, (LoadingSpinnerPage.__proto__ || Object.getPrototypeOf(LoadingSpinnerPage)).apply(this, arguments));
	  }
	
	  _createClass(LoadingSpinnerPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'LoadingSpinner' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'LoadingSpinner'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'There would be a loading spinner to display before the video is loaded.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_LoadingSpinner2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            LoadingSpinnerExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'LoadingSpinner.propTypes = {\n\n  // no customizable properties\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return LoadingSpinnerPage;
	}(_react2.default.Component);
	
	exports.default = LoadingSpinnerPage;

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _PlayToggle = __webpack_require__(313);
	
	var _PlayToggle2 = _interopRequireDefault(_PlayToggle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var PlayToggleExampleSource = __webpack_require__(563);
	
	var PlayTogglePage = function (_React$Component) {
	  _inherits(PlayTogglePage, _React$Component);
	
	  function PlayTogglePage() {
	    _classCallCheck(this, PlayTogglePage);
	
	    return _possibleConstructorReturn(this, (PlayTogglePage.__proto__ || Object.getPrototypeOf(PlayTogglePage)).apply(this, arguments));
	  }
	
	  _createClass(PlayTogglePage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'PlayToggle' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'PlayToggle'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'A button component to toggle between play and pause.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_PlayToggle2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            PlayToggleExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'PlayToggle.propTypes = {\n\n// no customizable properties,\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return PlayTogglePage;
	}(_react2.default.Component);
	
	exports.default = PlayTogglePage;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _PlaybackRateMenuButton = __webpack_require__(314);
	
	var _PlaybackRateMenuButton2 = _interopRequireDefault(_PlaybackRateMenuButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var PlaybackRateMenuButtonExampleSource = __webpack_require__(564);
	
	var PlaybackRateMenuButtonPage = function (_React$Component) {
	  _inherits(PlaybackRateMenuButtonPage, _React$Component);
	
	  function PlaybackRateMenuButtonPage() {
	    _classCallCheck(this, PlaybackRateMenuButtonPage);
	
	    return _possibleConstructorReturn(this, (PlaybackRateMenuButtonPage.__proto__ || Object.getPrototypeOf(PlaybackRateMenuButtonPage)).apply(this, arguments));
	  }
	
	  _createClass(PlaybackRateMenuButtonPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'PlaybackRateMenuButton' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'PlaybackRateMenuButton'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'The dropdown menu to control the playback rates.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_PlaybackRateMenuButton2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            PlaybackRateMenuButtonExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'PlaybackRateMenuButton.propTypes = {\n\n  // The direction where Volume Bar popup\n  // default: [2, 1.5, 1.25, 1, 0.5, 0.25]\n  rates: PropTypes.array,\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return PlaybackRateMenuButtonPage;
	}(_react2.default.Component);
	
	exports.default = PlaybackRateMenuButtonPage;

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _Player = __webpack_require__(315);
	
	var _Player2 = _interopRequireDefault(_Player);
	
	var _PlayerControl = __webpack_require__(316);
	
	var _PlayerControl2 = _interopRequireDefault(_PlayerControl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var PlayerExampleSource = __webpack_require__(565);
	var PlayerControlExampleSource = __webpack_require__(566);
	
	var PlayerPage = function (_React$Component) {
	  _inherits(PlayerPage, _React$Component);
	
	  function PlayerPage() {
	    _classCallCheck(this, PlayerPage);
	
	    return _possibleConstructorReturn(this, (PlayerPage.__proto__ || Object.getPrototypeOf(PlayerPage)).apply(this, arguments));
	  }
	
	  _createClass(PlayerPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'Player' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'Player'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          _react2.default.createElement(
	            'code',
	            null,
	            'Player'
	          ),
	          ' is the root component of the Video-React player. All the others components should be in this component.'
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Attributes'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'All the attributes for the ',
	          _react2.default.createElement(
	            'code',
	            null,
	            'Player'
	          ),
	          ' component, they can be added as React properties.'
	        ),
	        _react2.default.createElement(
	          _reactstrap.Table,
	          { bordered: true },
	          _react2.default.createElement(
	            'thead',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'th',
	                null,
	                'Name'
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                'Type'
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                'Default'
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                'Description'
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'tbody',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'width'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'number'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                '-'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Video width'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'height'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'number'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                '-'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Video height'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'src'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'string'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                '-'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'The URL of the video to embed. This is optional; you may instead use the ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  '<source>'
	                ),
	                ' element within the ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'Player'
	                ),
	                ' block to specify the video to embed.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'poster'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'string'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                '-'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'A URL indicating a poster frame to show until the user plays or seeks. If this attribute isn\'t specified, nothing is displayed until the first frame is available; then the first frame is shown as the poster frame.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'preload'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'enum'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                '-'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:',
	                _react2.default.createElement(
	                  'ul',
	                  null,
	                  _react2.default.createElement(
	                    'li',
	                    null,
	                    _react2.default.createElement(
	                      'code',
	                      null,
	                      'none'
	                    ),
	                    ': indicates that the video should not be preloaded.'
	                  ),
	                  _react2.default.createElement(
	                    'li',
	                    null,
	                    _react2.default.createElement(
	                      'code',
	                      null,
	                      'metadata'
	                    ),
	                    ': indicates that only video metadata (e.g. length) is fetched.'
	                  ),
	                  _react2.default.createElement(
	                    'li',
	                    null,
	                    _react2.default.createElement(
	                      'code',
	                      null,
	                      'auto'
	                    ),
	                    ': indicates that the whole video file could be downloaded, even if the user is not expected to use it.'
	                  ),
	                  _react2.default.createElement(
	                    'li',
	                    null,
	                    _react2.default.createElement(
	                      'i',
	                      null,
	                      'the empty string'
	                    ),
	                    ': synonym of the auto value.'
	                  )
	                )
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'fluid'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'bool'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'true'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'In ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'fluid'
	                ),
	                ' mode, it\u2019s ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  '100%'
	                ),
	                ' wide all the time, the height will be calculated by the video\'s ratio.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'muted'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'bool'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'false'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'A Boolean attribute which indicates the default setting of the audio contained in the video. If set, the audio will be initially silenced. Its default value is false, meaning that the audio will be played when the video is played.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'playsInline'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'bool'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'false'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                '[iOS only]Determines whether HTML5 videos play inline or use the native full-screen controller.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'aspectRatio'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'string'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'auto'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'The aspect ratio is the width of the video divided by its height. Posible values: ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'auto'
	                ),
	                ', ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  '16:9'
	                ),
	                ', ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  '4:3'
	                ),
	                ', etc.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'autoPlay'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'bool'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'false'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'if specified, the video automatically begins to play back as soon as it can do so without stopping to finish loading the data.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'startTime'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'number'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                '-'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Seek the Video at A Specific Time On Load'
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          _reactstrap.Table,
	          { bordered: true },
	          _react2.default.createElement(
	            'thead',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'th',
	                null,
	                'Name'
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                'Description'
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'tbody',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'playbackRate'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Sets or returns the speed of the video playback. For example:',
	                _react2.default.createElement(
	                  'pre',
	                  null,
	                  _react2.default.createElement(
	                    _reactPrism.PrismCode,
	                    { className: 'language-jsx' },
	                    '<Player ref="player">\n  <source src="https://media.w3.org/2010/05/sintel/trailer_hd.mp4" />\n</Player>\n\n// access the player object by ref\n// set playbackRate to 2\nthis.refs.player.playbackRate = 2; '
	                  )
	                )
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'muted'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Sets or returns whether the video is muted or not'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'volume'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Sets or returns the volume of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'videoWidth'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the width of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'videoHeight'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the height of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'video'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'Video'
	                ),
	                ' component object'
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Methods'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'The ',
	          _react2.default.createElement(
	            'code',
	            null,
	            'Player'
	          ),
	          ' component has some methods to control the video and the player.'
	        ),
	        _react2.default.createElement(
	          _reactstrap.Table,
	          { bordered: true },
	          _react2.default.createElement(
	            'thead',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'th',
	                null,
	                'Name'
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                'Description'
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'tbody',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement('a', { name: 'getState' }),
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'getState()'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Get the redux ',
	                _react2.default.createElement(
	                  'a',
	                  { href: '#state' },
	                  'State'
	                ),
	                '. For example:',
	                _react2.default.createElement(
	                  'pre',
	                  null,
	                  _react2.default.createElement(
	                    _reactPrism.PrismCode,
	                    { className: 'language-jsx' },
	                    'const { player } = this.refs.player.getState();\nconsole.log(player.currentTime); // print current time'
	                  )
	                )
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'play()'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Play the video.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'pause()'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Pause the video.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'load()'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Change the video source and re-load the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'addTextTrack()'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Add a new text track to the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'canPlayType()'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Check if your browser can play different types of video:'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'seek(time)'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Seek video by time (seconds)'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'forward(seconds)'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Jump forward x seconds'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'replay(seconds)'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Jump back x seconds'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'toggleFullscreen()'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Enter or exist full screen'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'subscribeToStateChange(listener)'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Subscribe to the ',
	                _react2.default.createElement(
	                  'a',
	                  { href: '#state' },
	                  'player state'
	                ),
	                ' changes.',
	                _react2.default.createElement(
	                  'pre',
	                  null,
	                  _react2.default.createElement(
	                    _reactPrism.PrismCode,
	                    { className: 'language-jsx' },
	                    'componentDidMount() {\n  // subscribe state change\n  this.refs.player.subscribeToStateChange(this.handleStateChange.bind(this));\n}\n\nhandleStateChange(state, prevState) {\n  // copy player state to this component\'s state\n  this.setState({\n    player: state,\n    currentTime: state.currentTime\n  });\n}'
	                  )
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          _react2.default.createElement('a', { name: 'state' }),
	          'State'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'We use ',
	          _react2.default.createElement(
	            'code',
	            null,
	            'redux'
	          ),
	          ' to manage the player state. Using ',
	          _react2.default.createElement(
	            'a',
	            { href: '#getState' },
	            'getState'
	          ),
	          ' method can get the state object. This is the list of all the states.'
	        ),
	        _react2.default.createElement(
	          _reactstrap.Table,
	          { bordered: true },
	          _react2.default.createElement(
	            'thead',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'th',
	                null,
	                'Name'
	              ),
	              _react2.default.createElement(
	                'th',
	                { colSpan: '2' },
	                'Description'
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'tbody',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'player'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                { colSpan: '2' },
	                'The ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'player'
	                ),
	                ' state includes all the states about the video and the player. Below is the properties list of the ',
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'player'
	                ),
	                ' state.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'currentSrc'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the URL of the current video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'duration'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the length of the current video (in seconds)'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'currentTime'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the current playback position in the video (in seconds)'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'seekingTime'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the current seeking position in the video (in seconds)'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'buffered'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns a TimeRanges object representing the buffered parts of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'waiting'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the player needs to buffer the next frame'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'seeking'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the user is currently seeking in the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'paused'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the player has been paused'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'autoPaused'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the player has been paused by the player itself'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'ended'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the playback of the video has ended or not'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'playbackRate'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the speed of the video playback'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'muted'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the video is muted or not'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'volume'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the volume of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'readyState'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the current ready state of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'networkState'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the current network state of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'videoWidth'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the volume of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'videoHeight'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns the height of the video'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'hasStarted'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the video has been started'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'userActivity'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the user is in activity.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'isActive'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the player is in activity.'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                '\xA0'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'code',
	                  null,
	                  'isFullscreen'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Returns whether the player is in fullscreen.'
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Examples'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'Some examples to show how to use the player.'
	        ),
	        _react2.default.createElement(
	          'h5',
	          null,
	          'Control the player'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'This is an example on how to control the player from outside the component.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_PlayerControl2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            PlayerControlExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h5',
	          null,
	          'Change the player url'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'This is an example on how to change the video url.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_Player2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            PlayerExampleSource
	          )
	        )
	      );
	    }
	  }]);
	
	  return PlayerPage;
	}(_react2.default.Component);
	
	exports.default = PlayerPage;

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _PosterImage = __webpack_require__(317);
	
	var _PosterImage2 = _interopRequireDefault(_PosterImage);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var PosterImageExampleSource = __webpack_require__(567);
	
	var PosterImagePage = function (_React$Component) {
	  _inherits(PosterImagePage, _React$Component);
	
	  function PosterImagePage() {
	    _classCallCheck(this, PosterImagePage);
	
	    return _possibleConstructorReturn(this, (PosterImagePage.__proto__ || Object.getPrototypeOf(PosterImagePage)).apply(this, arguments));
	  }
	
	  _createClass(PosterImagePage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'PosterImage' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'PosterImage'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'The ',
	          _react2.default.createElement(
	            'code',
	            null,
	            'PosterImage'
	          ),
	          ' specifies an image to be shown while the video is downloading, or until the user hits the play button. If this is not included, the first frame of the video will be used instead.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_PosterImage2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            PosterImageExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            '\nPosterImage.propTypes = {\n\n  // The poster image url\n  poster: PropTypes.string,\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return PosterImagePage;
	}(_react2.default.Component);
	
	exports.default = PosterImagePage;

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _ReplayControl = __webpack_require__(318);
	
	var _ReplayControl2 = _interopRequireDefault(_ReplayControl);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var ReplayControlExampleSource = __webpack_require__(568);
	
	var ReplayControlPage = function (_React$Component) {
	  _inherits(ReplayControlPage, _React$Component);
	
	  function ReplayControlPage() {
	    _classCallCheck(this, ReplayControlPage);
	
	    return _possibleConstructorReturn(this, (ReplayControlPage.__proto__ || Object.getPrototypeOf(ReplayControlPage)).apply(this, arguments));
	  }
	
	  _createClass(ReplayControlPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'ReplayControl' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'ReplayControl'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'A button in control bar to go forward 5/10/30 seconds.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_ReplayControl2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            ReplayControlExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'ReplayControl.propTypes = {\n\n  // How many seconds to go forward\n  // default: 10\n  seconds: React.PropTypes.oneOf([5, 10, 30]),\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return ReplayControlPage;
	}(_react2.default.Component);
	
	exports.default = ReplayControlPage;

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _Shortcut = __webpack_require__(319);
	
	var _Shortcut2 = _interopRequireDefault(_Shortcut);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var ShortcutExampleSource = __webpack_require__(569);
	
	var ShortcutPage = function (_React$Component) {
	  _inherits(ShortcutPage, _React$Component);
	
	  function ShortcutPage() {
	    _classCallCheck(this, ShortcutPage);
	
	    return _possibleConstructorReturn(this, (ShortcutPage.__proto__ || Object.getPrototypeOf(ShortcutPage)).apply(this, arguments));
	  }
	
	  _createClass(ShortcutPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'Shortcut' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'Shortcut'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'Using keyboard shortcut to control the player.'
	        ),
	        _react2.default.createElement(
	          _reactstrap.Alert,
	          { color: 'warning' },
	          _react2.default.createElement(
	            'strong',
	            null,
	            'Warning!'
	          ),
	          'The shortcut can work only if the player is in active.'
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'Shortcut.propTypes = {\n\n  // Add your own shortcuts\n  shortcuts: PropTypes.array,\n\n}'
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Keyboard Shortcuts'
	        ),
	        _react2.default.createElement(
	          _reactstrap.Table,
	          null,
	          _react2.default.createElement(
	            'thead',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'th',
	                null,
	                _react2.default.createElement(
	                  'font',
	                  { size: '3' },
	                  'Action'
	                )
	              ),
	              _react2.default.createElement(
	                'th',
	                null,
	                _react2.default.createElement(
	                  'font',
	                  { size: '3' },
	                  'Shortcut '
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'tbody',
	            null,
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Toggle play/pause the video'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'k or Spacebar'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Go back 5 seconds'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Left arrow'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Go back 10 seconds'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'j'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Go forward 5 seconds'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Right arrow'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Go forward 10 seconds'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'l'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Restart video'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                '0'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Go to Full Screen mode'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'f'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Exit Full Screen mode'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Escape'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Increase volume 5%'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Up arrow'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Decrease volume 5%'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Down arrow'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Increase speed'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Shift + ',
	                '>'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              null,
	              _react2.default.createElement(
	                'td',
	                null,
	                'Decrease speed'
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                'Shift + ',
	                '<'
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Example'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_Shortcut2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            ShortcutExampleSource
	          )
	        )
	      );
	    }
	  }]);
	
	  return ShortcutPage;
	}(_react2.default.Component);
	
	exports.default = ShortcutPage;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _VolumeMenuButton = __webpack_require__(320);
	
	var _VolumeMenuButton2 = _interopRequireDefault(_VolumeMenuButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var VolumeMenuButtonExampleSource = __webpack_require__(570);
	
	var VolumeMenuButtonPage = function (_React$Component) {
	  _inherits(VolumeMenuButtonPage, _React$Component);
	
	  function VolumeMenuButtonPage() {
	    _classCallCheck(this, VolumeMenuButtonPage);
	
	    return _possibleConstructorReturn(this, (VolumeMenuButtonPage.__proto__ || Object.getPrototypeOf(VolumeMenuButtonPage)).apply(this, arguments));
	  }
	
	  _createClass(VolumeMenuButtonPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'VolumeMenuButton' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'VolumeMenuButton'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'Button for volume popup.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_VolumeMenuButton2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            VolumeMenuButtonExampleSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Properties'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            'VolumeMenuButton.propTypes = {\n\n  // The direction where Volume Bar popup\n  // default: false\n  vertical: PropTypes.bool,\n\n}'
	          )
	        )
	      );
	    }
	  }]);
	
	  return VolumeMenuButtonPage;
	}(_react2.default.Component);
	
	exports.default = VolumeMenuButtonPage;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(71);
	
	var _reactstrap = __webpack_require__(17);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ComponentLink = function ComponentLink(props) {
	  return _react2.default.createElement(
	    _reactstrap.NavItem,
	    null,
	    _react2.default.createElement(
	      _reactstrap.NavLink,
	      { tag: _reactRouter.Link, to: props.item.to, activeClassName: 'active' },
	      props.item.name
	    )
	  );
	};
	var propTypes = {
	  children: _react2.default.PropTypes.node
	};
	
	var Components = function (_React$Component) {
	  _inherits(Components, _React$Component);
	
	  function Components(props) {
	    _classCallCheck(this, Components);
	
	    var _this = _possibleConstructorReturn(this, (Components.__proto__ || Object.getPrototypeOf(Components)).call(this, props));
	
	    _this.state = {
	      navItems: [{
	        name: 'Player',
	        to: '/components/player/'
	      }, {
	        name: 'Shortcut',
	        to: '/components/shortcut/'
	      }, {
	        name: 'BigPlayButton',
	        to: '/components/big-play-button/'
	      }, {
	        name: 'PosterImage',
	        to: '/components/poster-image/'
	      }, {
	        name: 'LoadingSpinner',
	        to: '/components/loading-spinner/'
	      }, {
	        name: 'ControlBar',
	        to: '/components/control-bar/'
	      }, {
	        name: 'PlayToggle',
	        to: '/components/play-toggle/'
	      }, {
	        name: 'ReplayControl',
	        to: '/components/replay-control/'
	      }, {
	        name: 'ForwardControl',
	        to: '/components/forward-control/'
	      }, {
	        name: 'VolumeMenuButton',
	        to: '/components/volume-menu-button/'
	      }, {
	        name: 'PlaybackRateMenuButton',
	        to: '/components/playback-rate-menu-button/'
	      }]
	    };
	    return _this;
	  }
	
	  _createClass(Components, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactstrap.Container,
	        { className: 'content' },
	        _react2.default.createElement(
	          _reactstrap.Row,
	          null,
	          _react2.default.createElement(
	            _reactstrap.Col,
	            { md: { size: 3, push: 9 } },
	            _react2.default.createElement(
	              'div',
	              { className: 'docs-sidebar mb-3' },
	              _react2.default.createElement(
	                'h5',
	                null,
	                'Components'
	              ),
	              _react2.default.createElement(
	                _reactstrap.Nav,
	                { className: 'flex-column' },
	                this.state.navItems.map(function (item, i) {
	                  return _react2.default.createElement(ComponentLink, { key: i, item: item });
	                })
	              )
	            )
	          ),
	          _react2.default.createElement(
	            _reactstrap.Col,
	            { md: { size: 9, pull: 3 } },
	            this.props.children
	          )
	        )
	      );
	    }
	  }]);
	
	  return Components;
	}(_react2.default.Component);
	
	Components.propTypes = propTypes;
	exports.default = Components;

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _CustomizeSource = __webpack_require__(308);
	
	var _CustomizeSource2 = _interopRequireDefault(_CustomizeSource);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var CustomizeSourceExampleSource = __webpack_require__(558);
	var HLSSourceSource = __webpack_require__(561);
	
	var CustomizeSourcePage = function (_React$Component) {
	  _inherits(CustomizeSourcePage, _React$Component);
	
	  function CustomizeSourcePage() {
	    _classCallCheck(this, CustomizeSourcePage);
	
	    return _possibleConstructorReturn(this, (CustomizeSourcePage.__proto__ || Object.getPrototypeOf(CustomizeSourcePage)).apply(this, arguments));
	  }
	
	  _createClass(CustomizeSourcePage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'CustomizeSource' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'Customize Video Source'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'This is an example on how to customize a HLS video source.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_CustomizeSource2.default, null)
	        ),
	        _react2.default.createElement('p', null),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'HLSSource Component'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            HLSSourceSource
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Customize Source Example'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            CustomizeSourceExampleSource
	          )
	        )
	      );
	    }
	  }]);
	
	  return CustomizeSourcePage;
	}(_react2.default.Component);
	
	exports.default = CustomizeSourcePage;

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _EnableDisableComponent = __webpack_require__(309);
	
	var _EnableDisableComponent2 = _interopRequireDefault(_EnableDisableComponent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/no-multi-comp: 0, react/prop-types: 0 */
	
	
	var EnableDisableComponentExampleSource = __webpack_require__(559);
	
	var EnableDisableComponentPage = function (_React$Component) {
	  _inherits(EnableDisableComponentPage, _React$Component);
	
	  function EnableDisableComponentPage() {
	    _classCallCheck(this, EnableDisableComponentPage);
	
	    return _possibleConstructorReturn(this, (EnableDisableComponentPage.__proto__ || Object.getPrototypeOf(EnableDisableComponentPage)).apply(this, arguments));
	  }
	
	  _createClass(EnableDisableComponentPage, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(_reactHelmet2.default, { title: 'Enable & disable default components' }),
	        _react2.default.createElement(
	          'h3',
	          null,
	          'Enable & Disable Default Components'
	        ),
	        _react2.default.createElement(
	          'p',
	          null,
	          'The components can be enabled or disabled.'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(_EnableDisableComponent2.default, null)
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-jsx' },
	            EnableDisableComponentExampleSource
	          )
	        )
	      );
	    }
	  }]);
	
	  return EnableDisableComponentPage;
	}(_react2.default.Component);
	
	exports.default = EnableDisableComponentPage;

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(71);
	
	var _reactstrap = __webpack_require__(17);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CustomizeLink = function CustomizeLink(props) {
	  return _react2.default.createElement(
	    _reactstrap.NavItem,
	    null,
	    _react2.default.createElement(
	      _reactstrap.NavLink,
	      { tag: _reactRouter.Link, to: props.item.to, activeClassName: 'active' },
	      props.item.name
	    )
	  );
	};
	var propTypes = {
	  children: _react2.default.PropTypes.node
	};
	
	var Customize = function (_React$Component) {
	  _inherits(Customize, _React$Component);
	
	  function Customize(props) {
	    _classCallCheck(this, Customize);
	
	    var _this = _possibleConstructorReturn(this, (Customize.__proto__ || Object.getPrototypeOf(Customize)).call(this, props));
	
	    _this.state = {
	      navItems: [{
	        name: 'Enable Disable Component',
	        to: '/customize/enable-disable-components/'
	      }, {
	        name: 'Customize Video Source',
	        to: '/customize/customize-source/'
	      }]
	    };
	    return _this;
	  }
	
	  _createClass(Customize, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _reactstrap.Container,
	        { className: 'content' },
	        _react2.default.createElement(
	          _reactstrap.Row,
	          null,
	          _react2.default.createElement(
	            _reactstrap.Col,
	            { md: { size: 3, push: 9 } },
	            _react2.default.createElement(
	              'div',
	              { className: 'docs-sidebar mb-3' },
	              _react2.default.createElement(
	                'h5',
	                null,
	                'Customize'
	              ),
	              _react2.default.createElement(
	                _reactstrap.Nav,
	                { className: 'flex-column' },
	                this.state.navItems.map(function (item, i) {
	                  return _react2.default.createElement(CustomizeLink, { key: i, item: item });
	                })
	              )
	            )
	          ),
	          _react2.default.createElement(
	            _reactstrap.Col,
	            { md: { size: 9, pull: 3 } },
	            this.props.children
	          )
	        )
	      );
	    }
	  }]);
	
	  return Customize;
	}(_react2.default.Component);
	
	Customize.propTypes = propTypes;
	exports.default = Customize;

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactRouter = __webpack_require__(71);
	
	var _importBasic = __webpack_require__(321);
	
	var _importBasic2 = _interopRequireDefault(_importBasic);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var importBasic = __webpack_require__(571);
	
	exports.default = function () {
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(
	      _reactstrap.Jumbotron,
	      { tag: 'section', className: 'jumbotron-header text-center mb-3' },
	      _react2.default.createElement(
	        _reactstrap.Container,
	        null,
	        _react2.default.createElement(
	          _reactstrap.Row,
	          null,
	          _react2.default.createElement(
	            _reactstrap.Col,
	            null,
	            _react2.default.createElement(
	              'p',
	              { className: 'lead' },
	              _react2.default.createElement('img', { src: '/assets/logo.png', alt: '', width: '150px' })
	            ),
	            _react2.default.createElement(
	              'h1',
	              { className: 'jumbotron-heading display-4' },
	              'Video-React'
	            ),
	            _react2.default.createElement(
	              'p',
	              { className: 'lead' },
	              'The web video player built from the ground up for an HTML5 world using React library.'
	            ),
	            _react2.default.createElement(
	              'p',
	              null,
	              _react2.default.createElement(
	                _reactstrap.Button,
	                { outline: true, color: 'danger', href: 'https://github.com/video-react/video-react' },
	                'View on Github'
	              ),
	              _react2.default.createElement(
	                _reactstrap.Button,
	                { color: 'danger', tag: _reactRouter.Link, to: '/components/' },
	                'View Components'
	              )
	            )
	          )
	        )
	      )
	    ),
	    _react2.default.createElement(
	      _reactstrap.Container,
	      { fluid: true },
	      _react2.default.createElement(
	        _reactstrap.Row,
	        null,
	        _react2.default.createElement(
	          _reactstrap.Col,
	          { sm: { size: 8, offset: 2 } },
	          _react2.default.createElement(
	            'h2',
	            null,
	            'Installation'
	          ),
	          _react2.default.createElement('hr', null),
	          _react2.default.createElement(
	            'h3',
	            null,
	            'NPM'
	          ),
	          _react2.default.createElement(
	            'p',
	            null,
	            'Install video-react and peer dependencies via NPM'
	          ),
	          _react2.default.createElement(
	            'pre',
	            null,
	            _react2.default.createElement(
	              _reactPrism.PrismCode,
	              { className: 'language-bash' },
	              'npm install --save video-react react react-dom redux'
	            )
	          ),
	          _react2.default.createElement(
	            'h3',
	            null,
	            'Basic example'
	          ),
	          _react2.default.createElement(
	            'p',
	            null,
	            'The basic player'
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'docs-example' },
	            _react2.default.createElement(_importBasic2.default, null)
	          ),
	          _react2.default.createElement(
	            'p',
	            null,
	            'import css in your app or add video-react styles in your page'
	          ),
	          _react2.default.createElement(
	            'pre',
	            null,
	            _react2.default.createElement(
	              _reactPrism.PrismCode,
	              { className: 'language-jsx' },
	              'import "node_modules/video-react/dist/video-react.css"; // import css'
	            )
	          ),
	          _react2.default.createElement(
	            'pre',
	            null,
	            _react2.default.createElement(
	              _reactPrism.PrismCode,
	              { className: 'language-jsx' },
	              '@import "~video-react/styles/scss/video-react"; // or import scss'
	            )
	          ),
	          _react2.default.createElement(
	            'pre',
	            null,
	            _react2.default.createElement(
	              _reactPrism.PrismCode,
	              { className: 'language-html' },
	              '<link rel="stylesheet" href="/css/video-react.css" />'
	            )
	          ),
	          _react2.default.createElement(
	            'pre',
	            null,
	            _react2.default.createElement(
	              _reactPrism.PrismCode,
	              { className: 'language-jsx' },
	              importBasic
	            )
	          ),
	          _react2.default.createElement(
	            'h2',
	            { className: 'm-t-3' },
	            'Development'
	          ),
	          _react2.default.createElement('hr', null),
	          _react2.default.createElement(
	            'p',
	            null,
	            'Install dependencies:'
	          ),
	          _react2.default.createElement(
	            'pre',
	            null,
	            _react2.default.createElement(
	              _reactPrism.PrismCode,
	              { className: 'language-bash' },
	              'npm install'
	            )
	          ),
	          _react2.default.createElement(
	            'p',
	            null,
	            'Run examples at ',
	            _react2.default.createElement(
	              'a',
	              { href: 'http://localhost:9000/', target: '_blank' },
	              'http://localhost:9000/'
	            ),
	            ' with webpack dev server:'
	          ),
	          _react2.default.createElement(
	            'pre',
	            null,
	            _react2.default.createElement(
	              _reactPrism.PrismCode,
	              { className: 'language-bash' },
	              'npm start'
	            )
	          ),
	          _react2.default.createElement(
	            'p',
	            null,
	            'Run tests & coverage report:'
	          ),
	          _react2.default.createElement(
	            'pre',
	            null,
	            _react2.default.createElement(
	              _reactPrism.PrismCode,
	              { className: 'language-bash' },
	              'npm test'
	            )
	          )
	        )
	      )
	    )
	  );
	};

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactstrap = __webpack_require__(17);
	
	var _reactRouter = __webpack_require__(71);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement(_reactHelmet2.default, { title: '404 Page Not Found' }),
	    _react2.default.createElement(
	      'section',
	      { className: 'jumbotron text-xs-center m-b-3' },
	      _react2.default.createElement(
	        _reactstrap.Container,
	        { fluid: true },
	        _react2.default.createElement(
	          _reactstrap.Row,
	          null,
	          _react2.default.createElement(
	            _reactstrap.Col,
	            null,
	            _react2.default.createElement(
	              'p',
	              { className: 'lead' },
	              _react2.default.createElement('img', { src: '/assets/logo.png', alt: '', width: '150px' })
	            ),
	            _react2.default.createElement(
	              'h1',
	              { className: 'jumbotron-heading display-4' },
	              '404 - Not Found'
	            ),
	            _react2.default.createElement(
	              'p',
	              { className: 'lead' },
	              'Can\'t find what you\'re looking for? ',
	              _react2.default.createElement(
	                'a',
	                { href: 'https://github.com/video-react/video-react/issues/new' },
	                'Open'
	              ),
	              ' up an issue.'
	            ),
	            _react2.default.createElement(
	              'p',
	              null,
	              _react2.default.createElement(
	                _reactstrap.Button,
	                { outline: true, color: 'danger', className: 'm-r-1', tag: _reactRouter.Link, to: '/' },
	                'Get Started'
	              ),
	              _react2.default.createElement(
	                _reactstrap.Button,
	                { color: 'danger', tag: _reactRouter.Link, to: '/components' },
	                'View Components'
	              )
	            )
	          )
	        )
	      )
	    )
	  );
	};

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _Footer = __webpack_require__(172);
	
	var _Footer2 = _interopRequireDefault(_Footer);
	
	var _Nav = __webpack_require__(173);
	
	var _Nav2 = _interopRequireDefault(_Nav);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    'div',
	    { className: 'wrapper' },
	    _react2.default.createElement(_reactHelmet2.default, {
	      titleTemplate: 'Video-React - %s',
	      title: 'React Video Component',
	      defaultTitle: 'React Video Component',
	      meta: [{
	        name: 'description',
	        content: 'Video-React is a web video player built from the ground up for an HTML5 world using React library.'
	      }, {
	        property: 'og:type',
	        content: 'article'
	      }]
	    }),
	    _react2.default.createElement(_Nav2.default, null),
	    props.children,
	    _react2.default.createElement(_Footer2.default, null)
	  );
	};

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Footer = __webpack_require__(172);
	
	var _Footer2 = _interopRequireDefault(_Footer);
	
	var _Nav = __webpack_require__(173);
	
	var _Nav2 = _interopRequireDefault(_Nav);
	
	var _Layout = __webpack_require__(303);
	
	var _Layout2 = _interopRequireDefault(_Layout);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	  Nav: _Nav2.default,
	  Layout: _Layout2.default,
	  Footer: _Footer2.default
	};

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	__webpack_require__(522);
	
	__webpack_require__(523);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(91);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _server = __webpack_require__(639);
	
	var _server2 = _interopRequireDefault(_server);
	
	var _reactHelmet = __webpack_require__(22);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _reactRouter = __webpack_require__(71);
	
	var _routes = __webpack_require__(322);
	
	var _routes2 = _interopRequireDefault(_routes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Client render (optional):
	if (typeof document !== 'undefined') {
	  var outlet = document.getElementById('app');
	  _reactRouter.browserHistory.listen(function (location) {
	    // window.ga('set', 'page', location.pathname);
	    // window.ga('send', 'pageview');
	  });
	
	  var Holder = void 0;
	  window.addEventListener('DOMContentLoaded', function () {
	    Holder = __webpack_require__(541);
	  });
	
	  _reactDom2.default.render(_react2.default.createElement(_reactRouter.Router, {
	    onUpdate: function onUpdate() {
	      window.scrollTo(0, 0);
	
	      if (Holder) {
	        Holder.run();
	      }
	    },
	    history: _reactRouter.browserHistory,
	    routes: _routes2.default
	  }), outlet);
	}
	
	// Exported static site renderer:
	
	exports.default = function (locals, callback) {
	  var history = (0, _reactRouter.createMemoryHistory)();
	  var location = history.createLocation(locals.path);
	
	  (0, _reactRouter.match)({ routes: _routes2.default, location: location }, function (error, redirectLocation, renderProps) {
	    var url = void 0;
	    if (redirectLocation && redirectLocation.pathname) {
	      url = redirectLocation.pathname;
	      callback(null, '<!DOCTYPE html>\n      <html>\n      <head><link rel="canonical" href="' + url + '"/>\n      <meta http-equiv="content-type" content="text/html; charset=utf-8" />\n      <meta http-equiv="refresh" content="0;url=' + url + '" />\n      </head>\n      </html>');
	    }
	    var body = _server2.default.renderToString(_react2.default.createElement(_reactRouter.RouterContext, renderProps));
	    var head = _reactHelmet2.default.rewind();
	    var markup = '<!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset="utf-8">\n          <meta http-equiv="X-UA-Compatible" content="IE=edge">\n          <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">\n          ' + head.title.toString() + '\n          ' + head.meta.toString() + '\n          <link rel=icon href=/assets/favicon.ico>\n          <link rel="stylesheet" href="/assets/style.css"/>\n          <link rel="stylesheet" href="/assets/docs.css"/>\n        </head>\n        <body>\n          <div id="app">' + body + '</div>\n          <script src="/assets/prism.js" data-manual></script>\n          <script src="/bundle.js"></script>\n        </body>\n      </html>';
	    callback(null, markup);
	  });
	};

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    { src: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4' },
	    _react2.default.createElement(_videoReact.BigPlayButton, { position: 'center' })
	  );
	};

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    {
	      autoPlay: true,
	      src: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4'
	    },
	    _react2.default.createElement(_videoReact.ControlBar, { autoHide: false })
	  );
	};

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	var _HLSSource = __webpack_require__(311);
	
	var _HLSSource2 = _interopRequireDefault(_HLSSource);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  // Add customized HLSSource component into video-react Player
	  // The Component with `isVideoChild` attribute will be added into `Video` component
	  // Please use this url if you test it from local:
	  // http://www.streambox.fr/playlists/x36xhzz/x36xhzz.m3u8
	  return _react2.default.createElement(
	    _videoReact.Player,
	    null,
	    _react2.default.createElement(_HLSSource2.default, {
	      isVideoChild: true,
	      src: '//d2zihajmogu5jn.cloudfront.net/bipbop-advanced/bipbop_16x9_variant.m3u8'
	    })
	  );
	};

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    {
	      poster: '/assets/poster.png'
	    },
	    _react2.default.createElement('source', { src: 'http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4' }),
	    _react2.default.createElement('source', { src: 'http://mirrorblender.top-ix.org/movies/sintel-1024-surround.mp4' }),
	    _react2.default.createElement(
	      _videoReact.ControlBar,
	      null,
	      _react2.default.createElement(_videoReact.ReplayControl, { seconds: 10, order: 1.1 }),
	      _react2.default.createElement(_videoReact.ForwardControl, { seconds: 30, order: 1.2 }),
	      _react2.default.createElement(_videoReact.CurrentTimeDisplay, { order: 4.1 }),
	      _react2.default.createElement(_videoReact.TimeDivider, { order: 4.2 }),
	      _react2.default.createElement(_videoReact.PlaybackRateMenuButton, {
	        rates: [5, 2, 1, 0.5, 0.1],
	        order: 7.1
	      }),
	      _react2.default.createElement(_videoReact.VolumeMenuButton, { disabled: true })
	    )
	  );
	};

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    {
	      autoPlay: true,
	      poster: '/assets/poster.png',
	      src: 'http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4'
	    },
	    _react2.default.createElement(
	      _videoReact.ControlBar,
	      { autoHide: false },
	      _react2.default.createElement(_videoReact.ForwardControl, { seconds: 5, order: 3.1 }),
	      _react2.default.createElement(_videoReact.ForwardControl, { seconds: 10, order: 3.2 }),
	      _react2.default.createElement(_videoReact.ForwardControl, { seconds: 30, order: 3.3 })
	    )
	  );
	};

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _hls = __webpack_require__(539);
	
	var _hls2 = _interopRequireDefault(_hls);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  src: _react.PropTypes.string.isRequired,
	  type: _react.PropTypes.string,
	  video: _react.PropTypes.object
	};
	
	var HLSSource = function (_Component) {
	  _inherits(HLSSource, _Component);
	
	  function HLSSource(props, context) {
	    _classCallCheck(this, HLSSource);
	
	    var _this = _possibleConstructorReturn(this, (HLSSource.__proto__ || Object.getPrototypeOf(HLSSource)).call(this, props, context));
	
	    _this.hls = new _hls2.default();
	    return _this;
	  }
	
	  _createClass(HLSSource, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      // `src` is the property get from this component
	      // `video` is the property insert from `Video` component
	      // `video` is the html5 video element
	      var _props = this.props,
	          src = _props.src,
	          video = _props.video;
	      // load hls video source base on hls.js
	
	      if (_hls2.default.isSupported()) {
	        this.hls.loadSource(src);
	        this.hls.attachMedia(video);
	        this.hls.on(_hls2.default.Events.MANIFEST_PARSED, function () {
	          video.play();
	        });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement('source', {
	        src: this.props.src,
	        type: this.props.type || 'application/x-mpegURL'
	      });
	    }
	  }]);
	
	  return HLSSource;
	}(_react.Component);
	
	exports.default = HLSSource;
	
	
	HLSSource.propTypes = propTypes;

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    {
	      src: 'http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4'
	    },
	    _react2.default.createElement(_videoReact.LoadingSpinner, null)
	  );
	};

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    {
	      autoPlay: true,
	      poster: '/assets/poster.png',
	      src: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4'
	    },
	    _react2.default.createElement(
	      _videoReact.ControlBar,
	      { autoHide: false, disableDefaultControls: true },
	      _react2.default.createElement(_videoReact.PlayToggle, null)
	    )
	  );
	};

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    {
	      autoPlay: true,
	      src: 'http://media.w3.org/2010/05/bunny/movie.mp4'
	    },
	    _react2.default.createElement(
	      _videoReact.ControlBar,
	      { autoHide: false },
	      _react2.default.createElement(_videoReact.PlaybackRateMenuButton, {
	        rates: [5, 3, 1.5, 1, 0.5, 0.1],
	        order: 7.1
	      })
	    )
	  );
	};

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	var _reactstrap = __webpack_require__(17);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PlayerExample = function (_Component) {
	  _inherits(PlayerExample, _Component);
	
	  function PlayerExample(props, context) {
	    _classCallCheck(this, PlayerExample);
	
	    var _this = _possibleConstructorReturn(this, (PlayerExample.__proto__ || Object.getPrototypeOf(PlayerExample)).call(this, props, context));
	
	    _this.state = {
	      playerSource: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4',
	      inputVideoUrl: 'http://www.w3schools.com/html/mov_bbb.mp4'
	    };
	
	    _this.handleValueChange = _this.handleValueChange.bind(_this);
	    _this.updatePlayerInfo = _this.updatePlayerInfo.bind(_this);
	    return _this;
	  }
	
	  _createClass(PlayerExample, [{
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      if (this.state.playerSource != prevState.playerSource) {
	        this.refs.player.load();
	      }
	    }
	  }, {
	    key: 'handleValueChange',
	    value: function handleValueChange(e) {
	      var value = e.target.value;
	      this.setState(_defineProperty({}, e.target.id, value));
	    }
	  }, {
	    key: 'updatePlayerInfo',
	    value: function updatePlayerInfo() {
	      this.setState({
	        playerSource: this.state.inputVideoUrl
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          _videoReact.Player,
	          { ref: 'player' },
	          _react2.default.createElement('source', { src: this.state.playerSource })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'docs-example' },
	          _react2.default.createElement(
	            _reactstrap.Form,
	            null,
	            _react2.default.createElement(
	              _reactstrap.FormGroup,
	              null,
	              _react2.default.createElement(
	                _reactstrap.Label,
	                { 'for': 'inputVideoUrl' },
	                'Video Url'
	              ),
	              _react2.default.createElement(_reactstrap.Input, {
	                ref: 'inputVideoUrl',
	                name: 'inputVideoUrl',
	                id: 'inputVideoUrl',
	                value: this.state.inputVideoUrl,
	                onChange: this.handleValueChange
	              })
	            ),
	            _react2.default.createElement(
	              _reactstrap.FormGroup,
	              null,
	              _react2.default.createElement(
	                _reactstrap.Button,
	                { type: 'button', onClick: this.updatePlayerInfo },
	                'Update'
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);
	
	  return PlayerExample;
	}(_react.Component);
	
	exports.default = PlayerExample;

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactPrism = __webpack_require__(25);
	
	var _videoReact = __webpack_require__(23);
	
	var _reactstrap = __webpack_require__(17);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var sources = {
	  sintelTrailer: 'http://media.w3.org/2010/05/sintel/trailer.mp4',
	  bunnyTrailer: 'http://media.w3.org/2010/05/bunny/trailer.mp4',
	  bunnyMovie: 'http://media.w3.org/2010/05/bunny/movie.mp4',
	  test: 'http://media.w3.org/2010/05/video/movie_300.webm'
	};
	
	var PlayerControlExample = function (_Component) {
	  _inherits(PlayerControlExample, _Component);
	
	  function PlayerControlExample(props, context) {
	    _classCallCheck(this, PlayerControlExample);
	
	    var _this = _possibleConstructorReturn(this, (PlayerControlExample.__proto__ || Object.getPrototypeOf(PlayerControlExample)).call(this, props, context));
	
	    _this.state = {
	      source: sources['bunnyMovie']
	    };
	
	    _this.play = _this.play.bind(_this);
	    _this.pause = _this.pause.bind(_this);
	    _this.load = _this.load.bind(_this);
	    _this.changeCurrentTime = _this.changeCurrentTime.bind(_this);
	    _this.seek = _this.seek.bind(_this);
	    _this.changePlaybackRateRate = _this.changePlaybackRateRate.bind(_this);
	    _this.changeVolume = _this.changeVolume.bind(_this);
	    _this.setMuted = _this.setMuted.bind(_this);
	    return _this;
	  }
	
	  _createClass(PlayerControlExample, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      // subscribe state change
	      this.refs.player.subscribeToStateChange(this.handleStateChange.bind(this));
	    }
	  }, {
	    key: 'handleStateChange',
	    value: function handleStateChange(state, prevState) {
	      // copy player state to this component's state
	      this.setState({
	        player: state
	      });
	    }
	  }, {
	    key: 'play',
	    value: function play() {
	      this.refs.player.play();
	    }
	  }, {
	    key: 'pause',
	    value: function pause() {
	      this.refs.player.pause();
	    }
	  }, {
	    key: 'load',
	    value: function load() {
	      this.refs.player.load();
	    }
	  }, {
	    key: 'changeCurrentTime',
	    value: function changeCurrentTime(seconds) {
	      var _this2 = this;
	
	      return function () {
	        var _refs$player$getState = _this2.refs.player.getState(),
	            player = _refs$player$getState.player;
	
	        var currentTime = player.currentTime;
	        _this2.refs.player.seek(currentTime + seconds);
	      };
	    }
	  }, {
	    key: 'seek',
	    value: function seek(seconds) {
	      var _this3 = this;
	
	      return function () {
	        _this3.refs.player.seek(seconds);
	      };
	    }
	  }, {
	    key: 'changePlaybackRateRate',
	    value: function changePlaybackRateRate(steps) {
	      var _this4 = this;
	
	      return function () {
	        var _refs$player$getState2 = _this4.refs.player.getState(),
	            player = _refs$player$getState2.player;
	
	        var playbackRate = player.playbackRate;
	        _this4.refs.player.playbackRate = playbackRate + steps;
	      };
	    }
	  }, {
	    key: 'changeVolume',
	    value: function changeVolume(steps) {
	      var _this5 = this;
	
	      return function () {
	        var _refs$player$getState3 = _this5.refs.player.getState(),
	            player = _refs$player$getState3.player;
	
	        var volume = player.volume;
	        _this5.refs.player.volume = volume + steps;
	      };
	    }
	  }, {
	    key: 'setMuted',
	    value: function setMuted(muted) {
	      var _this6 = this;
	
	      return function () {
	        _this6.refs.player.muted = muted;
	      };
	    }
	  }, {
	    key: 'changeSource',
	    value: function changeSource(name) {
	      var _this7 = this;
	
	      return function () {
	        _this7.setState({
	          source: sources[name]
	        });
	        _this7.refs.player.load();
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          _videoReact.Player,
	          {
	            ref: 'player',
	            autoPlay: true
	          },
	          _react2.default.createElement('source', { src: this.state.source }),
	          _react2.default.createElement(_videoReact.ControlBar, { autoHide: false })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'py-3' },
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.play, className: 'mr-3' },
	            'play()'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.pause, className: 'mr-3' },
	            'pause()'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.load, className: 'mr-3' },
	            'load()'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'pb-3' },
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changeCurrentTime(10), className: 'mr-3' },
	            'currentTime += 10'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changeCurrentTime(-10), className: 'mr-3' },
	            'currentTime -= 10'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.seek(50), className: 'mr-3' },
	            'currentTime = 50'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'pb-3' },
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changePlaybackRateRate(1), className: 'mr-3' },
	            'playbackRate++'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changePlaybackRateRate(-1), className: 'mr-3' },
	            'playbackRate--'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changePlaybackRateRate(0.1), className: 'mr-3' },
	            'playbackRate+=0.1'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changePlaybackRateRate(-0.1), className: 'mr-3' },
	            'playbackRate-=0.1'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'pb-3' },
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changeVolume(0.1), className: 'mr-3' },
	            'volume+=0.1'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changeVolume(-0.1), className: 'mr-3' },
	            'volume-=0.1'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.setMuted(true), className: 'mr-3' },
	            'muted=true'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.setMuted(false), className: 'mr-3' },
	            'muted=false'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'pb-3' },
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changeSource('sintelTrailer'), className: 'mr-3' },
	            'Sintel teaser'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changeSource('bunnyTrailer'), className: 'mr-3' },
	            'Bunny trailer'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changeSource('bunnyMovie'), className: 'mr-3' },
	            'Bunny movie'
	          ),
	          _react2.default.createElement(
	            _reactstrap.Button,
	            { onClick: this.changeSource('test'), className: 'mr-3' },
	            'Test movie'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          'State'
	        ),
	        _react2.default.createElement(
	          'pre',
	          null,
	          _react2.default.createElement(
	            _reactPrism.PrismCode,
	            { className: 'language-json' },
	            JSON.stringify(this.state.player, null, 2)
	          )
	        )
	      );
	    }
	  }]);
	
	  return PlayerControlExample;
	}(_react.Component);
	
	exports.default = PlayerControlExample;

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  // set the poster image url to `poster` property
	  return _react2.default.createElement(_videoReact.Player, {
	    poster: '/assets/poster.png',
	    src: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4'
	  });
	};

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    {
	      autoPlay: true,
	      poster: '/assets/poster.png',
	      startTime: 300,
	      src: 'http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4'
	    },
	    _react2.default.createElement(
	      _videoReact.ControlBar,
	      { autoHide: false },
	      _react2.default.createElement(_videoReact.ReplayControl, { seconds: 5, order: 2.1 }),
	      _react2.default.createElement(_videoReact.ReplayControl, { seconds: 10, order: 2.2 }),
	      _react2.default.createElement(_videoReact.ReplayControl, { seconds: 30, order: 2.3 })
	    )
	  );
	};

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ShortcutExample = function (_Component) {
	  _inherits(ShortcutExample, _Component);
	
	  function ShortcutExample(props, context) {
	    _classCallCheck(this, ShortcutExample);
	
	    // add your own shortcuts
	    var _this = _possibleConstructorReturn(this, (ShortcutExample.__proto__ || Object.getPrototypeOf(ShortcutExample)).call(this, props, context));
	
	    _this.newShortcuts = [
	    // Press number 1 to jump to the postion of 10%
	    {
	      keyCode: 49, // Number 1
	      // handle is the function to control the player
	      // player: the player's state
	      // actions: the player's actions
	      handle: function handle(player, actions) {
	        var duration = player.duration;
	        // jump to the postion of 10%
	        actions.seek(duration * 0.1);
	      }
	    },
	    // Ctrl/Cmd + Right arrow to go forward 30 seconds
	    {
	      keyCode: 39, // Right arrow
	      ctrl: true, // Ctrl/Cmd
	      handle: function handle(player, actions) {
	        if (!player.hasStarted) {
	          return;
	        }
	
	        // this operation param is option
	        // helps to display a bezel
	        var operation = {
	          action: 'forward-30',
	          source: 'shortcut'
	        };
	        actions.forward(30, operation); // Go forward 30 seconds
	      }
	    }];
	    return _this;
	  }
	
	  _createClass(ShortcutExample, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        _videoReact.Player,
	        {
	          src: 'http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4'
	        },
	        _react2.default.createElement(_videoReact.Shortcut, {
	          shortcuts: this.newShortcuts
	        })
	      );
	    }
	  }]);
	
	  return ShortcutExample;
	}(_react.Component);
	
	exports.default = ShortcutExample;

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(
	    _videoReact.Player,
	    {
	      autoPlay: true,
	      poster: '/assets/poster.png',
	      src: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4'
	    },
	    _react2.default.createElement(
	      _videoReact.ControlBar,
	      { autoHide: false, disableDefaultControls: true },
	      _react2.default.createElement(_videoReact.VolumeMenuButton, null),
	      _react2.default.createElement(_videoReact.VolumeMenuButton, { vertical: true })
	    )
	  );
	};

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _videoReact = __webpack_require__(23);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (props) {
	  return _react2.default.createElement(_videoReact.Player, {
	    playsInline: true,
	    poster: '/assets/poster.png',
	    src: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4'
	  });
	};

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(71);
	
	var _Home = __webpack_require__(301);
	
	var _Home2 = _interopRequireDefault(_Home);
	
	var _NotFound = __webpack_require__(302);
	
	var _NotFound2 = _interopRequireDefault(_NotFound);
	
	var _Components = __webpack_require__(297);
	
	var _Components2 = _interopRequireDefault(_Components);
	
	var _UI = __webpack_require__(304);
	
	var _UI2 = _interopRequireDefault(_UI);
	
	var _PlayerPage = __webpack_require__(292);
	
	var _PlayerPage2 = _interopRequireDefault(_PlayerPage);
	
	var _ShortcutPage = __webpack_require__(295);
	
	var _ShortcutPage2 = _interopRequireDefault(_ShortcutPage);
	
	var _BigPlayButtonPage = __webpack_require__(286);
	
	var _BigPlayButtonPage2 = _interopRequireDefault(_BigPlayButtonPage);
	
	var _PosterImagePage = __webpack_require__(293);
	
	var _PosterImagePage2 = _interopRequireDefault(_PosterImagePage);
	
	var _LoadingSpinnerPage = __webpack_require__(289);
	
	var _LoadingSpinnerPage2 = _interopRequireDefault(_LoadingSpinnerPage);
	
	var _ControlBarPage = __webpack_require__(287);
	
	var _ControlBarPage2 = _interopRequireDefault(_ControlBarPage);
	
	var _PlayTogglePage = __webpack_require__(290);
	
	var _PlayTogglePage2 = _interopRequireDefault(_PlayTogglePage);
	
	var _ForwardControlPage = __webpack_require__(288);
	
	var _ForwardControlPage2 = _interopRequireDefault(_ForwardControlPage);
	
	var _ReplayControlPage = __webpack_require__(294);
	
	var _ReplayControlPage2 = _interopRequireDefault(_ReplayControlPage);
	
	var _VolumeMenuButtonPage = __webpack_require__(296);
	
	var _VolumeMenuButtonPage2 = _interopRequireDefault(_VolumeMenuButtonPage);
	
	var _PlaybackRateMenuButtonPage = __webpack_require__(291);
	
	var _PlaybackRateMenuButtonPage2 = _interopRequireDefault(_PlaybackRateMenuButtonPage);
	
	var _Customize = __webpack_require__(300);
	
	var _Customize2 = _interopRequireDefault(_Customize);
	
	var _EnableDisableComponentPage = __webpack_require__(299);
	
	var _EnableDisableComponentPage2 = _interopRequireDefault(_EnableDisableComponentPage);
	
	var _CustomizeSourcePage = __webpack_require__(298);
	
	var _CustomizeSourcePage2 = _interopRequireDefault(_CustomizeSourcePage);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var routes = _react2.default.createElement(
	  _reactRouter.Route,
	  { path: '/', component: _UI2.default.Layout },
	  _react2.default.createElement(_reactRouter.IndexRoute, { component: _Home2.default }),
	  _react2.default.createElement(_reactRouter.Route, { path: 'index.html', component: _Home2.default }),
	  _react2.default.createElement(
	    _reactRouter.Route,
	    { path: '/components/', component: _Components2.default },
	    _react2.default.createElement(_reactRouter.IndexRedirect, { to: 'player/' }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'player/', component: _PlayerPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'shortcut/', component: _ShortcutPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'big-play-button/', component: _BigPlayButtonPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'poster-image/', component: _PosterImagePage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'loading-spinner/', component: _LoadingSpinnerPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'control-bar/', component: _ControlBarPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'play-toggle/', component: _PlayTogglePage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'forward-control/', component: _ForwardControlPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'replay-control/', component: _ReplayControlPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'volume-menu-button/', component: _VolumeMenuButtonPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'playback-rate-menu-button/', component: _PlaybackRateMenuButtonPage2.default })
	  ),
	  _react2.default.createElement(
	    _reactRouter.Route,
	    { path: '/customize/', component: _Customize2.default },
	    _react2.default.createElement(_reactRouter.IndexRedirect, { to: 'enable-disable-components/' }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'enable-disable-components/', component: _EnableDisableComponentPage2.default }),
	    _react2.default.createElement(_reactRouter.Route, { path: 'customize-source/', component: _CustomizeSourcePage2.default })
	  ),
	  _react2.default.createElement(_reactRouter.Route, { path: '*', component: _NotFound2.default })
	);
	
	exports.default = routes;

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _createStore = __webpack_require__(685);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _reducers = __webpack_require__(333);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	var _player = __webpack_require__(115);
	
	var playerActions = _interopRequireWildcard(_player);
	
	var _video = __webpack_require__(174);
	
	var videoActions = _interopRequireWildcard(_video);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Manager = function () {
	  function Manager() {
	    _classCallCheck(this, Manager);
	
	    this.store = (0, _createStore2.default)(_reducers2.default);
	
	    this.video = null;
	    this.rootElement = null;
	  }
	
	  _createClass(Manager, [{
	    key: 'getActions',
	    value: function getActions() {
	      var manager = this;
	      var dispatch = this.store.dispatch;
	
	      var actions = _extends({}, playerActions, videoActions);
	
	      function bindActionCreator(actionCreator) {
	        return function () {
	          // eslint-disable-next-line prefer-rest-params
	          var action = actionCreator.apply(manager, arguments);
	          if (typeof action !== 'undefined') {
	            dispatch(action);
	          }
	        };
	      }
	
	      return Object.keys(actions).filter(function (key) {
	        return typeof actions[key] === 'function';
	      }).reduce(function (boundActions, key) {
	        boundActions[key] = bindActionCreator(actions[key]);
	        return boundActions;
	      }, {});
	    }
	  }, {
	    key: 'getState',
	    value: function getState() {
	      return this.store.getState();
	    }
	
	    // subscribe state change
	
	  }, {
	    key: 'subscribeToStateChange',
	    value: function subscribeToStateChange(listener, getState) {
	      if (!getState) {
	        getState = this.getState.bind(this);
	      }
	
	      var prevState = getState();
	
	      var handleChange = function handleChange() {
	        var state = getState();
	        if (state === prevState) {
	          return;
	        }
	        var prevStateCopy = prevState;
	        prevState = state;
	        listener(state, prevStateCopy);
	      };
	
	      return this.store.subscribe(handleChange);
	    }
	
	    // subscribe to operation state change
	
	  }, {
	    key: 'subscribeToOperationStateChange',
	    value: function subscribeToOperationStateChange(listener) {
	      var _this = this;
	
	      return this.subscribeToStateChange(listener, function () {
	        return _this.getState().operation;
	      });
	    }
	
	    // subscribe to player state change
	
	  }, {
	    key: 'subscribeToPlayerStateChange',
	    value: function subscribeToPlayerStateChange(listener) {
	      var _this2 = this;
	
	      return this.subscribeToStateChange(listener, function () {
	        return _this2.getState().player;
	      });
	    }
	  }]);
	
	  return Manager;
	}();
	
	exports.default = Manager;

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _lodash = __webpack_require__(231);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _Manager = __webpack_require__(323);
	
	var _Manager2 = _interopRequireDefault(_Manager);
	
	var _BigPlayButton = __webpack_require__(176);
	
	var _BigPlayButton2 = _interopRequireDefault(_BigPlayButton);
	
	var _LoadingSpinner = __webpack_require__(178);
	
	var _LoadingSpinner2 = _interopRequireDefault(_LoadingSpinner);
	
	var _PosterImage = __webpack_require__(179);
	
	var _PosterImage2 = _interopRequireDefault(_PosterImage);
	
	var _Video = __webpack_require__(181);
	
	var _Video2 = _interopRequireDefault(_Video);
	
	var _Bezel = __webpack_require__(175);
	
	var _Bezel2 = _interopRequireDefault(_Bezel);
	
	var _Shortcut = __webpack_require__(180);
	
	var _Shortcut2 = _interopRequireDefault(_Shortcut);
	
	var _ControlBar = __webpack_require__(182);
	
	var _ControlBar2 = _interopRequireDefault(_ControlBar);
	
	var _browser = __webpack_require__(336);
	
	var browser = _interopRequireWildcard(_browser);
	
	var _utils = __webpack_require__(42);
	
	var _fullscreen = __webpack_require__(198);
	
	var _fullscreen2 = _interopRequireDefault(_fullscreen);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  children: _propTypes2.default.any,
	
	  width: _propTypes2.default.number,
	  height: _propTypes2.default.number,
	  fluid: _propTypes2.default.bool,
	  muted: _propTypes2.default.bool,
	  playsInline: _propTypes2.default.bool,
	  aspectRatio: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	
	  startTime: _propTypes2.default.number,
	  loop: _propTypes2.default.bool,
	  autoPlay: _propTypes2.default.bool,
	  src: _propTypes2.default.string,
	  poster: _propTypes2.default.string,
	  preload: _propTypes2.default.oneOf(['auto', 'metadata', 'none']),
	
	  onLoadStart: _propTypes2.default.func,
	  onWaiting: _propTypes2.default.func,
	  onCanPlay: _propTypes2.default.func,
	  onCanPlayThrough: _propTypes2.default.func,
	  onPlaying: _propTypes2.default.func,
	  onEnded: _propTypes2.default.func,
	  onSeeking: _propTypes2.default.func,
	  onSeeked: _propTypes2.default.func,
	  onPlay: _propTypes2.default.func,
	  onPause: _propTypes2.default.func,
	  onProgress: _propTypes2.default.func,
	  onDurationChange: _propTypes2.default.func,
	  onError: _propTypes2.default.func,
	  onSuspend: _propTypes2.default.func,
	  onAbort: _propTypes2.default.func,
	  onEmptied: _propTypes2.default.func,
	  onStalled: _propTypes2.default.func,
	  onLoadedMetadata: _propTypes2.default.func,
	  onLoadedData: _propTypes2.default.func,
	  onTimeUpdate: _propTypes2.default.func,
	  onRateChange: _propTypes2.default.func,
	  onVolumeChange: _propTypes2.default.func
	};
	
	var defaultProps = {
	  fluid: true,
	  muted: false,
	  playsInline: false,
	  aspectRatio: 'auto'
	};
	
	var Player = function (_Component) {
	  _inherits(Player, _Component);
	
	  function Player(props) {
	    _classCallCheck(this, Player);
	
	    var _this = _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this, props));
	
	    _this.controlsHideTimer = null;
	
	    _this.video = null; // the Video component
	    _this.manager = new _Manager2.default();
	    _this.actions = _this.manager.getActions();
	    _this.manager.subscribeToPlayerStateChange(_this.handleStateChange.bind(_this));
	
	    _this.getStyle = _this.getStyle.bind(_this);
	    _this.handleResize = _this.handleResize.bind(_this);
	    _this.getChildren = _this.getChildren.bind(_this);
	    _this.handleMouseMove = (0, _lodash2.default)(_this.handleMouseMove.bind(_this), 250);
	    _this.handleMouseDown = _this.handleMouseDown.bind(_this);
	    _this.startControlsTimer = _this.startControlsTimer.bind(_this);
	    _this.handleFullScreenChange = _this.handleFullScreenChange.bind(_this);
	    _this.handleKeyDown = _this.handleKeyDown.bind(_this);
	    _this.handleFocus = _this.handleFocus.bind(_this);
	    _this.handleBlur = _this.handleBlur.bind(_this);
	    return _this;
	  }
	
	  _createClass(Player, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.handleResize();
	      window.addEventListener('resize', this.handleResize);
	
	      _fullscreen2.default.addEventListener(this.handleFullScreenChange);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      // Remove event listener
	      window.addEventListener('resize', this.handleResize);
	      _fullscreen2.default.removeEventListener(this.handleFullScreenChange);
	      if (this.controlsHideTimer) {
	        window.clearTimeout(this.controlsHideTimer);
	      }
	    }
	  }, {
	    key: 'getDefaultChildren',
	    value: function getDefaultChildren(props, fullProps) {
	      var _this2 = this;
	
	      return [_react2.default.createElement(_Video2.default, _extends({
	        ref: function ref(c) {
	          _this2.video = c;
	          _this2.manager.video = _this2.video;
	        },
	        key: 'video',
	        order: 0.0
	      }, fullProps)), _react2.default.createElement(_PosterImage2.default, _extends({
	        key: 'poster-image',
	        order: 1.0
	      }, props)), _react2.default.createElement(_LoadingSpinner2.default, _extends({
	        key: 'loading-spinner',
	        order: 2.0
	      }, props)), _react2.default.createElement(_Bezel2.default, _extends({
	        key: 'bezel',
	        order: 3.0
	      }, props)), _react2.default.createElement(_BigPlayButton2.default, _extends({
	        key: 'big-play-button',
	        order: 4.0
	      }, props)), _react2.default.createElement(_ControlBar2.default, _extends({
	        key: 'control-bar',
	        order: 5.0
	      }, props)), _react2.default.createElement(_Shortcut2.default, _extends({
	        key: 'shortcut',
	        order: 99.0
	      }, props))];
	    }
	  }, {
	    key: 'getChildren',
	    value: function getChildren(props) {
	      var propsWithoutChildren = _extends({}, props, {
	        children: null
	      });
	      var children = _react2.default.Children.toArray(this.props.children).filter(function (e) {
	        return !(0, _utils.isVideoChild)(e);
	      });
	      var defaultChildren = this.getDefaultChildren(propsWithoutChildren, props);
	      return (0, _utils.mergeAndSortChildren)(defaultChildren, children, propsWithoutChildren);
	    }
	  }, {
	    key: 'getStyle',
	    value: function getStyle() {
	      var fluid = this.props.fluid;
	
	      var _manager$getState = this.manager.getState(),
	          player = _manager$getState.player;
	
	      var style = {};
	      var width = void 0;
	      var height = void 0;
	      var aspectRatio = void 0;
	
	      // The aspect ratio is either used directly or to calculate width and height.
	      if (this.props.aspectRatio !== undefined && this.props.aspectRatio !== 'auto') {
	        // Use any aspectRatio that's been specifically set
	        aspectRatio = this.props.aspectRatio;
	      } else if (player.videoWidth) {
	        // Otherwise try to get the aspect ratio from the video metadata
	        aspectRatio = player.videoWidth + ':' + player.videoHeight;
	      } else {
	        // Or use a default. The video element's is 2:1, but 16:9 is more common.
	        aspectRatio = '16:9';
	      }
	
	      // Get the ratio as a decimal we can use to calculate dimensions
	      var ratioParts = aspectRatio.split(':');
	      var ratioMultiplier = ratioParts[1] / ratioParts[0];
	
	      if (this.props.width !== undefined) {
	        // Use any width that's been specifically set
	        width = this.props.width;
	      } else if (this.props.height !== undefined) {
	        // Or calulate the width from the aspect ratio if a height has been set
	        width = this.props.height / ratioMultiplier;
	      } else {
	        // Or use the video's metadata, or use the video el's default of 300
	        width = player.videoWidth || 400;
	      }
	
	      if (this.props.height !== undefined) {
	        // Use any height that's been specifically set
	        height = this.props.height;
	      } else {
	        // Otherwise calculate the height from the ratio and the width
	        height = width * ratioMultiplier;
	      }
	
	      if (fluid) {
	        style.paddingTop = ratioMultiplier * 100 + '%';
	      } else {
	        style.width = width + 'px';
	        style.height = height + 'px';
	      }
	
	      return style;
	    }
	
	    // get redux state
	    // { player, operation }
	
	  }, {
	    key: 'getState',
	    value: function getState() {
	      return this.manager.getState();
	    }
	
	    // get playback rate
	
	  }, {
	    key: 'play',
	
	
	    // play the video
	    value: function play() {
	      this.video.play();
	    }
	
	    // pause the video
	
	  }, {
	    key: 'pause',
	    value: function pause() {
	      this.video.pause();
	    }
	
	    // Change the video source and re-load the video:
	
	  }, {
	    key: 'load',
	    value: function load() {
	      this.video.load();
	    }
	
	    // Add a new text track to the video
	
	  }, {
	    key: 'addTextTrack',
	    value: function addTextTrack() {
	      var _video;
	
	      (_video = this.video).addTextTrack.apply(_video, arguments);
	    }
	
	    // Check if your browser can play different types of video:
	
	  }, {
	    key: 'canPlayType',
	    value: function canPlayType() {
	      var _video2;
	
	      (_video2 = this.video).canPlayType.apply(_video2, arguments);
	    }
	
	    // seek video by time
	
	  }, {
	    key: 'seek',
	    value: function seek(time) {
	      this.video.seek(time);
	    }
	
	    // jump forward x seconds
	
	  }, {
	    key: 'forward',
	    value: function forward(seconds) {
	      this.video.forward(seconds);
	    }
	
	    // jump back x seconds
	
	  }, {
	    key: 'replay',
	    value: function replay(seconds) {
	      this.video.replay(seconds);
	    }
	
	    // enter or exist full screen
	
	  }, {
	    key: 'toggleFullscreen',
	    value: function toggleFullscreen() {
	      this.video.toggleFullscreen();
	    }
	
	    // subscribe to player state change
	
	  }, {
	    key: 'subscribeToStateChange',
	    value: function subscribeToStateChange(listener) {
	      this.manager.subscribeToPlayerStateChange(listener);
	    }
	
	    // player resize
	
	  }, {
	    key: 'handleResize',
	    value: function handleResize() {}
	  }, {
	    key: 'handleFullScreenChange',
	    value: function handleFullScreenChange() {
	      this.actions.handleFullscreenChange(_fullscreen2.default.isFullscreen);
	    }
	  }, {
	    key: 'handleMouseDown',
	    value: function handleMouseDown() {
	      this.startControlsTimer();
	    }
	  }, {
	    key: 'handleMouseMove',
	    value: function handleMouseMove() {
	      this.startControlsTimer();
	    }
	  }, {
	    key: 'handleKeyDown',
	    value: function handleKeyDown() {
	      this.startControlsTimer();
	    }
	  }, {
	    key: 'startControlsTimer',
	    value: function startControlsTimer() {
	      var _this3 = this;
	
	      this.actions.userActivate(true);
	      clearTimeout(this.controlsHideTimer);
	      this.controlsHideTimer = setTimeout(function () {
	        _this3.actions.userActivate(false);
	      }, 3000);
	    }
	  }, {
	    key: 'handleStateChange',
	    value: function handleStateChange(state, prevState) {
	      if (state.isFullscreen !== prevState.isFullscreen) {
	        this.handleResize();
	      }
	      this.forceUpdate(); // re-render
	    }
	  }, {
	    key: 'handleFocus',
	    value: function handleFocus() {
	      this.actions.activate(true);
	    }
	  }, {
	    key: 'handleBlur',
	    value: function handleBlur() {
	      this.actions.activate(false);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;
	
	      var fluid = this.props.fluid;
	
	      var _manager$getState2 = this.manager.getState(),
	          player = _manager$getState2.player;
	
	      var paused = player.paused,
	          hasStarted = player.hasStarted,
	          waiting = player.waiting,
	          seeking = player.seeking,
	          isFullscreen = player.isFullscreen,
	          userActivity = player.userActivity;
	
	      var props = _extends({}, this.props, {
	        player: player,
	        actions: this.actions,
	        manager: this.manager,
	        store: this.manager.store,
	        video: this.video ? this.video.video : null
	      });
	      var children = this.getChildren(props);
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: (0, _classnames2.default)({
	            'video-react-controls-enabled': true,
	            'video-react-has-started': hasStarted,
	            'video-react-paused': paused,
	            'video-react-playing': !paused,
	            'video-react-waiting': waiting,
	            'video-react-seeking': seeking,
	            'video-react-fluid': fluid,
	            'video-react-fullscreen': isFullscreen,
	            'video-react-user-inactive': !userActivity,
	            'video-react-user-active': userActivity,
	            'video-react-workinghover': !browser.IS_IOS
	          }, 'video-react', this.props.className),
	          style: this.getStyle(),
	          ref: function ref(c) {
	            _this4.manager.rootElement = c;
	          },
	          onTouchStart: this.handleMouseDown,
	          onMouseDown: this.handleMouseDown,
	          onMouseMove: this.handleMouseMove,
	          onKeyDown: this.handleKeyDown,
	          onFocus: this.handleFocus,
	          onBlur: this.handleBlur,
	          tabIndex: '-1'
	        },
	        children
	      );
	    }
	  }, {
	    key: 'playbackRate',
	    get: function get() {
	      return this.video.playbackRate;
	    }
	
	    // set playback rate
	    // speed of video
	    ,
	    set: function set(rate) {
	      this.video.playbackRate = rate;
	    }
	  }, {
	    key: 'muted',
	    get: function get() {
	      return this.video.muted;
	    },
	    set: function set(val) {
	      this.video.muted = val;
	    }
	  }, {
	    key: 'volume',
	    get: function get() {
	      return this.video.volume;
	    },
	    set: function set(val) {
	      this.video.volume = val;
	    }
	
	    // video width
	
	  }, {
	    key: 'videoWidth',
	    get: function get() {
	      return this.video.videoWidth;
	    }
	
	    // video height
	
	  }, {
	    key: 'videoHeight',
	    get: function get() {
	      return this.video.videoHeight;
	    }
	  }]);
	
	  return Player;
	}(_react.Component);
	
	exports.default = Player;
	
	
	Player.propTypes = propTypes;
	Player.defaultProps = defaultProps;

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _PlaybackRateMenuButton = __webpack_require__(117);
	
	var _PlaybackRateMenuButton2 = _interopRequireDefault(_PlaybackRateMenuButton);
	
	var _utils = __webpack_require__(42);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PlaybackRate = function (_Component) {
	  _inherits(PlaybackRate, _Component);
	
	  function PlaybackRate(props, context) {
	    _classCallCheck(this, PlaybackRate);
	
	    var _this = _possibleConstructorReturn(this, (PlaybackRate.__proto__ || Object.getPrototypeOf(PlaybackRate)).call(this, props, context));
	
	    (0, _utils.deprecatedWarning)('PlaybackRate', 'PlaybackRateMenuButton');
	    return _this;
	  }
	
	  _createClass(PlaybackRate, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_PlaybackRateMenuButton2.default, this.props);
	    }
	  }]);
	
	  return PlaybackRate;
	}(_react.Component);
	
	exports.default = PlaybackRate;

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  children: _propTypes2.default.any
	};
	
	var Menu = function (_Component) {
	  _inherits(Menu, _Component);
	
	  function Menu(props, context) {
	    _classCallCheck(this, Menu);
	
	    var _this = _possibleConstructorReturn(this, (Menu.__proto__ || Object.getPrototypeOf(Menu)).call(this, props, context));
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(Menu, [{
	    key: 'handleClick',
	    value: function handleClick(event) {
	      event.preventDefault();
	      // event.stopPropagation();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        {
	          className: 'video-react-menu video-react-lock-showing',
	          role: 'presentation',
	          onClick: this.handleClick
	        },
	        _react2.default.createElement(
	          'ul',
	          { className: 'video-react-menu-content' },
	          this.props.children
	        )
	      );
	    }
	  }]);
	
	  return Menu;
	}(_react.Component);
	
	exports.default = Menu;
	
	
	Menu.propTypes = propTypes;

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Menu = __webpack_require__(326);
	
	var _Menu2 = _interopRequireDefault(_Menu);
	
	var _MenuItem = __webpack_require__(328);
	
	var _MenuItem2 = _interopRequireDefault(_MenuItem);
	
	var _ClickableComponent = __webpack_require__(177);
	
	var _ClickableComponent2 = _interopRequireDefault(_ClickableComponent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  inline: _propTypes2.default.bool,
	  items: _propTypes2.default.array,
	  className: _propTypes2.default.string,
	  onSelectItem: _propTypes2.default.func,
	  children: _propTypes2.default.any,
	  selectedIndex: _propTypes2.default.number
	};
	
	var MenuButton = function (_Component) {
	  _inherits(MenuButton, _Component);
	
	  function MenuButton(props, context) {
	    _classCallCheck(this, MenuButton);
	
	    var _this = _possibleConstructorReturn(this, (MenuButton.__proto__ || Object.getPrototypeOf(MenuButton)).call(this, props, context));
	
	    _this.state = {
	      active: false,
	      activateIndex: props.selectedIndex || 0
	    };
	
	    _this.commitSelection = _this.commitSelection.bind(_this);
	    _this.activateMenuItem = _this.activateMenuItem.bind(_this);
	    _this.handleClick = _this.handleClick.bind(_this);
	    _this.renderMenu = _this.renderMenu.bind(_this);
	    _this.handleFocus = _this.handleFocus.bind(_this);
	    _this.handleBlur = _this.handleBlur.bind(_this);
	    _this.handleUpArrow = _this.handleUpArrow.bind(_this);
	    _this.handleDownArrow = _this.handleDownArrow.bind(_this);
	    _this.handleEscape = _this.handleEscape.bind(_this);
	    _this.handleReturn = _this.handleReturn.bind(_this);
	    _this.handleTab = _this.handleTab.bind(_this);
	    _this.handleKeyPress = _this.handleKeyPress.bind(_this);
	    _this.handleSelectItem = _this.handleSelectItem.bind(_this);
	    _this.handleIndexChange = _this.handleIndexChange.bind(_this);
	    return _this;
	  }
	
	  // componentDidUpdate(prevProps) {
	  // }
	
	  _createClass(MenuButton, [{
	    key: 'commitSelection',
	    value: function commitSelection(index) {
	      this.setState({
	        activateIndex: index,
	        active: false
	      });
	      this.handleIndexChange(index);
	    }
	  }, {
	    key: 'activateMenuItem',
	    value: function activateMenuItem(index) {
	      this.setState({
	        activateIndex: index
	      });
	      this.handleIndexChange(index);
	    }
	  }, {
	    key: 'handleIndexChange',
	    value: function handleIndexChange(index) {
	      var onSelectItem = this.props.onSelectItem;
	
	      onSelectItem(index);
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick() {
	      this.setState({
	        active: !this.state.active
	      });
	    }
	  }, {
	    key: 'handleFocus',
	    value: function handleFocus() {
	      document.addEventListener('keydown', this.handleKeyPress);
	    }
	  }, {
	    key: 'handleBlur',
	    value: function handleBlur() {
	      this.setState({
	        active: false
	      });
	      document.removeEventListener('keydown', this.handleKeyPress);
	    }
	  }, {
	    key: 'handleUpArrow',
	    value: function handleUpArrow(e) {
	      var items = this.props.items;
	
	      if (this.state.active) {
	        e.preventDefault();
	        var newIndex = this.state.activateIndex - 1;
	        if (newIndex < 0) {
	          newIndex = items.length ? items.length - 1 : 0;
	        }
	        this.activateMenuItem(newIndex);
	      }
	    }
	  }, {
	    key: 'handleDownArrow',
	    value: function handleDownArrow(e) {
	      var items = this.props.items;
	
	      if (this.state.active) {
	        e.preventDefault();
	        var newIndex = this.state.activateIndex + 1;
	        if (newIndex >= items.length) {
	          newIndex = 0;
	        }
	        this.activateMenuItem(newIndex);
	      }
	    }
	  }, {
	    key: 'handleTab',
	    value: function handleTab(e) {
	      if (this.state.active) {
	        e.preventDefault();
	        this.commitSelection(this.state.activateIndex);
	      }
	    }
	  }, {
	    key: 'handleReturn',
	    value: function handleReturn(e) {
	      e.preventDefault();
	      if (this.state.active) {
	        this.commitSelection(this.state.activateIndex);
	      } else {
	        this.setState({
	          active: true
	        });
	      }
	    }
	  }, {
	    key: 'handleEscape',
	    value: function handleEscape() {
	      this.setState({
	        active: false,
	        activateIndex: 0
	      });
	    }
	  }, {
	    key: 'handleKeyPress',
	    value: function handleKeyPress(event) {
	      // Escape (27) key
	      if (event.which === 27) {
	        this.handleEscape(event);
	      } else if (event.which === 9) {
	        // Tab (9) key
	        this.handleTab(event);
	      } else if (event.which === 13) {
	        // Enter (13) key
	        this.handleReturn(event);
	      } else if (event.which === 38) {
	        // Up (38) key
	        this.handleUpArrow(event);
	      } else if (event.which === 40) {
	        // Down (40) key press
	        this.handleDownArrow(event);
	      }
	    }
	  }, {
	    key: 'handleSelectItem',
	    value: function handleSelectItem(i) {
	      this.commitSelection(i);
	    }
	  }, {
	    key: 'renderMenu',
	    value: function renderMenu() {
	      var _this2 = this;
	
	      if (!this.state.active) {
	        return null;
	      }
	
	      var items = this.props.items;
	
	      return _react2.default.createElement(
	        _Menu2.default,
	        null,
	        items.map(function (item, i) {
	          return _react2.default.createElement(_MenuItem2.default, {
	            item: item,
	            index: i,
	            onSelectItem: _this2.handleSelectItem,
	            activateIndex: _this2.state.activateIndex,
	            key: 'item-' + i++
	          });
	        })
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;
	
	      var _props = this.props,
	          inline = _props.inline,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        _ClickableComponent2.default,
	        {
	          className: (0, _classnames2.default)(className, {
	            'video-react-menu-button-inline': !!inline,
	            'video-react-menu-button-popup': !inline,
	            'video-react-menu-button-active': this.state.active
	          }, 'video-react-control video-react-button video-react-menu-button'),
	          role: 'presentation',
	          tabIndex: '0',
	          ref: function ref(c) {
	            _this3.menuButton = c;
	          },
	          onClick: this.handleClick,
	          onFocus: this.handleFocus,
	          onBlur: this.handleBlur
	        },
	        this.props.children,
	        this.renderMenu()
	      );
	    }
	  }]);
	
	  return MenuButton;
	}(_react.Component);
	
	exports.default = MenuButton;
	
	
	MenuButton.propTypes = propTypes;

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  item: _propTypes2.default.object,
	  index: _propTypes2.default.number,
	  activateIndex: _propTypes2.default.number,
	  onSelectItem: _propTypes2.default.func
	};
	
	var MenuItem = function (_Component) {
	  _inherits(MenuItem, _Component);
	
	  function MenuItem(props, context) {
	    _classCallCheck(this, MenuItem);
	
	    var _this = _possibleConstructorReturn(this, (MenuItem.__proto__ || Object.getPrototypeOf(MenuItem)).call(this, props, context));
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(MenuItem, [{
	    key: 'handleClick',
	    value: function handleClick() {
	      var _props = this.props,
	          index = _props.index,
	          onSelectItem = _props.onSelectItem;
	
	      onSelectItem(index);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          item = _props2.item,
	          index = _props2.index,
	          activateIndex = _props2.activateIndex;
	
	      return _react2.default.createElement(
	        'li',
	        {
	          className: (0, _classnames2.default)({
	            'video-react-menu-item': true,
	            'video-react-selected': index === activateIndex
	          }),
	          onClick: this.handleClick
	        },
	        item.label,
	        _react2.default.createElement('span', { className: 'video-react-control-text' })
	      );
	    }
	  }]);
	
	  return MenuItem;
	}(_react.Component);
	
	exports.default = MenuItem;
	
	
	MenuItem.propTypes = propTypes;

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  player: _propTypes2.default.object,
	  children: _propTypes2.default.any
	};
	
	var Popup = function (_Component) {
	  _inherits(Popup, _Component);
	
	  function Popup(props, context) {
	    _classCallCheck(this, Popup);
	
	    var _this = _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this, props, context));
	
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(Popup, [{
	    key: 'handleClick',
	    value: function handleClick(event) {
	      event.preventDefault();
	      // event.stopPropagation();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var children = this.props.children;
	
	      return _react2.default.createElement(
	        'div',
	        {
	          className: 'video-react-menu',
	          onClick: this.handleClick
	        },
	        _react2.default.createElement(
	          'div',
	          { className: 'video-react-menu-content' },
	          children
	        )
	      );
	    }
	  }]);
	
	  return Popup;
	}(_react.Component);
	
	exports.default = Popup;
	
	
	Popup.propTypes = propTypes;

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = PopupButton;
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _ClickableComponent = __webpack_require__(177);
	
	var _ClickableComponent2 = _interopRequireDefault(_ClickableComponent);
	
	var _Popup = __webpack_require__(329);
	
	var _Popup2 = _interopRequireDefault(_Popup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  inline: _propTypes2.default.bool,
	  onClick: _propTypes2.default.func.isRequired,
	  onFocus: _propTypes2.default.func,
	  onBlur: _propTypes2.default.func,
	  className: _propTypes2.default.string
	};
	
	var defaultProps = {
	  inline: true
	};
	
	function PopupButton(props) {
	  var inline = props.inline,
	      className = props.className;
	
	  var ps = _extends({}, props);
	  delete ps.children;
	  delete ps.inline;
	  delete ps.className;
	  return _react2.default.createElement(
	    _ClickableComponent2.default,
	    _extends({
	      className: (0, _classnames2.default)(className, {
	        'video-react-menu-button-inline': !!inline,
	        'video-react-menu-button-popup': !inline
	      }, 'video-react-control video-react-button video-react-menu-button')
	    }, ps),
	    _react2.default.createElement(_Popup2.default, props)
	  );
	}
	
	PopupButton.propTypes = propTypes;
	PopupButton.defaultProps = defaultProps;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Slider = __webpack_require__(116);
	
	var _Slider2 = _interopRequireDefault(_Slider);
	
	var _VolumeLevel = __webpack_require__(332);
	
	var _VolumeLevel2 = _interopRequireDefault(_VolumeLevel);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
	  actions: _propTypes2.default.object,
	  player: _propTypes2.default.object,
	  className: _propTypes2.default.string,
	  onFocus: _propTypes2.default.func,
	  onBlur: _propTypes2.default.func
	};
	
	var VolumeBar = function (_Component) {
	  _inherits(VolumeBar, _Component);
	
	  function VolumeBar(props, context) {
	    _classCallCheck(this, VolumeBar);
	
	    var _this = _possibleConstructorReturn(this, (VolumeBar.__proto__ || Object.getPrototypeOf(VolumeBar)).call(this, props, context));
	
	    _this.state = {
	      percentage: '0%'
	    };
	
	    _this.handleMouseMove = _this.handleMouseMove.bind(_this);
	    _this.handlePercentageChange = _this.handlePercentageChange.bind(_this);
	    _this.checkMuted = _this.checkMuted.bind(_this);
	    _this.getPercent = _this.getPercent.bind(_this);
	    _this.stepForward = _this.stepForward.bind(_this);
	    _this.stepBack = _this.stepBack.bind(_this);
	    _this.handleFocus = _this.handleFocus.bind(_this);
	    _this.handleBlur = _this.handleBlur.bind(_this);
	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }
	
	  _createClass(VolumeBar, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {}
	  }, {
	    key: 'getPercent',
	    value: function getPercent() {
	      var player = this.props.player;
	
	      if (player.muted) {
	        return 0;
	      }
	      return player.volume;
	    }
	  }, {
	    key: 'checkMuted',
	    value: function checkMuted() {
	      var _props = this.props,
	          player = _props.player,
	          actions = _props.actions;
	
	      if (player.muted) {
	        actions.mute(false);
	      }
	    }
	  }, {
	    key: 'handleMouseMove',
	    value: function handleMouseMove(event) {
	      var actions = this.props.actions;
	
	      this.checkMuted();
	      var distance = this.slider.calculateDistance(event);
	      actions.changeVolume(distance);
	    }
	  }, {
	    key: 'stepForward',
	    value: function stepForward() {
	      var _props2 = this.props,
	          player = _props2.player,
	          actions = _props2.actions;
	
	      this.checkMuted();
	      actions.changeVolume(player.volume + 0.1);
	    }
	  }, {
	    key: 'stepBack',
	    value: function stepBack() {
	      var _props3 = this.props,
	          player = _props3.player,
	          actions = _props3.actions;
	
	      this.checkMuted();
	      actions.changeVolume(player.volume - 0.1);
	    }
	  }, {
	    key: 'handleFocus',
	    value: function handleFocus(e) {
	      if (this.props.onFocus) {
	        this.props.onFocus(e);
	      }
	    }
	  }, {
	    key: 'handleBlur',
	    value: function handleBlur(e) {
	      if (this.props.onBlur) {
	        this.props.onBlur(e);
	      }
	    }
	  }, {
	    key: 'handlePercentageChange',
	    value: function handlePercentageChange(percentage) {
	      if (percentage !== this.state.percentage) {
	        this.setState({
	          percentage: percentage
	        });
	      }
	    }
	  }, {
	    key: 'handleClick',
	    value: function handleClick(event) {
	      event.stopPropagation();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props4 = this.props,
	          player = _props4.player,
	          className = _props4.className;
	
	
	      var volume = (player.volume * 100).toFixed(2);
	      return _react2.default.createElement(
	        _Slider2.default,
	        _extends({
	          ref: function ref(c) {
	            _this2.slider = c;
	          },
	          label: 'volume level',
	          valuenow: volume,
	          valuetext: volume + '%',
	          onMouseMove: this.handleMouseMove,
	          onFocus: this.handleFocus,
	          onBlur: this.handleBlur,
	          onClick: this.handleClick,
	          sliderActive: this.handleFocus,
	          sliderInactive: this.handleBlur,
	          getPercent: this.getPercent,
	          onPercentageChange: this.handlePercentageChange,
	          stepForward: this.stepForward,
	          stepBack: this.stepBack,
	          className: (0, _classnames2.default)(className, 'video-react-volume-bar video-react-slider-bar')
	        }, this.props),
	        _react2.default.createElement(_VolumeLevel2.default, this.props)
	      );
	    }
	  }]);
	
	  return VolumeBar;
	}(_react.Component);
	
	VolumeBar.propTypes = propTypes;
	
	exports.default = VolumeBar;

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(8);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(10);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var propTypes = {
	  percentage: _propTypes2.default.string,
	  vertical: _propTypes2.default.bool,
	  className: _propTypes2.default.string
	};
	
	var defaultProps = {
	  percentage: '100%',
	  vertical: false
	};
	
	function VolumeLevel(_ref) {
	  var percentage = _ref.percentage,
	      vertical = _ref.vertical,
	      className = _ref.className;
	
	  var style = {};
	  if (vertical) {
	    style.height = percentage;
	  } else {
	    style.width = percentage;
	  }
	
	  return _react2.default.createElement(
	    'div',
	    {
	      className: (0, _classnames2.default)(className, 'video-react-volume-level'),
	      style: style
	    },
	    _react2.default.createElement('span', { className: 'video-react-control-text' })
	  );
	}
	
	VolumeLevel.propTypes = propTypes;
	VolumeLevel.defaultProps = defaultProps;
	exports.default = VolumeLevel;

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function () {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var action = arguments[1];
	
	  return {
	    player: (0, _player2.default)(state.player, action),
	    operation: (0, _operation2.default)(state.operation, action)
	  };
	};
	
	var _player = __webpack_require__(335);
	
	var _player2 = _interopRequireDefault(_player);
	
	var _operation = __webpack_require__(334);
	
	var _operation2 = _interopRequireDefault(_operation);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = operation;
	
	var _player = __webpack_require__(115);
	
	var initialState = {
	  count: 0,
	  operation: {
	    action: '',
	    source: ''
	  }
	};
	
	function operation() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];
	
	  switch (action.type) {
	    case _player.OPERATE:
	      return _extends({}, state, {
	        count: state.count + 1,
	        operation: _extends({}, state.operation, action.operation)
	      });
	    default:
	      return state;
	  }
	}

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = video;
	
	var _video = __webpack_require__(174);
	
	var _player = __webpack_require__(115);
	
	var initialState = {
	  currentSrc: null,
	  duration: 0,
	  currentTime: 0,
	  seekingTime: 0,
	  buffered: null,
	  waiting: true,
	  seeking: false,
	  paused: true,
	  autoPaused: false,
	  ended: false,
	  playbackRate: 1,
	  muted: false,
	  volume: 1,
	  readyState: 0,
	  networkState: 0,
	  videoWidth: 0,
	  videoHeight: 0,
	  hasStarted: false,
	  userActivity: true,
	  isActive: false,
	  isFullscreen: false
	};
	
	function video() {
	  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	  var action = arguments[1];
	
	  switch (action.type) {
	    case _player.USER_ACTIVATE:
	      return _extends({}, state, {
	        userActivity: action.activity
	      });
	    case _player.PLAYER_ACTIVATE:
	      return _extends({}, state, {
	        isActive: action.activity
	      });
	    case _player.FULLSCREEN_CHANGE:
	      return _extends({}, state, {
	        isFullscreen: !!action.isFullscreen
	      });
	    case _video.SEEKING_TIME:
	      return _extends({}, state, {
	        seekingTime: action.time
	      });
	    case _video.END_SEEKING:
	      return _extends({}, state, {
	        seekingTime: 0
	      });
	    case _video.LOAD_START:
	      return _extends({}, state, action.videoProps, {
	        hasStarted: false,
	        ended: false
	      });
	    case _video.CAN_PLAY:
	      return _extends({}, state, action.videoProps, {
	        waiting: false
	      });
	    case _video.WAITING:
	      return _extends({}, state, action.videoProps, {
	        waiting: true
	      });
	    case _video.CAN_PLAY_THROUGH:
	    case _video.PLAYING:
	      return _extends({}, state, action.videoProps, {
	        waiting: false
	      });
	    case _video.PLAY:
	      return _extends({}, state, action.videoProps, {
	        ended: false,
	        paused: false,
	        autoPaused: false,
	        waiting: false,
	        hasStarted: true
	      });
	    case _video.PAUSE:
	      return _extends({}, state, action.videoProps, {
	        paused: true
	      });
	    case _video.END:
	      return _extends({}, state, action.videoProps, {
	        ended: true
	      });
	    case _video.SEEKING:
	      return _extends({}, state, action.videoProps, {
	        seeking: true
	      });
	    case _video.SEEKED:
	      return _extends({}, state, action.videoProps, {
	        seeking: false
	      });
	    case _video.DURATION_CHANGE:
	    case _video.TIME_UPDATE:
	    case _video.VOLUME_CHANGE:
	    case _video.PROGRESS_CHANGE:
	    case _video.RATE_CHANGE:
	    case _video.SUSPEND:
	    case _video.ABORT:
	    case _video.EMPTIED:
	    case _video.STALLED:
	    case _video.LOADED_META_DATA:
	    case _video.LOADED_DATA:
	    case _video.RESIZE:
	    case _video.ERROR:
	      return _extends({}, state, action.videoProps);
	    default:
	      return state;
	  }
	}

/***/ },
/* 336 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var USER_AGENT = typeof window !== 'undefined' && window.navigator ? window.navigator.userAgent : '';
	// const webkitVersionMap = (/AppleWebKit\/([\d.]+)/i).exec(USER_AGENT);
	// const appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;
	
	/*
	 * Device is an iPhone
	 *
	 * @type {Boolean}
	 * @constant
	 * @private
	 */
	var IS_IPAD = exports.IS_IPAD = /iPad/i.test(USER_AGENT);
	
	// The Facebook app's UIWebView identifies as both an iPhone and iPad, so
	// to identify iPhones, we need to exclude iPads.
	// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/
	var IS_IPHONE = exports.IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;
	var IS_IPOD = exports.IS_IPOD = /iPod/i.test(USER_AGENT);
	var IS_IOS = exports.IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
	__webpack_require__(518);
	
	__webpack_require__(686);
	
	__webpack_require__(338);
	
	if (global._babelPolyfill) {
	  throw new Error("only one instance of babel-polyfill is allowed");
	}
	global._babelPolyfill = true;
	
	var DEFINE_PROPERTY = "defineProperty";
	function define(O, key, value) {
	  O[key] || Object[DEFINE_PROPERTY](O, key, {
	    writable: true,
	    configurable: true,
	    value: value
	  });
	}
	
	define(String.prototype, "padLeft", "".padStart);
	define(String.prototype, "padRight", "".padEnd);
	
	"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
	  [][key] && define(Array, key, Function.call.bind([][key]));
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(347);
	module.exports = __webpack_require__(49).RegExp.escape;

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(12)
	  , isArray  = __webpack_require__(127)
	  , SPECIES  = __webpack_require__(13)('species');
	
	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(339);
	
	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject    = __webpack_require__(5)
	  , toPrimitive = __webpack_require__(45)
	  , NUMBER      = 'number';
	
	module.exports = function(hint){
	  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(63)
	  , gOPS    = __webpack_require__(103)
	  , pIE     = __webpack_require__(89);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(63)
	  , toIObject = __webpack_require__(32);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(345)
	  , invoke    = __webpack_require__(99)
	  , aFunction = __webpack_require__(28);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that = this
	      , aLen = arguments.length
	      , j = 0, k = 0, args;
	    if(!holder && !aLen)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
	    while(aLen > k)args.push(arguments[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(7);

/***/ },
/* 346 */
/***/ function(module, exports) {

	module.exports = function(regExp, replace){
	  var replacer = replace === Object(replace) ? function(part){
	    return replace[part];
	  } : replace;
	  return function(it){
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(1)
	  , $re     = __webpack_require__(346)(/[\\^$*+?.()|[\]{}]/g, '\\$&');
	
	$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(1);
	
	$export($export.P, 'Array', {copyWithin: __webpack_require__(200)});
	
	__webpack_require__(75)('copyWithin');

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $every  = __webpack_require__(43)(4);
	
	$export($export.P + $export.F * !__webpack_require__(41)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */){
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(1);
	
	$export($export.P, 'Array', {fill: __webpack_require__(119)});
	
	__webpack_require__(75)('fill');

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $filter = __webpack_require__(43)(2);
	
	$export($export.P + $export.F * !__webpack_require__(41)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */){
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(1)
	  , $find   = __webpack_require__(43)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(75)(KEY);

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(1)
	  , $find   = __webpack_require__(43)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(75)(KEY);

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export  = __webpack_require__(1)
	  , $forEach = __webpack_require__(43)(0)
	  , STRICT   = __webpack_require__(41)([].forEach, true);
	
	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */){
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(50)
	  , $export        = __webpack_require__(1)
	  , toObject       = __webpack_require__(21)
	  , call           = __webpack_require__(209)
	  , isArrayIter    = __webpack_require__(126)
	  , toLength       = __webpack_require__(19)
	  , createProperty = __webpack_require__(120)
	  , getIterFn      = __webpack_require__(143);
	
	$export($export.S + $export.F * !__webpack_require__(101)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(1)
	  , $indexOf      = __webpack_require__(95)(false)
	  , $native       = [].indexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(41)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? $native.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Array', {isArray: __webpack_require__(127)});

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)
	var $export   = __webpack_require__(1)
	  , toIObject = __webpack_require__(32)
	  , arrayJoin = [].join;
	
	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(88) != Object || !__webpack_require__(41)(arrayJoin)), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(1)
	  , toIObject     = __webpack_require__(32)
	  , toInteger     = __webpack_require__(55)
	  , toLength      = __webpack_require__(19)
	  , $native       = [].lastIndexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(41)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
	    // convert -0 to +0
	    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
	    if(index < 0)index = length + index;
	    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
	    return -1;
	  }
	});

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $map    = __webpack_require__(43)(1);
	
	$export($export.P + $export.F * !__webpack_require__(41)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */){
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export        = __webpack_require__(1)
	  , createProperty = __webpack_require__(120);
	
	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , aLen   = arguments.length
	      , result = new (typeof this == 'function' ? this : Array)(aLen);
	    while(aLen > index)createProperty(result, index, arguments[index++]);
	    result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $reduce = __webpack_require__(202);
	
	$export($export.P + $export.F * !__webpack_require__(41)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $reduce = __webpack_require__(202);
	
	$export($export.P + $export.F * !__webpack_require__(41)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export    = __webpack_require__(1)
	  , html       = __webpack_require__(124)
	  , cof        = __webpack_require__(39)
	  , toIndex    = __webpack_require__(66)
	  , toLength   = __webpack_require__(19)
	  , arraySlice = [].slice;
	
	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(9)(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $some   = __webpack_require__(43)(3);
	
	$export($export.P + $export.F * !__webpack_require__(41)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */){
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(1)
	  , aFunction = __webpack_require__(28)
	  , toObject  = __webpack_require__(21)
	  , fails     = __webpack_require__(9)
	  , $sort     = [].sort
	  , test      = [1, 2, 3];
	
	$export($export.P + $export.F * (fails(function(){
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function(){
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(41)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn){
	    return comparefn === undefined
	      ? $sort.call(toObject(this))
	      : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(65)('Array');

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	var $export = __webpack_require__(1)
	  , fails   = __webpack_require__(9)
	  , getTime = Date.prototype.getTime;
	
	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};
	
	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export     = __webpack_require__(1)
	  , toObject    = __webpack_require__(21)
	  , toPrimitive = __webpack_require__(45);
	
	$export($export.P + $export.F * __webpack_require__(9)(function(){
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key){
	    var O  = toObject(this)
	      , pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	var TO_PRIMITIVE = __webpack_require__(13)('toPrimitive')
	  , proto        = Date.prototype;
	
	if(!(TO_PRIMITIVE in proto))__webpack_require__(29)(proto, TO_PRIMITIVE, __webpack_require__(341));

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	var DateProto    = Date.prototype
	  , INVALID_DATE = 'Invalid Date'
	  , TO_STRING    = 'toString'
	  , $toString    = DateProto[TO_STRING]
	  , getTime      = DateProto.getTime;
	if(new Date(NaN) + '' != INVALID_DATE){
	  __webpack_require__(30)(DateProto, TO_STRING, function toString(){
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(1);
	
	$export($export.P, 'Function', {bind: __webpack_require__(203)});

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var isObject       = __webpack_require__(12)
	  , getPrototypeOf = __webpack_require__(36)
	  , HAS_INSTANCE   = __webpack_require__(13)('hasInstance')
	  , FunctionProto  = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(15).f(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(15).f
	  , createDesc = __webpack_require__(54)
	  , has        = __webpack_require__(27)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';
	
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	
	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(14) && dP(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    try {
	      var that = this
	        , name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch(e){
	      return '';
	    }
	  }
	});

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(1)
	  , log1p   = __webpack_require__(211)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;
	
	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(1)
	  , $asinh  = Math.asinh;
	
	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}
	
	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(1)
	  , $atanh  = Math.atanh;
	
	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(1)
	  , sign    = __webpack_require__(131);
	
	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(1)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(1)
	  , $expm1  = __webpack_require__(130);
	
	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(1)
	  , sign      = __webpack_require__(131)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);
	
	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};
	
	
	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(1)
	  , abs     = Math.abs;
	
	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(1)
	  , $imul   = Math.imul;
	
	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {log1p: __webpack_require__(211)});

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {sign: __webpack_require__(131)});

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(1)
	  , expm1   = __webpack_require__(130)
	  , exp     = Math.exp;
	
	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(1)
	  , expm1   = __webpack_require__(130)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(7)
	  , has               = __webpack_require__(27)
	  , cof               = __webpack_require__(39)
	  , inheritIfRequired = __webpack_require__(125)
	  , toPrimitive       = __webpack_require__(45)
	  , fails             = __webpack_require__(9)
	  , gOPN              = __webpack_require__(62).f
	  , gOPD              = __webpack_require__(35).f
	  , dP                = __webpack_require__(15).f
	  , $trim             = __webpack_require__(79).trim
	  , NUMBER            = 'Number'
	  , $Number           = global[NUMBER]
	  , Base              = $Number
	  , proto             = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF        = cof(__webpack_require__(61)(proto)) == NUMBER
	  , TRIM              = 'trim' in String.prototype;
	
	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};
	
	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for(var keys = __webpack_require__(14) ? gOPN(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), j = 0, key; keys.length > j; j++){
	    if(has(Base, key = keys[j]) && !has($Number, key)){
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(30)(global, NUMBER, $Number);
	}

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(1)
	  , _isFinite = __webpack_require__(7).isFinite;
	
	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Number', {isInteger: __webpack_require__(208)});

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(1)
	  , isInteger = __webpack_require__(208)
	  , abs       = Math.abs;
	
	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(1)
	  , $parseFloat = __webpack_require__(218);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(1)
	  , $parseInt = __webpack_require__(219);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(1)
	  , toInteger    = __webpack_require__(55)
	  , aNumberValue = __webpack_require__(199)
	  , repeat       = __webpack_require__(138)
	  , $toFixed     = 1..toFixed
	  , floor        = Math.floor
	  , data         = [0, 0, 0, 0, 0, 0]
	  , ERROR        = 'Number.toFixed: incorrect invocation!'
	  , ZERO         = '0';
	
	var multiply = function(n, c){
	  var i  = -1
	    , c2 = c;
	  while(++i < 6){
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function(n){
	  var i = 6
	    , c = 0;
	  while(--i >= 0){
	    c += data[i];
	    data[i] = floor(c / n);
	    c = (c % n) * 1e7;
	  }
	};
	var numToString = function(){
	  var i = 6
	    , s = '';
	  while(--i >= 0){
	    if(s !== '' || i === 0 || data[i] !== 0){
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  } return s;
	};
	var pow = function(x, n, acc){
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function(x){
	  var n  = 0
	    , x2 = x;
	  while(x2 >= 4096){
	    n += 12;
	    x2 /= 4096;
	  }
	  while(x2 >= 2){
	    n  += 1;
	    x2 /= 2;
	  } return n;
	};
	
	$export($export.P + $export.F * (!!$toFixed && (
	  0.00008.toFixed(3) !== '0.000' ||
	  0.9.toFixed(0) !== '1' ||
	  1.255.toFixed(2) !== '1.25' ||
	  1000000000000000128..toFixed(0) !== '1000000000000000128'
	) || !__webpack_require__(9)(function(){
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits){
	    var x = aNumberValue(this, ERROR)
	      , f = toInteger(fractionDigits)
	      , s = ''
	      , m = ZERO
	      , e, z, j, k;
	    if(f < 0 || f > 20)throw RangeError(ERROR);
	    if(x != x)return 'NaN';
	    if(x <= -1e21 || x >= 1e21)return String(x);
	    if(x < 0){
	      s = '-';
	      x = -x;
	    }
	    if(x > 1e-21){
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if(e > 0){
	        multiply(0, z);
	        j = f;
	        while(j >= 7){
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while(j >= 23){
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if(f > 0){
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    } return m;
	  }
	});

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(1)
	  , $fails       = __webpack_require__(9)
	  , aNumberValue = __webpack_require__(199)
	  , $toPrecision = 1..toPrecision;
	
	$export($export.P + $export.F * ($fails(function(){
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function(){
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision){
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
	  }
	});

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(1);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(212)});

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(61)});

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(14), 'Object', {defineProperties: __webpack_require__(213)});

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(14), 'Object', {defineProperty: __webpack_require__(15).f});

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(12)
	  , meta     = __webpack_require__(53).onFreeze;
	
	__webpack_require__(44)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(32)
	  , $getOwnPropertyDescriptor = __webpack_require__(35).f;
	
	__webpack_require__(44)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(44)('getOwnPropertyNames', function(){
	  return __webpack_require__(214).f;
	});

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(21)
	  , $getPrototypeOf = __webpack_require__(36);
	
	__webpack_require__(44)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(12);
	
	__webpack_require__(44)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(12);
	
	__webpack_require__(44)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(12);
	
	__webpack_require__(44)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(1);
	$export($export.S, 'Object', {is: __webpack_require__(220)});

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(21)
	  , $keys    = __webpack_require__(63);
	
	__webpack_require__(44)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(12)
	  , meta     = __webpack_require__(53).onFreeze;
	
	__webpack_require__(44)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(12)
	  , meta     = __webpack_require__(53).onFreeze;
	
	__webpack_require__(44)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(1);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(133).set});

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(87)
	  , test    = {};
	test[__webpack_require__(13)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(30)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(1)
	  , $parseFloat = __webpack_require__(218);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(1)
	  , $parseInt = __webpack_require__(219);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(60)
	  , global             = __webpack_require__(7)
	  , ctx                = __webpack_require__(50)
	  , classof            = __webpack_require__(87)
	  , $export            = __webpack_require__(1)
	  , isObject           = __webpack_require__(12)
	  , aFunction          = __webpack_require__(28)
	  , anInstance         = __webpack_require__(59)
	  , forOf              = __webpack_require__(76)
	  , speciesConstructor = __webpack_require__(135)
	  , task               = __webpack_require__(140).set
	  , microtask          = __webpack_require__(132)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;
	
	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(13)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();
	
	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};
	
	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(64)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(78)($Promise, PROMISE);
	__webpack_require__(65)(PROMISE);
	Wrapper = __webpack_require__(49)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(101)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export   = __webpack_require__(1)
	  , aFunction = __webpack_require__(28)
	  , anObject  = __webpack_require__(5)
	  , rApply    = (__webpack_require__(7).Reflect || {}).apply
	  , fApply    = Function.apply;
	// MS Edge argumentsList argument is optional
	$export($export.S + $export.F * !__webpack_require__(9)(function(){
	  rApply(function(){});
	}), 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    var T = aFunction(target)
	      , L = anObject(argumentsList);
	    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
	  }
	});

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export    = __webpack_require__(1)
	  , create     = __webpack_require__(61)
	  , aFunction  = __webpack_require__(28)
	  , anObject   = __webpack_require__(5)
	  , isObject   = __webpack_require__(12)
	  , fails      = __webpack_require__(9)
	  , bind       = __webpack_require__(203)
	  , rConstruct = (__webpack_require__(7).Reflect || {}).construct;
	
	// MS Edge supports only 2 arguments and argumentsList argument is optional
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	var NEW_TARGET_BUG = fails(function(){
	  function F(){}
	  return !(rConstruct(function(){}, [], F) instanceof F);
	});
	var ARGS_BUG = !fails(function(){
	  rConstruct(function(){});
	});
	
	$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch(args.length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP          = __webpack_require__(15)
	  , $export     = __webpack_require__(1)
	  , anObject    = __webpack_require__(5)
	  , toPrimitive = __webpack_require__(45);
	
	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(9)(function(){
	  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(1)
	  , gOPD     = __webpack_require__(35).f
	  , anObject = __webpack_require__(5);
	
	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(1)
	  , anObject = __webpack_require__(5);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(128)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});
	
	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD     = __webpack_require__(35)
	  , $export  = __webpack_require__(1)
	  , anObject = __webpack_require__(5);
	
	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(1)
	  , getProto = __webpack_require__(36)
	  , anObject = __webpack_require__(5);
	
	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD           = __webpack_require__(35)
	  , getPrototypeOf = __webpack_require__(36)
	  , has            = __webpack_require__(27)
	  , $export        = __webpack_require__(1)
	  , isObject       = __webpack_require__(12)
	  , anObject       = __webpack_require__(5);
	
	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
	}
	
	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(1)
	  , anObject      = __webpack_require__(5)
	  , $isExtensible = Object.isExtensible;
	
	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(217)});

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(1)
	  , anObject           = __webpack_require__(5)
	  , $preventExtensions = Object.preventExtensions;
	
	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(1)
	  , setProto = __webpack_require__(133);
	
	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP             = __webpack_require__(15)
	  , gOPD           = __webpack_require__(35)
	  , getPrototypeOf = __webpack_require__(36)
	  , has            = __webpack_require__(27)
	  , $export        = __webpack_require__(1)
	  , createDesc     = __webpack_require__(54)
	  , anObject       = __webpack_require__(5)
	  , isObject       = __webpack_require__(12);
	
	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = gOPD.f(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = getPrototypeOf(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}
	
	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	var global            = __webpack_require__(7)
	  , inheritIfRequired = __webpack_require__(125)
	  , dP                = __webpack_require__(15).f
	  , gOPN              = __webpack_require__(62).f
	  , isRegExp          = __webpack_require__(100)
	  , $flags            = __webpack_require__(98)
	  , $RegExp           = global.RegExp
	  , Base              = $RegExp
	  , proto             = $RegExp.prototype
	  , re1               = /a/g
	  , re2               = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW       = new $RegExp(re1) !== re1;
	
	if(__webpack_require__(14) && (!CORRECT_NEW || __webpack_require__(9)(function(){
	  re2[__webpack_require__(13)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var tiRE = this instanceof $RegExp
	      , piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
	      : inheritIfRequired(CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
	      , tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function(key){
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  };
	  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(30)(global, 'RegExp', $RegExp);
	}
	
	__webpack_require__(65)('RegExp');

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(97)('match', 1, function(defined, MATCH, $match){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(97)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(97)('search', 1, function(defined, SEARCH, $search){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(97)('split', 2, function(defined, SPLIT, $split){
	  'use strict';
	  var isRegExp   = __webpack_require__(100)
	    , _split     = $split
	    , $push      = [].push
	    , $SPLIT     = 'split'
	    , LENGTH     = 'length'
	    , LAST_INDEX = 'lastIndex';
	  if(
	    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
	    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
	    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
	    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
	    ''[$SPLIT](/.?/)[LENGTH]
	  ){
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function(separator, limit){
	      var string = String(this);
	      if(separator === undefined && limit === 0)return [];
	      // If `separator` is not a regex, use native split
	      if(!isRegExp(separator))return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while(match = separatorCopy.exec(string)){
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if(lastIndex > lastLastIndex){
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
	            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
	          });
	          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if(output[LENGTH] >= splitLimit)break;
	        }
	        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if(lastLastIndex === string[LENGTH]){
	        if(lastLength || !separatorCopy.test(''))output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	  // Chakra, V8
	  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
	    $split = function(separator, limit){
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit){
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(224);
	var anObject    = __webpack_require__(5)
	  , $flags      = __webpack_require__(98)
	  , DESCRIPTORS = __webpack_require__(14)
	  , TO_STRING   = 'toString'
	  , $toString   = /./[TO_STRING];
	
	var define = function(fn){
	  __webpack_require__(30)(RegExp.prototype, TO_STRING, fn, true);
	};
	
	// 21.2.5.14 RegExp.prototype.toString()
	if(__webpack_require__(9)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
	  define(function toString(){
	    var R = anObject(this);
	    return '/'.concat(R.source, '/',
	      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	// FF44- RegExp#toString has a wrong name
	} else if($toString.name != TO_STRING){
	  define(function toString(){
	    return $toString.call(this);
	  });
	}

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)
	__webpack_require__(31)('anchor', function(createHTML){
	  return function anchor(name){
	    return createHTML(this, 'a', 'name', name);
	  }
	});

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()
	__webpack_require__(31)('big', function(createHTML){
	  return function big(){
	    return createHTML(this, 'big', '', '');
	  }
	});

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()
	__webpack_require__(31)('blink', function(createHTML){
	  return function blink(){
	    return createHTML(this, 'blink', '', '');
	  }
	});

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()
	__webpack_require__(31)('bold', function(createHTML){
	  return function bold(){
	    return createHTML(this, 'b', '', '');
	  }
	});

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $at     = __webpack_require__(136)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(1)
	  , toLength  = __webpack_require__(19)
	  , context   = __webpack_require__(137)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(123)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , endPosition = arguments.length > 1 ? arguments[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()
	__webpack_require__(31)('fixed', function(createHTML){
	  return function fixed(){
	    return createHTML(this, 'tt', '', '');
	  }
	});

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)
	__webpack_require__(31)('fontcolor', function(createHTML){
	  return function fontcolor(color){
	    return createHTML(this, 'font', 'color', color);
	  }
	});

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)
	__webpack_require__(31)('fontsize', function(createHTML){
	  return function fontsize(size){
	    return createHTML(this, 'font', 'size', size);
	  }
	});

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(1)
	  , toIndex        = __webpack_require__(66)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;
	
	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res  = []
	      , aLen = arguments.length
	      , i    = 0
	      , code;
	    while(aLen > i){
	      code = +arguments[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(1)
	  , context  = __webpack_require__(137)
	  , INCLUDES = 'includes';
	
	$export($export.P + $export.F * __webpack_require__(123)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()
	__webpack_require__(31)('italics', function(createHTML){
	  return function italics(){
	    return createHTML(this, 'i', '', '');
	  }
	});

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(136)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(129)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)
	__webpack_require__(31)('link', function(createHTML){
	  return function link(url){
	    return createHTML(this, 'a', 'href', url);
	  }
	});

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(1)
	  , toIObject = __webpack_require__(32)
	  , toLength  = __webpack_require__(19);
	
	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl  = toIObject(callSite.raw)
	      , len  = toLength(tpl.length)
	      , aLen = arguments.length
	      , res  = []
	      , i    = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < aLen)res.push(String(arguments[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1);
	
	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(138)
	});

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()
	__webpack_require__(31)('small', function(createHTML){
	  return function small(){
	    return createHTML(this, 'small', '', '');
	  }
	});

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(1)
	  , toLength    = __webpack_require__(19)
	  , context     = __webpack_require__(137)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(123)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()
	__webpack_require__(31)('strike', function(createHTML){
	  return function strike(){
	    return createHTML(this, 'strike', '', '');
	  }
	});

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()
	__webpack_require__(31)('sub', function(createHTML){
	  return function sub(){
	    return createHTML(this, 'sub', '', '');
	  }
	});

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()
	__webpack_require__(31)('sup', function(createHTML){
	  return function sup(){
	    return createHTML(this, 'sup', '', '');
	  }
	});

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(79)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(7)
	  , has            = __webpack_require__(27)
	  , DESCRIPTORS    = __webpack_require__(14)
	  , $export        = __webpack_require__(1)
	  , redefine       = __webpack_require__(30)
	  , META           = __webpack_require__(53).KEY
	  , $fails         = __webpack_require__(9)
	  , shared         = __webpack_require__(104)
	  , setToStringTag = __webpack_require__(78)
	  , uid            = __webpack_require__(67)
	  , wks            = __webpack_require__(13)
	  , wksExt         = __webpack_require__(222)
	  , wksDefine      = __webpack_require__(142)
	  , keyOf          = __webpack_require__(343)
	  , enumKeys       = __webpack_require__(342)
	  , isArray        = __webpack_require__(127)
	  , anObject       = __webpack_require__(5)
	  , toIObject      = __webpack_require__(32)
	  , toPrimitive    = __webpack_require__(45)
	  , createDesc     = __webpack_require__(54)
	  , _create        = __webpack_require__(61)
	  , gOPNExt        = __webpack_require__(214)
	  , $GOPD          = __webpack_require__(35)
	  , $DP            = __webpack_require__(15)
	  , $keys          = __webpack_require__(63)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(62).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(89).f  = $propertyIsEnumerable;
	  __webpack_require__(103).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(60)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(29)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(1)
	  , $typed       = __webpack_require__(105)
	  , buffer       = __webpack_require__(141)
	  , anObject     = __webpack_require__(5)
	  , toIndex      = __webpack_require__(66)
	  , toLength     = __webpack_require__(19)
	  , isObject     = __webpack_require__(12)
	  , ArrayBuffer  = __webpack_require__(7).ArrayBuffer
	  , speciesConstructor = __webpack_require__(135)
	  , $ArrayBuffer = buffer.ArrayBuffer
	  , $DataView    = buffer.DataView
	  , $isView      = $typed.ABV && ArrayBuffer.isView
	  , $slice       = $ArrayBuffer.prototype.slice
	  , VIEW         = $typed.VIEW
	  , ARRAY_BUFFER = 'ArrayBuffer';
	
	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});
	
	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it){
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});
	
	$export($export.P + $export.U + $export.F * __webpack_require__(9)(function(){
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end){
	    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
	    var len    = anObject(this).byteLength
	      , first  = toIndex(start, len)
	      , final  = toIndex(end === undefined ? len : end, len)
	      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
	      , viewS  = new $DataView(this)
	      , viewT  = new $DataView(result)
	      , index  = 0;
	    while(first < final){
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    } return result;
	  }
	});
	
	__webpack_require__(65)(ARRAY_BUFFER);

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1);
	$export($export.G + $export.W + $export.F * !__webpack_require__(105).ABV, {
	  DataView: __webpack_require__(141).DataView
	});

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Float32', 4, function(init){
	  return function Float32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Float64', 8, function(init){
	  return function Float64Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Int16', 2, function(init){
	  return function Int16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Int32', 4, function(init){
	  return function Int32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Int8', 1, function(init){
	  return function Int8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Uint16', 2, function(init){
	  return function Uint16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Uint32', 4, function(init){
	  return function Uint32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Uint8', 1, function(init){
	  return function Uint8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(52)('Uint8', 1, function(init){
	  return function Uint8ClampedArray(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(206);
	
	// 23.4 WeakSet Objects
	__webpack_require__(96)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes
	var $export   = __webpack_require__(1)
	  , $includes = __webpack_require__(95)(true);
	
	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	
	__webpack_require__(75)('includes');

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export   = __webpack_require__(1)
	  , microtask = __webpack_require__(132)()
	  , process   = __webpack_require__(7).process
	  , isNode    = __webpack_require__(39)(process) == 'process';
	
	$export($export.G, {
	  asap: function asap(fn){
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(1)
	  , cof     = __webpack_require__(39);
	
	$export($export.S, 'Error', {
	  isError: function isError(it){
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(1);
	
	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(205)('Map')});

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {
	  imulh: function imulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >> 16
	      , v1 = $v >> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(1);
	
	$export($export.S, 'Math', {
	  umulh: function umulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >>> 16
	      , v1 = $v >>> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(1)
	  , toObject        = __webpack_require__(21)
	  , aFunction       = __webpack_require__(28)
	  , $defineProperty = __webpack_require__(15);
	
	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(14) && $export($export.P + __webpack_require__(102), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter){
	    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(1)
	  , toObject        = __webpack_require__(21)
	  , aFunction       = __webpack_require__(28)
	  , $defineProperty = __webpack_require__(15);
	
	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(14) && $export($export.P + __webpack_require__(102), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter){
	    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(1)
	  , $entries = __webpack_require__(216)(true);
	
	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export        = __webpack_require__(1)
	  , ownKeys        = __webpack_require__(217)
	  , toIObject      = __webpack_require__(32)
	  , gOPD           = __webpack_require__(35)
	  , createProperty = __webpack_require__(120);
	
	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , getDesc = gOPD.f
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key;
	    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
	    return result;
	  }
	});

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(1)
	  , toObject                 = __webpack_require__(21)
	  , toPrimitive              = __webpack_require__(45)
	  , getPrototypeOf           = __webpack_require__(36)
	  , getOwnPropertyDescriptor = __webpack_require__(35).f;
	
	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(14) && $export($export.P + __webpack_require__(102), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.get;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(1)
	  , toObject                 = __webpack_require__(21)
	  , toPrimitive              = __webpack_require__(45)
	  , getPrototypeOf           = __webpack_require__(36)
	  , getOwnPropertyDescriptor = __webpack_require__(35).f;
	
	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(14) && $export($export.P + __webpack_require__(102), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.set;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(1)
	  , $values = __webpack_require__(216)(false);
	
	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable
	var $export     = __webpack_require__(1)
	  , global      = __webpack_require__(7)
	  , core        = __webpack_require__(49)
	  , microtask   = __webpack_require__(132)()
	  , OBSERVABLE  = __webpack_require__(13)('observable')
	  , aFunction   = __webpack_require__(28)
	  , anObject    = __webpack_require__(5)
	  , anInstance  = __webpack_require__(59)
	  , redefineAll = __webpack_require__(64)
	  , hide        = __webpack_require__(29)
	  , forOf       = __webpack_require__(76)
	  , RETURN      = forOf.RETURN;
	
	var getMethod = function(fn){
	  return fn == null ? undefined : aFunction(fn);
	};
	
	var cleanupSubscription = function(subscription){
	  var cleanup = subscription._c;
	  if(cleanup){
	    subscription._c = undefined;
	    cleanup();
	  }
	};
	
	var subscriptionClosed = function(subscription){
	  return subscription._o === undefined;
	};
	
	var closeSubscription = function(subscription){
	  if(!subscriptionClosed(subscription)){
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};
	
	var Subscription = function(observer, subscriber){
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup      = subscriber(observer)
	      , subscription = cleanup;
	    if(cleanup != null){
	      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
	      else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch(e){
	    observer.error(e);
	    return;
	  } if(subscriptionClosed(this))cleanupSubscription(this);
	};
	
	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe(){ closeSubscription(this); }
	});
	
	var SubscriptionObserver = function(subscription){
	  this._s = subscription;
	};
	
	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if(m)return m.call(observer, value);
	      } catch(e){
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value){
	    var subscription = this._s;
	    if(subscriptionClosed(subscription))throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if(!m)throw value;
	      value = m.call(observer, value);
	    } catch(e){
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    } cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch(e){
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      } cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});
	
	var $Observable = function Observable(subscriber){
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};
	
	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer){
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn){
	    var that = this;
	    return new (core.Promise || global.Promise)(function(resolve, reject){
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next : function(value){
	          try {
	            return fn(value);
	          } catch(e){
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});
	
	redefineAll($Observable, {
	  from: function from(x){
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if(method){
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function(observer){
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          try {
	            if(forOf(x, false, function(it){
	              observer.next(it);
	              if(done)return RETURN;
	            }) === RETURN)return;
	          } catch(e){
	            if(done)throw e;
	            observer.error(e);
	            return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  },
	  of: function of(){
	    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
	    return new (typeof this === 'function' ? this : $Observable)(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          for(var i = 0; i < items.length; ++i){
	            observer.next(items[i]);
	            if(done)return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  }
	});
	
	hide($Observable.prototype, OBSERVABLE, function(){ return this; });
	
	$export($export.G, {Observable: $Observable});
	
	__webpack_require__(65)('Observable');

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(51)
	  , anObject                  = __webpack_require__(5)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
	  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	}});

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(51)
	  , anObject               = __webpack_require__(5)
	  , toMetaKey              = metadata.key
	  , getOrCreateMetadataMap = metadata.map
	  , store                  = metadata.store;
	
	metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
	  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
	    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
	  if(metadataMap.size)return true;
	  var targetMetadata = store.get(target);
	  targetMetadata['delete'](targetKey);
	  return !!targetMetadata.size || store['delete'](target);
	}});

/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	var Set                     = __webpack_require__(225)
	  , from                    = __webpack_require__(201)
	  , metadata                = __webpack_require__(51)
	  , anObject                = __webpack_require__(5)
	  , getPrototypeOf          = __webpack_require__(36)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	var ordinaryMetadataKeys = function(O, P){
	  var oKeys  = ordinaryOwnMetadataKeys(O, P)
	    , parent = getPrototypeOf(O);
	  if(parent === null)return oKeys;
	  var pKeys  = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};
	
	metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
	  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(51)
	  , anObject               = __webpack_require__(5)
	  , getPrototypeOf         = __webpack_require__(36)
	  , ordinaryHasOwnMetadata = metadata.has
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	var ordinaryGetMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};
	
	metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                = __webpack_require__(51)
	  , anObject                = __webpack_require__(5)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
	  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(51)
	  , anObject               = __webpack_require__(5)
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(51)
	  , anObject               = __webpack_require__(5)
	  , getPrototypeOf         = __webpack_require__(36)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	var ordinaryHasMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};
	
	metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(51)
	  , anObject               = __webpack_require__(5)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(51)
	  , anObject                  = __webpack_require__(5)
	  , aFunction                 = __webpack_require__(28)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({metadata: function metadata(metadataKey, metadataValue){
	  return function decorator(target, targetKey){
	    ordinaryDefineOwnMetadata(
	      metadataKey, metadataValue,
	      (targetKey !== undefined ? anObject : aFunction)(target),
	      toMetaKey(targetKey)
	    );
	  };
	}});

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(1);
	
	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(205)('Set')});

/***/ },
/* 506 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(1)
	  , $at     = __webpack_require__(136)(true);
	
	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/
	var $export     = __webpack_require__(1)
	  , defined     = __webpack_require__(40)
	  , toLength    = __webpack_require__(19)
	  , isRegExp    = __webpack_require__(100)
	  , getFlags    = __webpack_require__(98)
	  , RegExpProto = RegExp.prototype;
	
	var $RegExpStringIterator = function(regexp, string){
	  this._r = regexp;
	  this._s = string;
	};
	
	__webpack_require__(128)($RegExpStringIterator, 'RegExp String', function next(){
	  var match = this._r.exec(this._s);
	  return {value: match, done: match === null};
	});
	
	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp){
	    defined(this);
	    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
	    var S     = String(this)
	      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
	      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(1)
	  , $pad    = __webpack_require__(221);
	
	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(1)
	  , $pad    = __webpack_require__(221);
	
	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(79)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(79)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 512 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(142)('asyncIterator');

/***/ },
/* 513 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(142)('observable');

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(1);
	
	$export($export.S, 'System', {global: __webpack_require__(7)});

/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(144)
	  , redefine      = __webpack_require__(30)
	  , global        = __webpack_require__(7)
	  , hide          = __webpack_require__(29)
	  , Iterators     = __webpack_require__(77)
	  , wks           = __webpack_require__(13)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1)
	  , $task   = __webpack_require__(140);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(7)
	  , $export    = __webpack_require__(1)
	  , invoke     = __webpack_require__(99)
	  , partial    = __webpack_require__(344)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(467);
	__webpack_require__(406);
	__webpack_require__(408);
	__webpack_require__(407);
	__webpack_require__(410);
	__webpack_require__(412);
	__webpack_require__(417);
	__webpack_require__(411);
	__webpack_require__(409);
	__webpack_require__(419);
	__webpack_require__(418);
	__webpack_require__(414);
	__webpack_require__(415);
	__webpack_require__(413);
	__webpack_require__(405);
	__webpack_require__(416);
	__webpack_require__(420);
	__webpack_require__(421);
	__webpack_require__(373);
	__webpack_require__(375);
	__webpack_require__(374);
	__webpack_require__(423);
	__webpack_require__(422);
	__webpack_require__(393);
	__webpack_require__(403);
	__webpack_require__(404);
	__webpack_require__(394);
	__webpack_require__(395);
	__webpack_require__(396);
	__webpack_require__(397);
	__webpack_require__(398);
	__webpack_require__(399);
	__webpack_require__(400);
	__webpack_require__(401);
	__webpack_require__(402);
	__webpack_require__(376);
	__webpack_require__(377);
	__webpack_require__(378);
	__webpack_require__(379);
	__webpack_require__(380);
	__webpack_require__(381);
	__webpack_require__(382);
	__webpack_require__(383);
	__webpack_require__(384);
	__webpack_require__(385);
	__webpack_require__(386);
	__webpack_require__(387);
	__webpack_require__(388);
	__webpack_require__(389);
	__webpack_require__(390);
	__webpack_require__(391);
	__webpack_require__(392);
	__webpack_require__(454);
	__webpack_require__(459);
	__webpack_require__(466);
	__webpack_require__(457);
	__webpack_require__(449);
	__webpack_require__(450);
	__webpack_require__(455);
	__webpack_require__(460);
	__webpack_require__(462);
	__webpack_require__(445);
	__webpack_require__(446);
	__webpack_require__(447);
	__webpack_require__(448);
	__webpack_require__(451);
	__webpack_require__(452);
	__webpack_require__(453);
	__webpack_require__(456);
	__webpack_require__(458);
	__webpack_require__(461);
	__webpack_require__(463);
	__webpack_require__(464);
	__webpack_require__(465);
	__webpack_require__(368);
	__webpack_require__(370);
	__webpack_require__(369);
	__webpack_require__(372);
	__webpack_require__(371);
	__webpack_require__(357);
	__webpack_require__(355);
	__webpack_require__(361);
	__webpack_require__(358);
	__webpack_require__(364);
	__webpack_require__(366);
	__webpack_require__(354);
	__webpack_require__(360);
	__webpack_require__(351);
	__webpack_require__(365);
	__webpack_require__(349);
	__webpack_require__(363);
	__webpack_require__(362);
	__webpack_require__(356);
	__webpack_require__(359);
	__webpack_require__(348);
	__webpack_require__(350);
	__webpack_require__(353);
	__webpack_require__(352);
	__webpack_require__(367);
	__webpack_require__(144);
	__webpack_require__(439);
	__webpack_require__(444);
	__webpack_require__(224);
	__webpack_require__(440);
	__webpack_require__(441);
	__webpack_require__(442);
	__webpack_require__(443);
	__webpack_require__(424);
	__webpack_require__(223);
	__webpack_require__(225);
	__webpack_require__(226);
	__webpack_require__(479);
	__webpack_require__(468);
	__webpack_require__(469);
	__webpack_require__(474);
	__webpack_require__(477);
	__webpack_require__(478);
	__webpack_require__(472);
	__webpack_require__(475);
	__webpack_require__(473);
	__webpack_require__(476);
	__webpack_require__(470);
	__webpack_require__(471);
	__webpack_require__(425);
	__webpack_require__(426);
	__webpack_require__(427);
	__webpack_require__(428);
	__webpack_require__(429);
	__webpack_require__(432);
	__webpack_require__(430);
	__webpack_require__(431);
	__webpack_require__(433);
	__webpack_require__(434);
	__webpack_require__(435);
	__webpack_require__(436);
	__webpack_require__(438);
	__webpack_require__(437);
	__webpack_require__(480);
	__webpack_require__(506);
	__webpack_require__(509);
	__webpack_require__(508);
	__webpack_require__(510);
	__webpack_require__(511);
	__webpack_require__(507);
	__webpack_require__(512);
	__webpack_require__(513);
	__webpack_require__(491);
	__webpack_require__(494);
	__webpack_require__(490);
	__webpack_require__(488);
	__webpack_require__(489);
	__webpack_require__(492);
	__webpack_require__(493);
	__webpack_require__(483);
	__webpack_require__(505);
	__webpack_require__(514);
	__webpack_require__(482);
	__webpack_require__(484);
	__webpack_require__(486);
	__webpack_require__(485);
	__webpack_require__(487);
	__webpack_require__(496);
	__webpack_require__(497);
	__webpack_require__(499);
	__webpack_require__(498);
	__webpack_require__(501);
	__webpack_require__(500);
	__webpack_require__(502);
	__webpack_require__(503);
	__webpack_require__(504);
	__webpack_require__(481);
	__webpack_require__(495);
	__webpack_require__(517);
	__webpack_require__(516);
	__webpack_require__(515);
	module.exports = __webpack_require__(49);

/***/ },
/* 519 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';
	
	exports = module.exports = supportsArgumentsClass ? supported : unsupported;
	
	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};
	
	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 520 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;
	
	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Based on code that is Copyright 2013-2015, Facebook, Inc.
	  All rights reserved.
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var canUseDOM = !!(
			typeof window !== 'undefined' &&
			window.document &&
			window.document.createElement
		);
	
		var ExecutionEnvironment = {
	
			canUseDOM: canUseDOM,
	
			canUseWorkers: typeof Worker !== 'undefined',
	
			canUseEventListeners:
				canUseDOM && !!(window.addEventListener || window.attachEvent),
	
			canUseViewport: canUseDOM && !!window.screen
	
		};
	
		if (true) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return ExecutionEnvironment;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module !== 'undefined' && module.exports) {
			module.exports = ExecutionEnvironment;
		} else {
			window.ExecutionEnvironment = ExecutionEnvironment;
		}
	
	}());


/***/ },
/* 522 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 523 */
522,
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(3);
	
	/**
	 * The CSSCore module specifies the API (and implements most of the methods)
	 * that should be used when dealing with the display of elements (via their
	 * CSS classes and visibility on screen. It is an API focused on mutating the
	 * display and not reading it as no logical state should be encoded in the
	 * display of elements.
	 */
	
	/* Slow implementation for browsers that don't natively support .matches() */
	function matchesSelector_SLOW(element, selector) {
	  var root = element;
	  while (root.parentNode) {
	    root = root.parentNode;
	  }
	
	  var all = root.querySelectorAll(selector);
	  return Array.prototype.indexOf.call(all, element) !== -1;
	}
	
	var CSSCore = {
	
	  /**
	   * Adds the class passed in to the element if it doesn't already have it.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  addClass: function addClass(element, className) {
	    !!/\s/.test(className) ?  true ? invariant(false, 'CSSCore.addClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : void 0;
	
	    if (className) {
	      if (element.classList) {
	        element.classList.add(className);
	      } else if (!CSSCore.hasClass(element, className)) {
	        element.className = element.className + ' ' + className;
	      }
	    }
	    return element;
	  },
	
	  /**
	   * Removes the class passed in from the element
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @return {DOMElement} the element passed in
	   */
	  removeClass: function removeClass(element, className) {
	    !!/\s/.test(className) ?  true ? invariant(false, 'CSSCore.removeClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : void 0;
	
	    if (className) {
	      if (element.classList) {
	        element.classList.remove(className);
	      } else if (CSSCore.hasClass(element, className)) {
	        element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ') // multiple spaces to one
	        .replace(/^\s*|\s*$/g, ''); // trim the ends
	      }
	    }
	    return element;
	  },
	
	  /**
	   * Helper to add or remove a class from an element based on a condition.
	   *
	   * @param {DOMElement} element the element to set the class on
	   * @param {string} className the CSS className
	   * @param {*} bool condition to whether to add or remove the class
	   * @return {DOMElement} the element passed in
	   */
	  conditionClass: function conditionClass(element, className, bool) {
	    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);
	  },
	
	  /**
	   * Tests whether the element has the class specified.
	   *
	   * @param {DOMNode|DOMWindow} element the element to check the class on
	   * @param {string} className the CSS className
	   * @return {boolean} true if the element has the class, false if not
	   */
	  hasClass: function hasClass(element, className) {
	    !!/\s/.test(className) ?  true ? invariant(false, 'CSS.hasClass takes only a single class name.') : invariant(false) : void 0;
	    if (element.classList) {
	      return !!className && element.classList.contains(className);
	    }
	    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
	  },
	
	  /**
	   * Tests whether the element matches the selector specified
	   *
	   * @param {DOMNode|DOMWindow} element the element that we are querying
	   * @param {string} selector the CSS selector
	   * @return {boolean} true if the element matches the selector, false if not
	   */
	  matchesSelector: function matchesSelector(element, selector) {
	    var matchesImpl = element.matches || element.webkitMatchesSelector || element.mozMatchesSelector || element.msMatchesSelector || function (s) {
	      return matchesSelector_SLOW(element, s);
	    };
	    return matchesImpl.call(element, selector);
	  }
	
	};
	
	module.exports = CSSCore;

/***/ },
/* 525 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(525);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(535);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(3);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  true ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ?  true ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ?  true ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ?  true ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(18);
	
	var createArrayFromMixed = __webpack_require__(528);
	var getMarkupWrap = __webpack_require__(530);
	var invariant = __webpack_require__(3);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  true ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  true ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(18);
	
	var invariant = __webpack_require__(3);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  true ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;

/***/ },
/* 531 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 532 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(532);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 534 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(534);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 536 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(18);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var performance = __webpack_require__(537);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	var require;var require;(function(f){if(true){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Hls = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;
	
	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;
	
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;
	
	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;
	
	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};
	
	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;
	
	  if (!this._events)
	    this._events = {};
	
	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }
	
	  handler = this._events[type];
	
	  if (isUndefined(handler))
	    return false;
	
	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }
	
	  return true;
	};
	
	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events)
	    this._events = {};
	
	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);
	
	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];
	
	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }
	
	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.on = EventEmitter.prototype.addListener;
	
	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  var fired = false;
	
	  function g() {
	    this.removeListener(type, g);
	
	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }
	
	  g.listener = listener;
	  this.on(type, g);
	
	  return this;
	};
	
	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events || !this._events[type])
	    return this;
	
	  list = this._events[type];
	  length = list.length;
	  position = -1;
	
	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	
	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }
	
	    if (position < 0)
	      return this;
	
	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }
	
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;
	
	  if (!this._events)
	    return this;
	
	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }
	
	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }
	
	  listeners = this._events[type];
	
	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];
	
	  return this;
	};
	
	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};
	
	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];
	
	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};
	
	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	
	},{}],2:[function(_dereq_,module,exports){
	// see https://tools.ietf.org/html/rfc1808
	
	/* jshint ignore:start */
	(function(root) { 
	/* jshint ignore:end */
	
	  var URL_REGEX = /^((?:[^\/;?#]+:)?)(\/\/[^\/\;?#]*)?(.*?)??(;.*?)?(\?.*?)?(#.*?)?$/;
	  var FIRST_SEGMENT_REGEX = /^([^\/;?#]*)(.*)$/;
	  var SLASH_DOT_REGEX = /(?:\/|^)\.(?=\/)/g;
	  var SLASH_DOT_DOT_REGEX = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g;
	
	  var URLToolkit = { // jshint ignore:line
	    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //
	    // E.g
	    // With opts.alwaysNormalize = false (default, spec compliant)
	    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g
	    // With opts.alwaysNormalize = true (default, not spec compliant)
	    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g
	    buildAbsoluteURL: function(baseURL, relativeURL, opts) {
	      opts = opts || {};
	      // remove any remaining space and CRLF
	      baseURL = baseURL.trim();
	      relativeURL = relativeURL.trim();
	      if (!relativeURL) {
	        // 2a) If the embedded URL is entirely empty, it inherits the
	        // entire base URL (i.e., is set equal to the base URL)
	        // and we are done.
	        if (!opts.alwaysNormalize) {
	          return baseURL;
	        }
	        var basePartsForNormalise = this.parseURL(baseURL);
	        if (!baseParts) {
	          throw new Error('Error trying to parse base URL.');
	        }
	        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);
	        return URLToolkit.buildURLFromParts(basePartsForNormalise);
	      }
	      var relativeParts = this.parseURL(relativeURL);
	      if (!relativeParts) {
	        throw new Error('Error trying to parse relative URL.');
	      }
	      if (relativeParts.scheme) {
	        // 2b) If the embedded URL starts with a scheme name, it is
	        // interpreted as an absolute URL and we are done.
	        if (!opts.alwaysNormalize) {
	          return relativeURL;
	        }
	        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);
	        return URLToolkit.buildURLFromParts(relativeParts);
	      }
	      var baseParts = this.parseURL(baseURL);
	      if (!baseParts) {
	        throw new Error('Error trying to parse base URL.');
	      }
	      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {
	        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc
	        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'
	        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);
	        baseParts.netLoc = pathParts[1];
	        baseParts.path = pathParts[2];
	      }
	      if (baseParts.netLoc && !baseParts.path) {
	        baseParts.path = '/';
	      }
	      var builtParts = {
	        // 2c) Otherwise, the embedded URL inherits the scheme of
	        // the base URL.
	        scheme: baseParts.scheme,
	        netLoc: relativeParts.netLoc,
	        path: null,
	        params: relativeParts.params,
	        query: relativeParts.query,
	        fragment: relativeParts.fragment
	      };
	      if (!relativeParts.netLoc) {
	        // 3) If the embedded URL's <net_loc> is non-empty, we skip to
	        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>
	        // (if any) of the base URL.
	        builtParts.netLoc = baseParts.netLoc;
	        // 4) If the embedded URL path is preceded by a slash "/", the
	        // path is not relative and we skip to Step 7.
	        if (relativeParts.path[0] !== '/') {
	          if (!relativeParts.path) {
	            // 5) If the embedded URL path is empty (and not preceded by a
	            // slash), then the embedded URL inherits the base URL path
	            builtParts.path = baseParts.path;
	            // 5a) if the embedded URL's <params> is non-empty, we skip to
	            // step 7; otherwise, it inherits the <params> of the base
	            // URL (if any) and
	            if (!relativeParts.params) {
	              builtParts.params = baseParts.params;
	              // 5b) if the embedded URL's <query> is non-empty, we skip to
	              // step 7; otherwise, it inherits the <query> of the base
	              // URL (if any) and we skip to step 7.
	              if (!relativeParts.query) {
	                builtParts.query = baseParts.query;
	              }
	            }
	          } else {
	            // 6) The last segment of the base URL's path (anything
	            // following the rightmost slash "/", or the entire path if no
	            // slash is present) is removed and the embedded URL's path is
	            // appended in its place.
	            var baseURLPath = baseParts.path;
	            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;
	            builtParts.path = URLToolkit.normalizePath(newPath);
	          }
	        }
	      }
	      if (builtParts.path === null) {
	        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;
	      }
	      return URLToolkit.buildURLFromParts(builtParts);
	    },
	    parseURL: function(url) {
	      var parts = URL_REGEX.exec(url);
	      if (!parts) {
	        return null;
	      }
	      return {
	        scheme: parts[1] || '',
	        netLoc: parts[2] || '',
	        path: parts[3] || '',
	        params: parts[4] || '',
	        query: parts[5] || '',
	        fragment: parts[6] || ''
	      };
	    },
	    normalizePath: function(path) {
	      // The following operations are
	      // then applied, in order, to the new path:
	      // 6a) All occurrences of "./", where "." is a complete path
	      // segment, are removed.
	      // 6b) If the path ends with "." as a complete path segment,
	      // that "." is removed.
	      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');
	      // 6c) All occurrences of "<segment>/../", where <segment> is a
	      // complete path segment not equal to "..", are removed.
	      // Removal of these path segments is performed iteratively,
	      // removing the leftmost matching pattern on each iteration,
	      // until no matching pattern remains.
	      // 6d) If the path ends with "<segment>/..", where <segment> is a
	      // complete path segment not equal to "..", that
	      // "<segment>/.." is removed.
	      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line
	      return path.split('').reverse().join('');
	    },
	    buildURLFromParts: function(parts) {
	      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;
	    }
	  };
	
	/* jshint ignore:start */
	  if(typeof exports === 'object' && typeof module === 'object')
	    module.exports = URLToolkit;
	  else if(typeof define === 'function' && define.amd)
	    define([], function() { return URLToolkit; });
	  else if(typeof exports === 'object')
	    exports["URLToolkit"] = URLToolkit;
	  else
	    root["URLToolkit"] = URLToolkit;
	})(this);
	/* jshint ignore:end */
	
	},{}],3:[function(_dereq_,module,exports){
	var bundleFn = arguments[3];
	var sources = arguments[4];
	var cache = arguments[5];
	
	var stringify = JSON.stringify;
	
	module.exports = function (fn, options) {
	    var wkey;
	    var cacheKeys = Object.keys(cache);
	
	    for (var i = 0, l = cacheKeys.length; i < l; i++) {
	        var key = cacheKeys[i];
	        var exp = cache[key].exports;
	        // Using babel as a transpiler to use esmodule, the export will always
	        // be an object with the default export as a property of it. To ensure
	        // the existing api and babel esmodule exports are both supported we
	        // check for both
	        if (exp === fn || exp && exp.default === fn) {
	            wkey = key;
	            break;
	        }
	    }
	
	    if (!wkey) {
	        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
	        var wcache = {};
	        for (var i = 0, l = cacheKeys.length; i < l; i++) {
	            var key = cacheKeys[i];
	            wcache[key] = key;
	        }
	        sources[wkey] = [
	            Function(['require','module','exports'], '(' + fn + ')(self)'),
	            wcache
	        ];
	    }
	    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
	
	    var scache = {}; scache[wkey] = wkey;
	    sources[skey] = [
	        Function(['require'], (
	            // try to call default if defined to also support babel esmodule
	            // exports
	            'var f = require(' + stringify(wkey) + ');' +
	            '(f.default ? f.default : f)(self);'
	        )),
	        scache
	    ];
	
	    var workerSources = {};
	    resolveSources(skey);
	
	    function resolveSources(key) {
	        workerSources[key] = true;
	
	        for (var depPath in sources[key][1]) {
	            var depKey = sources[key][1][depPath];
	            if (!workerSources[depKey]) {
	                resolveSources(depKey);
	            }
	        }
	    }
	
	    var src = '(' + bundleFn + ')({'
	        + Object.keys(workerSources).map(function (key) {
	            return stringify(key) + ':['
	                + sources[key][0]
	                + ',' + stringify(sources[key][1]) + ']'
	            ;
	        }).join(',')
	        + '},{},[' + stringify(skey) + '])'
	    ;
	
	    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;
	
	    var blob = new Blob([src], { type: 'text/javascript' });
	    if (options && options.bare) { return blob; }
	    var workerUrl = URL.createObjectURL(blob);
	    var worker = new Worker(workerUrl);
	    worker.objectURL = workerUrl;
	    return worker;
	};
	
	},{}],4:[function(_dereq_,module,exports){
	/**
	 * HLS config
	 */
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	      value: true
	});
	exports.hlsDefaultConfig = undefined;
	
	var _abrController = _dereq_(5);
	
	var _abrController2 = _interopRequireDefault(_abrController);
	
	var _bufferController = _dereq_(8);
	
	var _bufferController2 = _interopRequireDefault(_bufferController);
	
	var _capLevelController = _dereq_(9);
	
	var _capLevelController2 = _interopRequireDefault(_capLevelController);
	
	var _fpsController = _dereq_(10);
	
	var _fpsController2 = _interopRequireDefault(_fpsController);
	
	var _xhrLoader = _dereq_(55);
	
	var _xhrLoader2 = _interopRequireDefault(_xhrLoader);
	
	var _audioTrackController = _dereq_(7);
	
	var _audioTrackController2 = _interopRequireDefault(_audioTrackController);
	
	var _audioStreamController = _dereq_(6);
	
	var _audioStreamController2 = _interopRequireDefault(_audioStreamController);
	
	var _cues = _dereq_(47);
	
	var _cues2 = _interopRequireDefault(_cues);
	
	var _timelineController = _dereq_(15);
	
	var _timelineController2 = _interopRequireDefault(_timelineController);
	
	var _subtitleTrackController = _dereq_(14);
	
	var _subtitleTrackController2 = _interopRequireDefault(_subtitleTrackController);
	
	var _subtitleStreamController = _dereq_(13);
	
	var _subtitleStreamController2 = _interopRequireDefault(_subtitleStreamController);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	//#endif
	
	//#endif
	
	//#if subtitle
	
	//import FetchLoader from './utils/fetch-loader';
	//#if altaudio
	var hlsDefaultConfig = exports.hlsDefaultConfig = {
	      autoStartLoad: true, // used by stream-controller
	      startPosition: -1, // used by stream-controller
	      defaultAudioCodec: undefined, // used by stream-controller
	      debug: false, // used by logger
	      capLevelOnFPSDrop: false, // used by fps-controller
	      capLevelToPlayerSize: false, // used by cap-level-controller
	      initialLiveManifestSize: 1, // used by stream-controller
	      maxBufferLength: 30, // used by stream-controller
	      maxBufferSize: 60 * 1000 * 1000, // used by stream-controller
	      maxBufferHole: 0.5, // used by stream-controller
	      maxSeekHole: 2, // used by stream-controller
	      lowBufferWatchdogPeriod: 0.5, // used by stream-controller
	      highBufferWatchdogPeriod: 3, // used by stream-controller
	      nudgeOffset: 0.1, // used by stream-controller
	      nudgeMaxRetry: 3, // used by stream-controller
	      maxFragLookUpTolerance: 0.2, // used by stream-controller
	      liveSyncDurationCount: 3, // used by stream-controller
	      liveMaxLatencyDurationCount: Infinity, // used by stream-controller
	      liveSyncDuration: undefined, // used by stream-controller
	      liveMaxLatencyDuration: undefined, // used by stream-controller
	      maxMaxBufferLength: 600, // used by stream-controller
	      enableWorker: true, // used by demuxer
	      enableSoftwareAES: true, // used by decrypter
	      manifestLoadingTimeOut: 10000, // used by playlist-loader
	      manifestLoadingMaxRetry: 1, // used by playlist-loader
	      manifestLoadingRetryDelay: 1000, // used by playlist-loader
	      manifestLoadingMaxRetryTimeout: 64000, // used by playlist-loader
	      startLevel: undefined, // used by level-controller
	      levelLoadingTimeOut: 10000, // used by playlist-loader
	      levelLoadingMaxRetry: 4, // used by playlist-loader
	      levelLoadingRetryDelay: 1000, // used by playlist-loader
	      levelLoadingMaxRetryTimeout: 64000, // used by playlist-loader
	      fragLoadingTimeOut: 20000, // used by fragment-loader
	      fragLoadingMaxRetry: 6, // used by fragment-loader
	      fragLoadingRetryDelay: 1000, // used by fragment-loader
	      fragLoadingMaxRetryTimeout: 64000, // used by fragment-loader
	      fragLoadingLoopThreshold: 3, // used by stream-controller
	      startFragPrefetch: false, // used by stream-controller
	      fpsDroppedMonitoringPeriod: 5000, // used by fps-controller
	      fpsDroppedMonitoringThreshold: 0.2, // used by fps-controller
	      appendErrorMaxRetry: 3, // used by buffer-controller
	      loader: _xhrLoader2.default,
	      //loader: FetchLoader,
	      fLoader: undefined,
	      pLoader: undefined,
	      xhrSetup: undefined,
	      fetchSetup: undefined,
	      abrController: _abrController2.default,
	      bufferController: _bufferController2.default,
	      capLevelController: _capLevelController2.default,
	      fpsController: _fpsController2.default,
	      //#if altaudio
	      audioStreamController: _audioStreamController2.default,
	      audioTrackController: _audioTrackController2.default,
	      //#endif
	      //#if subtitle
	      subtitleStreamController: _subtitleStreamController2.default,
	      subtitleTrackController: _subtitleTrackController2.default,
	      timelineController: _timelineController2.default,
	      cueHandler: _cues2.default,
	      enableCEA708Captions: true, // used by timeline-controller
	      enableWebVTT: true, // used by timeline-controller
	      captionsTextTrack1Label: 'English', // used by timeline-controller
	      captionsTextTrack1LanguageCode: 'en', // used by timeline-controller
	      captionsTextTrack2Label: 'Spanish', // used by timeline-controller
	      captionsTextTrack2LanguageCode: 'es', // used by timeline-controller
	      //#endif
	      stretchShortVideoTrack: false, // used by mp4-remuxer
	      forceKeyFrameOnDiscontinuity: true, // used by ts-demuxer
	      abrEwmaFastLive: 3, // used by abr-controller
	      abrEwmaSlowLive: 9, // used by abr-controller
	      abrEwmaFastVoD: 3, // used by abr-controller
	      abrEwmaSlowVoD: 9, // used by abr-controller
	      abrEwmaDefaultEstimate: 5e5, // 500 kbps  // used by abr-controller
	      abrBandWidthFactor: 0.95, // used by abr-controller
	      abrBandWidthUpFactor: 0.7, // used by abr-controller
	      abrMaxWithRealBitrate: false, // used by abr-controller
	      maxStarvationDelay: 4, // used by abr-controller
	      maxLoadingDelay: 4, // used by abr-controller
	      minAutoBitrate: 0 // used by hls
	};
	
	},{"10":10,"13":13,"14":14,"15":15,"47":47,"5":5,"55":55,"6":6,"7":7,"8":8,"9":9}],5:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _bufferHelper = _dereq_(34);
	
	var _bufferHelper2 = _interopRequireDefault(_bufferHelper);
	
	var _errors = _dereq_(30);
	
	var _logger = _dereq_(50);
	
	var _ewmaBandwidthEstimator = _dereq_(48);
	
	var _ewmaBandwidthEstimator2 = _interopRequireDefault(_ewmaBandwidthEstimator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * simple ABR Controller
	compute next level based on last fragment bw heuristics
	implement an abandon rules triggered if we have less than 2 frag buffered and if computed bw shows that we risk buffer stalling
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */
	
	var AbrController = function (_EventHandler) {
	  _inherits(AbrController, _EventHandler);
	
	  function AbrController(hls) {
	    _classCallCheck(this, AbrController);
	
	    var _this = _possibleConstructorReturn(this, (AbrController.__proto__ || Object.getPrototypeOf(AbrController)).call(this, hls, _events2.default.FRAG_LOADING, _events2.default.FRAG_LOADED, _events2.default.FRAG_BUFFERED, _events2.default.ERROR));
	
	    _this.lastLoadedFragLevel = 0;
	    _this._nextAutoLevel = -1;
	    _this.hls = hls;
	    _this.onCheck = _this._abandonRulesCheck.bind(_this);
	    return _this;
	  }
	
	  _createClass(AbrController, [{
	    key: 'destroy',
	    value: function destroy() {
	      this.clearTimer();
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	  }, {
	    key: 'onFragLoading',
	    value: function onFragLoading(data) {
	      var frag = data.frag;
	      if (frag.type === 'main') {
	        if (!this.timer) {
	          this.timer = setInterval(this.onCheck, 100);
	        }
	        // lazy init of bw Estimator, rationale is that we use different params for Live/VoD
	        // so we need to wait for stream manifest / playlist type to instantiate it.
	        if (!this._bwEstimator) {
	          var hls = this.hls,
	              level = data.frag.level,
	              isLive = hls.levels[level].details.live,
	              config = hls.config,
	              ewmaFast = void 0,
	              ewmaSlow = void 0;
	
	          if (isLive) {
	            ewmaFast = config.abrEwmaFastLive;
	            ewmaSlow = config.abrEwmaSlowLive;
	          } else {
	            ewmaFast = config.abrEwmaFastVoD;
	            ewmaSlow = config.abrEwmaSlowVoD;
	          }
	          this._bwEstimator = new _ewmaBandwidthEstimator2.default(hls, ewmaSlow, ewmaFast, config.abrEwmaDefaultEstimate);
	        }
	        this.fragCurrent = frag;
	      }
	    }
	  }, {
	    key: '_abandonRulesCheck',
	    value: function _abandonRulesCheck() {
	      /*
	        monitor fragment retrieval time...
	        we compute expected time of arrival of the complete fragment.
	        we compare it to expected time of buffer starvation
	      */
	      var hls = this.hls,
	          v = hls.media,
	          frag = this.fragCurrent,
	          loader = frag.loader,
	          minAutoLevel = hls.minAutoLevel;
	
	      // if loader has been destroyed or loading has been aborted, stop timer and return
	      if (!loader || loader.stats && loader.stats.aborted) {
	        _logger.logger.warn('frag loader destroy or aborted, disarm abandonRules');
	        this.clearTimer();
	        return;
	      }
	      var stats = loader.stats;
	      /* only monitor frag retrieval time if
	      (video not paused OR first fragment being loaded(ready state === HAVE_NOTHING = 0)) AND autoswitching enabled AND not lowest level (=> means that we have several levels) */
	      if (v && (!v.paused && v.playbackRate !== 0 || !v.readyState) && frag.autoLevel && frag.level) {
	        var requestDelay = performance.now() - stats.trequest,
	            playbackRate = Math.abs(v.playbackRate);
	        // monitor fragment load progress after half of expected fragment duration,to stabilize bitrate
	        if (requestDelay > 500 * frag.duration / playbackRate) {
	          var levels = hls.levels,
	              loadRate = Math.max(1, stats.bw ? stats.bw / 8 : stats.loaded * 1000 / requestDelay),
	              // byte/s; at least 1 byte/s to avoid division by zero
	          // compute expected fragment length using frag duration and level bitrate. also ensure that expected len is gte than already loaded size
	          level = levels[frag.level],
	              levelBitrate = level.realBitrate ? Math.max(level.realBitrate, level.bitrate) : level.bitrate,
	              expectedLen = stats.total ? stats.total : Math.max(stats.loaded, Math.round(frag.duration * levelBitrate / 8)),
	              pos = v.currentTime,
	              fragLoadedDelay = (expectedLen - stats.loaded) / loadRate,
	              bufferStarvationDelay = (_bufferHelper2.default.bufferInfo(v, pos, hls.config.maxBufferHole).end - pos) / playbackRate;
	          // consider emergency switch down only if we have less than 2 frag buffered AND
	          // time to finish loading current fragment is bigger than buffer starvation delay
	          // ie if we risk buffer starvation if bw does not increase quickly
	          if (bufferStarvationDelay < 2 * frag.duration / playbackRate && fragLoadedDelay > bufferStarvationDelay) {
	            var fragLevelNextLoadedDelay = void 0,
	                nextLoadLevel = void 0;
	            // lets iterate through lower level and try to find the biggest one that could avoid rebuffering
	            // we start from current level - 1 and we step down , until we find a matching level
	            for (nextLoadLevel = frag.level - 1; nextLoadLevel > minAutoLevel; nextLoadLevel--) {
	              // compute time to load next fragment at lower level
	              // 0.8 : consider only 80% of current bw to be conservative
	              // 8 = bits per byte (bps/Bps)
	              var levelNextBitrate = levels[nextLoadLevel].realBitrate ? Math.max(levels[nextLoadLevel].realBitrate, levels[nextLoadLevel].bitrate) : levels[nextLoadLevel].bitrate;
	              fragLevelNextLoadedDelay = frag.duration * levelNextBitrate / (8 * 0.8 * loadRate);
	              if (fragLevelNextLoadedDelay < bufferStarvationDelay) {
	                // we found a lower level that be rebuffering free with current estimated bw !
	                break;
	              }
	            }
	            // only emergency switch down if it takes less time to load new fragment at lowest level instead
	            // of finishing loading current one ...
	            if (fragLevelNextLoadedDelay < fragLoadedDelay) {
	              _logger.logger.warn('loading too slow, abort fragment loading and switch to level ' + nextLoadLevel + ':fragLoadedDelay[' + nextLoadLevel + ']<fragLoadedDelay[' + (frag.level - 1) + '];bufferStarvationDelay:' + fragLevelNextLoadedDelay.toFixed(1) + '<' + fragLoadedDelay.toFixed(1) + ':' + bufferStarvationDelay.toFixed(1));
	              // force next load level in auto mode
	              hls.nextLoadLevel = nextLoadLevel;
	              // update bw estimate for this fragment before cancelling load (this will help reducing the bw)
	              this._bwEstimator.sample(requestDelay, stats.loaded);
	              //abort fragment loading
	              loader.abort();
	              // stop abandon rules timer
	              this.clearTimer();
	              hls.trigger(_events2.default.FRAG_LOAD_EMERGENCY_ABORTED, { frag: frag, stats: stats });
	            }
	          }
	        }
	      }
	    }
	  }, {
	    key: 'onFragLoaded',
	    value: function onFragLoaded(data) {
	      var frag = data.frag;
	      if (frag.type === 'main' && !isNaN(frag.sn)) {
	        // stop monitoring bw once frag loaded
	        this.clearTimer();
	        // store level id after successful fragment load
	        this.lastLoadedFragLevel = frag.level;
	        // reset forced auto level value so that next level will be selected
	        this._nextAutoLevel = -1;
	
	        // compute level average bitrate
	        if (this.hls.config.abrMaxWithRealBitrate) {
	          var level = this.hls.levels[frag.level];
	          var loadedBytes = (level.loaded ? level.loaded.bytes : 0) + data.stats.loaded;
	          var loadedDuration = (level.loaded ? level.loaded.duration : 0) + data.frag.duration;
	          level.loaded = { bytes: loadedBytes, duration: loadedDuration };
	          level.realBitrate = Math.round(8 * loadedBytes / loadedDuration);
	        }
	        // if fragment has been loaded to perform a bitrate test,
	        if (data.frag.bitrateTest) {
	          var stats = data.stats;
	          stats.tparsed = stats.tbuffered = stats.tload;
	          this.onFragBuffered(data);
	        }
	      }
	    }
	  }, {
	    key: 'onFragBuffered',
	    value: function onFragBuffered(data) {
	      var stats = data.stats,
	          frag = data.frag;
	      // only update stats on first frag buffering
	      // if same frag is loaded multiple times, it might be in browser cache, and loaded quickly
	      // and leading to wrong bw estimation
	      // on bitrate test, also only update stats once (if tload = tbuffered == on FRAG_LOADED)
	      if (stats.aborted !== true && frag.loadCounter === 1 && frag.type === 'main' && !isNaN(frag.sn) && (!frag.bitrateTest || stats.tload === stats.tbuffered)) {
	        // use tparsed-trequest instead of tbuffered-trequest to compute fragLoadingProcessing; rationale is that  buffer appending only happens once media is attached
	        // in case we use config.startFragPrefetch while media is not attached yet, fragment might be parsed while media not attached yet, but it will only be buffered on media attached
	        // as a consequence it could happen really late in the process. meaning that appending duration might appears huge ... leading to underestimated throughput estimation
	        var fragLoadingProcessingMs = stats.tparsed - stats.trequest;
	        _logger.logger.log('latency/loading/parsing/append/kbps:' + Math.round(stats.tfirst - stats.trequest) + '/' + Math.round(stats.tload - stats.tfirst) + '/' + Math.round(stats.tparsed - stats.tload) + '/' + Math.round(stats.tbuffered - stats.tparsed) + '/' + Math.round(8 * stats.loaded / (stats.tbuffered - stats.trequest)));
	        this._bwEstimator.sample(fragLoadingProcessingMs, stats.loaded);
	        // if fragment has been loaded to perform a bitrate test, (hls.startLevel = -1), store bitrate test delay duration
	        if (frag.bitrateTest) {
	          this.bitrateTestDelay = fragLoadingProcessingMs / 1000;
	        } else {
	          this.bitrateTestDelay = 0;
	        }
	      }
	    }
	  }, {
	    key: 'onError',
	    value: function onError(data) {
	      // stop timer in case of frag loading error
	      switch (data.details) {
	        case _errors.ErrorDetails.FRAG_LOAD_ERROR:
	        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:
	          this.clearTimer();
	          break;
	        default:
	          break;
	      }
	    }
	  }, {
	    key: 'clearTimer',
	    value: function clearTimer() {
	      if (this.timer) {
	        clearInterval(this.timer);
	        this.timer = null;
	      }
	    }
	
	    // return next auto level
	
	  }, {
	    key: '_findBestLevel',
	    value: function _findBestLevel(currentLevel, currentFragDuration, currentBw, minAutoLevel, maxAutoLevel, maxFetchDuration, bwFactor, bwUpFactor, levels) {
	      for (var i = maxAutoLevel; i >= minAutoLevel; i--) {
	        var levelInfo = levels[i],
	            levelDetails = levelInfo.details,
	            avgDuration = levelDetails ? levelDetails.totalduration / levelDetails.fragments.length : currentFragDuration,
	            live = levelDetails ? levelDetails.live : false,
	            adjustedbw = void 0;
	        // follow algorithm captured from stagefright :
	        // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp
	        // Pick the highest bandwidth stream below or equal to estimated bandwidth.
	        // consider only 80% of the available bandwidth, but if we are switching up,
	        // be even more conservative (70%) to avoid overestimating and immediately
	        // switching back.
	        if (i <= currentLevel) {
	          adjustedbw = bwFactor * currentBw;
	        } else {
	          adjustedbw = bwUpFactor * currentBw;
	        }
	        var bitrate = levels[i].realBitrate ? Math.max(levels[i].realBitrate, levels[i].bitrate) : levels[i].bitrate,
	            fetchDuration = bitrate * avgDuration / adjustedbw;
	
	        _logger.logger.trace('level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: ' + i + '/' + Math.round(adjustedbw) + '/' + bitrate + '/' + avgDuration + '/' + maxFetchDuration + '/' + fetchDuration);
	        // if adjusted bw is greater than level bitrate AND
	        if (adjustedbw > bitrate && (
	        // fragment fetchDuration unknown OR live stream OR fragment fetchDuration less than max allowed fetch duration, then this level matches
	        // we don't account for max Fetch Duration for live streams, this is to avoid switching down when near the edge of live sliding window ...
	        !fetchDuration || live || fetchDuration < maxFetchDuration)) {
	          // as we are looping from highest to lowest, this will return the best achievable quality level
	
	          return i;
	        }
	      }
	      // not enough time budget even with quality level 0 ... rebuffering might happen
	      return -1;
	    }
	  }, {
	    key: 'nextAutoLevel',
	    get: function get() {
	      var forcedAutoLevel = this._nextAutoLevel;
	      var bwEstimator = this._bwEstimator;
	      // in case next auto level has been forced, and bw not available or not reliable, return forced value
	      if (forcedAutoLevel !== -1 && (!bwEstimator || !bwEstimator.canEstimate())) {
	        return forcedAutoLevel;
	      }
	      // compute next level using ABR logic
	      var nextABRAutoLevel = this._nextABRAutoLevel;
	      // if forced auto level has been defined, use it to cap ABR computed quality level
	      if (forcedAutoLevel !== -1) {
	        nextABRAutoLevel = Math.min(forcedAutoLevel, nextABRAutoLevel);
	      }
	      return nextABRAutoLevel;
	    },
	    set: function set(nextLevel) {
	      this._nextAutoLevel = nextLevel;
	    }
	  }, {
	    key: '_nextABRAutoLevel',
	    get: function get() {
	      var hls = this.hls,
	          maxAutoLevel = hls.maxAutoLevel,
	          levels = hls.levels,
	          config = hls.config,
	          minAutoLevel = hls.minAutoLevel;
	      var v = hls.media,
	          currentLevel = this.lastLoadedFragLevel,
	          currentFragDuration = this.fragCurrent ? this.fragCurrent.duration : 0,
	          pos = v ? v.currentTime : 0,
	
	      // playbackRate is the absolute value of the playback rate; if v.playbackRate is 0, we use 1 to load as
	      // if we're playing back at the normal rate.
	      playbackRate = v && v.playbackRate !== 0 ? Math.abs(v.playbackRate) : 1.0,
	          avgbw = this._bwEstimator ? this._bwEstimator.getEstimate() : config.abrEwmaDefaultEstimate,
	
	      // bufferStarvationDelay is the wall-clock time left until the playback buffer is exhausted.
	      bufferStarvationDelay = (_bufferHelper2.default.bufferInfo(v, pos, config.maxBufferHole).end - pos) / playbackRate;
	
	      // First, look to see if we can find a level matching with our avg bandwidth AND that could also guarantee no rebuffering at all
	      var bestLevel = this._findBestLevel(currentLevel, currentFragDuration, avgbw, minAutoLevel, maxAutoLevel, bufferStarvationDelay, config.abrBandWidthFactor, config.abrBandWidthUpFactor, levels);
	      if (bestLevel >= 0) {
	        return bestLevel;
	      } else {
	        _logger.logger.trace('rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering');
	        // not possible to get rid of rebuffering ... let's try to find level that will guarantee less than maxStarvationDelay of rebuffering
	        // if no matching level found, logic will return 0
	        var maxStarvationDelay = currentFragDuration ? Math.min(currentFragDuration, config.maxStarvationDelay) : config.maxStarvationDelay,
	            bwFactor = config.abrBandWidthFactor,
	            bwUpFactor = config.abrBandWidthUpFactor;
	        if (bufferStarvationDelay === 0) {
	          // in case buffer is empty, let's check if previous fragment was loaded to perform a bitrate test
	          var bitrateTestDelay = this.bitrateTestDelay;
	          if (bitrateTestDelay) {
	            // if it is the case, then we need to adjust our max starvation delay using maxLoadingDelay config value
	            // max video loading delay used in  automatic start level selection :
	            // in that mode ABR controller will ensure that video loading time (ie the time to fetch the first fragment at lowest quality level +
	            // the time to fetch the fragment at the appropriate quality level is less than ```maxLoadingDelay``` )
	            // cap maxLoadingDelay and ensure it is not bigger 'than bitrate test' frag duration
	            var maxLoadingDelay = currentFragDuration ? Math.min(currentFragDuration, config.maxLoadingDelay) : config.maxLoadingDelay;
	            maxStarvationDelay = maxLoadingDelay - bitrateTestDelay;
	            _logger.logger.trace('bitrate test took ' + Math.round(1000 * bitrateTestDelay) + 'ms, set first fragment max fetchDuration to ' + Math.round(1000 * maxStarvationDelay) + ' ms');
	            // don't use conservative factor on bitrate test
	            bwFactor = bwUpFactor = 1;
	          }
	        }
	        bestLevel = this._findBestLevel(currentLevel, currentFragDuration, avgbw, minAutoLevel, maxAutoLevel, bufferStarvationDelay + maxStarvationDelay, bwFactor, bwUpFactor, levels);
	        return Math.max(bestLevel, 0);
	      }
	    }
	  }]);
	
	  return AbrController;
	}(_eventHandler2.default);
	
	exports.default = AbrController;
	
	},{"30":30,"31":31,"32":32,"34":34,"48":48,"50":50}],6:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _binarySearch = _dereq_(45);
	
	var _binarySearch2 = _interopRequireDefault(_binarySearch);
	
	var _bufferHelper = _dereq_(34);
	
	var _bufferHelper2 = _interopRequireDefault(_bufferHelper);
	
	var _demuxer = _dereq_(24);
	
	var _demuxer2 = _interopRequireDefault(_demuxer);
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _levelHelper = _dereq_(35);
	
	var _levelHelper2 = _interopRequireDefault(_levelHelper);
	
	var _timeRanges = _dereq_(51);
	
	var _timeRanges2 = _interopRequireDefault(_timeRanges);
	
	var _errors = _dereq_(30);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Audio Stream Controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var State = {
	  STOPPED: 'STOPPED',
	  STARTING: 'STARTING',
	  IDLE: 'IDLE',
	  PAUSED: 'PAUSED',
	  KEY_LOADING: 'KEY_LOADING',
	  FRAG_LOADING: 'FRAG_LOADING',
	  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',
	  WAITING_TRACK: 'WAITING_TRACK',
	  PARSING: 'PARSING',
	  PARSED: 'PARSED',
	  BUFFER_FLUSHING: 'BUFFER_FLUSHING',
	  ENDED: 'ENDED',
	  ERROR: 'ERROR',
	  WAITING_INIT_PTS: 'WAITING_INIT_PTS'
	};
	
	var AudioStreamController = function (_EventHandler) {
	  _inherits(AudioStreamController, _EventHandler);
	
	  function AudioStreamController(hls) {
	    _classCallCheck(this, AudioStreamController);
	
	    var _this = _possibleConstructorReturn(this, (AudioStreamController.__proto__ || Object.getPrototypeOf(AudioStreamController)).call(this, hls, _events2.default.MEDIA_ATTACHED, _events2.default.MEDIA_DETACHING, _events2.default.AUDIO_TRACKS_UPDATED, _events2.default.AUDIO_TRACK_SWITCHING, _events2.default.AUDIO_TRACK_LOADED, _events2.default.KEY_LOADED, _events2.default.FRAG_LOADED, _events2.default.FRAG_PARSING_INIT_SEGMENT, _events2.default.FRAG_PARSING_DATA, _events2.default.FRAG_PARSED, _events2.default.ERROR, _events2.default.BUFFER_CREATED, _events2.default.BUFFER_APPENDED, _events2.default.BUFFER_FLUSHED, _events2.default.INIT_PTS_FOUND));
	
	    _this.config = hls.config;
	    _this.audioCodecSwap = false;
	    _this.ticks = 0;
	    _this._state = State.STOPPED;
	    _this.ontick = _this.tick.bind(_this);
	    _this.initPTS = [];
	    _this.waitingFragment = null;
	    return _this;
	  }
	
	  _createClass(AudioStreamController, [{
	    key: 'destroy',
	    value: function destroy() {
	      this.stopLoad();
	      if (this.timer) {
	        clearInterval(this.timer);
	        this.timer = null;
	      }
	      _eventHandler2.default.prototype.destroy.call(this);
	      this.state = State.STOPPED;
	    }
	
	    //Signal that video PTS was found
	
	  }, {
	    key: 'onInitPtsFound',
	    value: function onInitPtsFound(data) {
	      var demuxerId = data.id,
	          cc = data.frag.cc,
	          initPTS = data.initPTS;
	      if (demuxerId === 'main') {
	        //Always update the new INIT PTS
	        //Can change due level switch
	        this.initPTS[cc] = initPTS;
	        _logger.logger.log('InitPTS for cc:' + cc + ' found from video track:' + initPTS);
	
	        //If we are waiting we need to demux/remux the waiting frag
	        //With the new initPTS
	        if (this.state === State.WAITING_INIT_PTS) {
	          _logger.logger.log('sending pending audio frag to demuxer');
	          this.state = State.FRAG_LOADING;
	          //We have audio frag waiting or video pts
	          //Let process it
	          this.onFragLoaded(this.waitingFragment);
	          //Lets clean the waiting frag
	          this.waitingFragment = null;
	        }
	      }
	    }
	  }, {
	    key: 'startLoad',
	    value: function startLoad(startPosition) {
	      if (this.tracks) {
	        var lastCurrentTime = this.lastCurrentTime;
	        this.stopLoad();
	        if (!this.timer) {
	          this.timer = setInterval(this.ontick, 100);
	        }
	        this.fragLoadError = 0;
	        if (lastCurrentTime > 0 && startPosition === -1) {
	          _logger.logger.log('audio:override startPosition with lastCurrentTime @' + lastCurrentTime.toFixed(3));
	          this.state = State.IDLE;
	        } else {
	          this.lastCurrentTime = this.startPosition ? this.startPosition : startPosition;
	          this.state = State.STARTING;
	        }
	        this.nextLoadPosition = this.startPosition = this.lastCurrentTime;
	        this.tick();
	      } else {
	        this.startPosition = startPosition;
	        this.state = State.STOPPED;
	      }
	    }
	  }, {
	    key: 'stopLoad',
	    value: function stopLoad() {
	      var frag = this.fragCurrent;
	      if (frag) {
	        if (frag.loader) {
	          frag.loader.abort();
	        }
	        this.fragCurrent = null;
	      }
	      this.fragPrevious = null;
	      if (this.demuxer) {
	        this.demuxer.destroy();
	        this.demuxer = null;
	      }
	      this.state = State.STOPPED;
	    }
	  }, {
	    key: 'tick',
	    value: function tick() {
	      this.ticks++;
	      if (this.ticks === 1) {
	        this.doTick();
	        if (this.ticks > 1) {
	          setTimeout(this.tick, 1);
	        }
	        this.ticks = 0;
	      }
	    }
	  }, {
	    key: 'doTick',
	    value: function doTick() {
	      var pos,
	          track,
	          trackDetails,
	          hls = this.hls,
	          config = hls.config;
	      //logger.log('audioStream:' + this.state);
	      switch (this.state) {
	        case State.ERROR:
	        //don't do anything in error state to avoid breaking further ...
	        case State.PAUSED:
	        //don't do anything in paused state either ...
	        case State.BUFFER_FLUSHING:
	          break;
	        case State.STARTING:
	          this.state = State.WAITING_TRACK;
	          this.loadedmetadata = false;
	          break;
	        case State.IDLE:
	          var tracks = this.tracks;
	          // audio tracks not received => exit loop
	          if (!tracks) {
	            break;
	          }
	          // if video not attached AND
	          // start fragment already requested OR start frag prefetch disable
	          // exit loop
	          // => if media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop
	          if (!this.media && (this.startFragRequested || !config.startFragPrefetch)) {
	            break;
	          }
	          // determine next candidate fragment to be loaded, based on current position and
	          //  end of buffer position
	          // if we have not yet loaded any fragment, start loading from start position
	          if (this.loadedmetadata) {
	            pos = this.media.currentTime;
	          } else {
	            pos = this.nextLoadPosition;
	          }
	          var media = this.mediaBuffer ? this.mediaBuffer : this.media,
	              bufferInfo = _bufferHelper2.default.bufferInfo(media, pos, config.maxBufferHole),
	              bufferLen = bufferInfo.len,
	              bufferEnd = bufferInfo.end,
	              fragPrevious = this.fragPrevious,
	              maxBufLen = config.maxMaxBufferLength,
	              audioSwitch = this.audioSwitch,
	              trackId = this.trackId;
	
	          // if buffer length is less than maxBufLen try to load a new fragment
	          if ((bufferLen < maxBufLen || audioSwitch) && trackId < tracks.length) {
	            trackDetails = tracks[trackId].details;
	            // if track info not retrieved yet, switch state and wait for track retrieval
	            if (typeof trackDetails === 'undefined') {
	              this.state = State.WAITING_TRACK;
	              break;
	            }
	
	            // we just got done loading the final fragment, check if we need to finalize media stream
	            if (!audioSwitch && !trackDetails.live && fragPrevious && fragPrevious.sn === trackDetails.endSN) {
	              // if we are not seeking or if we are seeking but everything (almost) til the end is buffered, let's signal eos
	              // we don't compare exactly media.duration === bufferInfo.end as there could be some subtle media duration difference when switching
	              // between different renditions. using half frag duration should help cope with these cases.
	              if (!this.media.seeking || this.media.duration - bufferEnd < fragPrevious.duration / 2) {
	                // Finalize the media stream
	                this.hls.trigger(_events2.default.BUFFER_EOS, { type: 'audio' });
	                this.state = State.ENDED;
	                break;
	              }
	            }
	
	            // find fragment index, contiguous with end of buffer position
	            var fragments = trackDetails.fragments,
	                fragLen = fragments.length,
	                start = fragments[0].start,
	                end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration,
	                frag = void 0;
	
	            // When switching audio track, reload audio as close as possible to currentTime
	            if (audioSwitch) {
	              if (trackDetails.live && !trackDetails.PTSKnown) {
	                _logger.logger.log('switching audiotrack, live stream, unknown PTS,load first fragment');
	                bufferEnd = 0;
	              } else {
	                bufferEnd = pos;
	                // if currentTime (pos) is less than alt audio playlist start time, it means that alt audio is ahead of currentTime
	                if (trackDetails.PTSKnown && pos < start) {
	                  // if everything is buffered from pos to start or if audio buffer upfront, let's seek to start
	                  if (bufferInfo.end > start || bufferInfo.nextStart) {
	                    _logger.logger.log('alt audio track ahead of main track, seek to start of alt audio track');
	                    this.media.currentTime = start + 0.05;
	                  } else {
	                    return;
	                  }
	                }
	              }
	            }
	            if (trackDetails.initSegment && !trackDetails.initSegment.data) {
	              frag = trackDetails.initSegment;
	            }
	            // if bufferEnd before start of playlist, load first fragment
	            else if (bufferEnd <= start) {
	                frag = fragments[0];
	                if (trackDetails.live && frag.loadIdx && frag.loadIdx === this.fragLoadIdx) {
	                  // we just loaded this first fragment, and we are still lagging behind the start of the live playlist
	                  // let's force seek to start
	                  var nextBuffered = bufferInfo.nextStart ? bufferInfo.nextStart : start;
	                  _logger.logger.log('no alt audio available @currentTime:' + this.media.currentTime + ', seeking @' + (nextBuffered + 0.05));
	                  this.media.currentTime = nextBuffered + 0.05;
	                  return;
	                }
	              } else {
	                var foundFrag = void 0;
	                var maxFragLookUpTolerance = config.maxFragLookUpTolerance;
	                var fragNext = fragPrevious ? fragments[fragPrevious.sn - fragments[0].sn + 1] : undefined;
	                var fragmentWithinToleranceTest = function fragmentWithinToleranceTest(candidate) {
	                  // offset should be within fragment boundary - config.maxFragLookUpTolerance
	                  // this is to cope with situations like
	                  // bufferEnd = 9.991
	                  // frag[Ø] : [0,10]
	                  // frag[1] : [10,20]
	                  // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here
	                  //              frag start               frag start+duration
	                  //                  |-----------------------------|
	                  //              <--->                         <--->
	                  //  ...--------><-----------------------------><---------....
	                  // previous frag         matching fragment         next frag
	                  //  return -1             return 0                 return 1
	                  //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);
	                  // Set the lookup tolerance to be small enough to detect the current segment - ensures we don't skip over very small segments
	                  var candidateLookupTolerance = Math.min(maxFragLookUpTolerance, candidate.duration);
	                  if (candidate.start + candidate.duration - candidateLookupTolerance <= bufferEnd) {
	                    return 1;
	                  } // if maxFragLookUpTolerance will have negative value then don't return -1 for first element
	                  else if (candidate.start - candidateLookupTolerance > bufferEnd && candidate.start) {
	                      return -1;
	                    }
	                  return 0;
	                };
	
	                if (bufferEnd < end) {
	                  if (bufferEnd > end - maxFragLookUpTolerance) {
	                    maxFragLookUpTolerance = 0;
	                  }
	                  // Prefer the next fragment if it's within tolerance
	                  if (fragNext && !fragmentWithinToleranceTest(fragNext)) {
	                    foundFrag = fragNext;
	                  } else {
	                    foundFrag = _binarySearch2.default.search(fragments, fragmentWithinToleranceTest);
	                  }
	                } else {
	                  // reach end of playlist
	                  foundFrag = fragments[fragLen - 1];
	                }
	                if (foundFrag) {
	                  frag = foundFrag;
	                  start = foundFrag.start;
	                  //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);
	                  if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {
	                    if (frag.sn < trackDetails.endSN) {
	                      frag = fragments[frag.sn + 1 - trackDetails.startSN];
	                      _logger.logger.log('SN just loaded, load next one: ' + frag.sn);
	                    } else {
	                      frag = null;
	                    }
	                  }
	                }
	              }
	            if (frag) {
	              //logger.log('      loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));
	              if (frag.decryptdata && frag.decryptdata.uri != null && frag.decryptdata.key == null) {
	                _logger.logger.log('Loading key for ' + frag.sn + ' of [' + trackDetails.startSN + ' ,' + trackDetails.endSN + '],track ' + trackId);
	                this.state = State.KEY_LOADING;
	                hls.trigger(_events2.default.KEY_LOADING, { frag: frag });
	              } else {
	                _logger.logger.log('Loading ' + frag.sn + ' of [' + trackDetails.startSN + ' ,' + trackDetails.endSN + '],track ' + trackId + ', currentTime:' + pos + ',bufferEnd:' + bufferEnd.toFixed(3));
	                // ensure that we are not reloading the same fragments in loop ...
	                if (this.fragLoadIdx !== undefined) {
	                  this.fragLoadIdx++;
	                } else {
	                  this.fragLoadIdx = 0;
	                }
	                if (frag.loadCounter) {
	                  frag.loadCounter++;
	                  var maxThreshold = config.fragLoadingLoopThreshold;
	                  // if this frag has already been loaded 3 times, and if it has been reloaded recently
	                  if (frag.loadCounter > maxThreshold && Math.abs(this.fragLoadIdx - frag.loadIdx) < maxThreshold) {
	                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag });
	                    return;
	                  }
	                } else {
	                  frag.loadCounter = 1;
	                }
	                frag.loadIdx = this.fragLoadIdx;
	                this.fragCurrent = frag;
	                this.startFragRequested = true;
	                if (!isNaN(frag.sn)) {
	                  this.nextLoadPosition = frag.start + frag.duration;
	                }
	                hls.trigger(_events2.default.FRAG_LOADING, { frag: frag });
	                this.state = State.FRAG_LOADING;
	              }
	            }
	          }
	          break;
	        case State.WAITING_TRACK:
	          track = this.tracks[this.trackId];
	          // check if playlist is already loaded
	          if (track && track.details) {
	            this.state = State.IDLE;
	          }
	          break;
	        case State.FRAG_LOADING_WAITING_RETRY:
	          var now = performance.now();
	          var retryDate = this.retryDate;
	          media = this.media;
	          var isSeeking = media && media.seeking;
	          // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading
	          if (!retryDate || now >= retryDate || isSeeking) {
	            _logger.logger.log('audioStreamController: retryDate reached, switch back to IDLE state');
	            this.state = State.IDLE;
	          }
	          break;
	        case State.WAITING_INIT_PTS:
	        case State.STOPPED:
	        case State.FRAG_LOADING:
	        case State.PARSING:
	        case State.PARSED:
	        case State.ENDED:
	          break;
	        default:
	          break;
	      }
	    }
	  }, {
	    key: 'onMediaAttached',
	    value: function onMediaAttached(data) {
	      var media = this.media = this.mediaBuffer = data.media;
	      this.onvseeking = this.onMediaSeeking.bind(this);
	      this.onvended = this.onMediaEnded.bind(this);
	      media.addEventListener('seeking', this.onvseeking);
	      media.addEventListener('ended', this.onvended);
	      var config = this.config;
	      if (this.tracks && config.autoStartLoad) {
	        this.startLoad(config.startPosition);
	      }
	    }
	  }, {
	    key: 'onMediaDetaching',
	    value: function onMediaDetaching() {
	      var media = this.media;
	      if (media && media.ended) {
	        _logger.logger.log('MSE detaching and video ended, reset startPosition');
	        this.startPosition = this.lastCurrentTime = 0;
	      }
	
	      // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery
	      var tracks = this.tracks;
	      if (tracks) {
	        // reset fragment load counter
	        tracks.forEach(function (track) {
	          if (track.details) {
	            track.details.fragments.forEach(function (fragment) {
	              fragment.loadCounter = undefined;
	            });
	          }
	        });
	      }
	      // remove video listeners
	      if (media) {
	        media.removeEventListener('seeking', this.onvseeking);
	        media.removeEventListener('ended', this.onvended);
	        this.onvseeking = this.onvseeked = this.onvended = null;
	      }
	      this.media = this.mediaBuffer = null;
	      this.loadedmetadata = false;
	      this.stopLoad();
	    }
	  }, {
	    key: 'onMediaSeeking',
	    value: function onMediaSeeking() {
	      if (this.state === State.ENDED) {
	        // switch to IDLE state to check for potential new fragment
	        this.state = State.IDLE;
	      }
	      if (this.media) {
	        this.lastCurrentTime = this.media.currentTime;
	      }
	      // avoid reporting fragment loop loading error in case user is seeking several times on same position
	      if (this.fragLoadIdx !== undefined) {
	        this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;
	      }
	      // tick to speed up processing
	      this.tick();
	    }
	  }, {
	    key: 'onMediaEnded',
	    value: function onMediaEnded() {
	      // reset startPosition and lastCurrentTime to restart playback @ stream beginning
	      this.startPosition = this.lastCurrentTime = 0;
	    }
	  }, {
	    key: 'onAudioTracksUpdated',
	    value: function onAudioTracksUpdated(data) {
	      _logger.logger.log('audio tracks updated');
	      this.tracks = data.audioTracks;
	    }
	  }, {
	    key: 'onAudioTrackSwitching',
	    value: function onAudioTrackSwitching(data) {
	      // if any URL found on new audio track, it is an alternate audio track
	      var altAudio = !!data.url;
	      this.trackId = data.id;
	      this.state = State.IDLE;
	
	      this.fragCurrent = null;
	      this.state = State.PAUSED;
	      this.waitingFragment = null;
	      // destroy useless demuxer when switching audio to main
	      if (!altAudio) {
	        if (this.demuxer) {
	          this.demuxer.destroy();
	          this.demuxer = null;
	        }
	      } else {
	        // switching to audio track, start timer if not already started
	        if (!this.timer) {
	          this.timer = setInterval(this.ontick, 100);
	        }
	      }
	
	      //should we switch tracks ?
	      if (altAudio) {
	        this.audioSwitch = true;
	        //main audio track are handled by stream-controller, just do something if switching to alt audio track
	        this.state = State.IDLE;
	        // increase fragment load Index to avoid frag loop loading error after buffer flush
	        if (this.fragLoadIdx !== undefined) {
	          this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;
	        }
	      }
	      this.tick();
	    }
	  }, {
	    key: 'onAudioTrackLoaded',
	    value: function onAudioTrackLoaded(data) {
	      var newDetails = data.details,
	          trackId = data.id,
	          track = this.tracks[trackId],
	          duration = newDetails.totalduration,
	          sliding = 0;
	
	      _logger.logger.log('track ' + trackId + ' loaded [' + newDetails.startSN + ',' + newDetails.endSN + '],duration:' + duration);
	
	      if (newDetails.live) {
	        var curDetails = track.details;
	        if (curDetails && newDetails.fragments.length > 0) {
	          // we already have details for that level, merge them
	          _levelHelper2.default.mergeDetails(curDetails, newDetails);
	          sliding = newDetails.fragments[0].start;
	          // TODO
	          //this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);
	          if (newDetails.PTSKnown) {
	            _logger.logger.log('live audio playlist sliding:' + sliding.toFixed(3));
	          } else {
	            _logger.logger.log('live audio playlist - outdated PTS, unknown sliding');
	          }
	        } else {
	          newDetails.PTSKnown = false;
	          _logger.logger.log('live audio playlist - first load, unknown sliding');
	        }
	      } else {
	        newDetails.PTSKnown = false;
	      }
	      track.details = newDetails;
	
	      // compute start position
	      if (!this.startFragRequested) {
	        // compute start position if set to -1. use it straight away if value is defined
	        if (this.startPosition === -1) {
	          // first, check if start time offset has been set in playlist, if yes, use this value
	          var startTimeOffset = newDetails.startTimeOffset;
	          if (!isNaN(startTimeOffset)) {
	            _logger.logger.log('start time offset found in playlist, adjust startPosition to ' + startTimeOffset);
	            this.startPosition = startTimeOffset;
	          } else {
	            this.startPosition = 0;
	          }
	        }
	        this.nextLoadPosition = this.startPosition;
	      }
	      // only switch batck to IDLE state if we were waiting for track to start downloading a new fragment
	      if (this.state === State.WAITING_TRACK) {
	        this.state = State.IDLE;
	      }
	      //trigger handler right now
	      this.tick();
	    }
	  }, {
	    key: 'onKeyLoaded',
	    value: function onKeyLoaded() {
	      if (this.state === State.KEY_LOADING) {
	        this.state = State.IDLE;
	        this.tick();
	      }
	    }
	  }, {
	    key: 'onFragLoaded',
	    value: function onFragLoaded(data) {
	      var fragCurrent = this.fragCurrent,
	          fragLoaded = data.frag;
	      if (this.state === State.FRAG_LOADING && fragCurrent && fragLoaded.type === 'audio' && fragLoaded.level === fragCurrent.level && fragLoaded.sn === fragCurrent.sn) {
	        var track = this.tracks[this.trackId],
	            details = track.details,
	            duration = details.totalduration,
	            trackId = fragCurrent.level,
	            sn = fragCurrent.sn,
	            cc = fragCurrent.cc,
	            audioCodec = this.config.defaultAudioCodec || track.audioCodec || 'mp4a.40.2',
	            stats = this.stats = data.stats;
	        if (sn === 'initSegment') {
	          this.state = State.IDLE;
	
	          stats.tparsed = stats.tbuffered = performance.now();
	          details.initSegment.data = data.payload;
	          this.hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: fragCurrent, id: 'audio' });
	          this.tick();
	        } else {
	          this.state = State.PARSING;
	          // transmux the MPEG-TS data to ISO-BMFF segments
	          this.appended = false;
	          if (!this.demuxer) {
	            this.demuxer = new _demuxer2.default(this.hls, 'audio');
	          }
	          //Check if we have video initPTS
	          // If not we need to wait for it
	          var initPTS = this.initPTS[cc];
	          var initSegmentData = details.initSegment ? details.initSegment.data : [];
	          if (initSegmentData || initPTS !== undefined) {
	            this.pendingBuffering = true;
	            _logger.logger.log('Demuxing ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],track ' + trackId);
	            // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)
	            var accurateTimeOffset = false; //details.PTSKnown || !details.live;
	            this.demuxer.push(data.payload, initSegmentData, audioCodec, null, fragCurrent, duration, accurateTimeOffset, initPTS);
	          } else {
	            _logger.logger.log('unknown video PTS for continuity counter ' + cc + ', waiting for video PTS before demuxing audio frag ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],track ' + trackId);
	            this.waitingFragment = data;
	            this.state = State.WAITING_INIT_PTS;
	          }
	        }
	      }
	      this.fragLoadError = 0;
	    }
	  }, {
	    key: 'onFragParsingInitSegment',
	    value: function onFragParsingInitSegment(data) {
	      var fragCurrent = this.fragCurrent;
	      var fragNew = data.frag;
	      if (fragCurrent && data.id === 'audio' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
	        var tracks = data.tracks,
	            track = void 0;
	
	        // delete any video track found on audio demuxer
	        if (tracks.video) {
	          delete tracks.video;
	        }
	
	        // include levelCodec in audio and video tracks
	        track = tracks.audio;
	        if (track) {
	          track.levelCodec = 'mp4a.40.2';
	          track.id = data.id;
	          this.hls.trigger(_events2.default.BUFFER_CODECS, tracks);
	          _logger.logger.log('audio track:audio,container:' + track.container + ',codecs[level/parsed]=[' + track.levelCodec + '/' + track.codec + ']');
	          var initSegment = track.initSegment;
	          if (initSegment) {
	            var appendObj = { type: 'audio', data: initSegment, parent: 'audio', content: 'initSegment' };
	            if (this.audioSwitch) {
	              this.pendingData = [appendObj];
	            } else {
	              this.appended = true;
	              // arm pending Buffering flag before appending a segment
	              this.pendingBuffering = true;
	              this.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);
	            }
	          }
	          //trigger handler right now
	          this.tick();
	        }
	      }
	    }
	  }, {
	    key: 'onFragParsingData',
	    value: function onFragParsingData(data) {
	      var _this2 = this;
	
	      var fragCurrent = this.fragCurrent;
	      var fragNew = data.frag;
	      if (fragCurrent && data.id === 'audio' && data.type === 'audio' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
	        var trackId = this.trackId,
	            track = this.tracks[trackId],
	            hls = this.hls;
	
	        if (isNaN(data.endPTS)) {
	          data.endPTS = data.startPTS + fragCurrent.duration;
	          data.endDTS = data.startDTS + fragCurrent.duration;
	        }
	
	        _logger.logger.log('parsed ' + data.type + ',PTS:[' + data.startPTS.toFixed(3) + ',' + data.endPTS.toFixed(3) + '],DTS:[' + data.startDTS.toFixed(3) + '/' + data.endDTS.toFixed(3) + '],nb:' + data.nb);
	        _levelHelper2.default.updateFragPTSDTS(track.details, fragCurrent.sn, data.startPTS, data.endPTS);
	
	        var audioSwitch = this.audioSwitch,
	            media = this.media,
	            appendOnBufferFlush = false;
	        //Only flush audio from old audio tracks when PTS is known on new audio track
	        if (audioSwitch && media) {
	          if (media.readyState) {
	            var currentTime = media.currentTime;
	            _logger.logger.log('switching audio track : currentTime:' + currentTime);
	            if (currentTime >= data.startPTS) {
	              _logger.logger.log('switching audio track : flushing all audio');
	              this.state = State.BUFFER_FLUSHING;
	              hls.trigger(_events2.default.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: 'audio' });
	              appendOnBufferFlush = true;
	              //Lets announce that the initial audio track switch flush occur
	              this.audioSwitch = false;
	              hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });
	            }
	          } else {
	            //Lets announce that the initial audio track switch flush occur
	            this.audioSwitch = false;
	            hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });
	          }
	        }
	
	        var pendingData = this.pendingData;
	        if (!this.audioSwitch) {
	          [data.data1, data.data2].forEach(function (buffer) {
	            if (buffer && buffer.length) {
	              pendingData.push({ type: data.type, data: buffer, parent: 'audio', content: 'data' });
	            }
	          });
	          if (!appendOnBufferFlush && pendingData.length) {
	            pendingData.forEach(function (appendObj) {
	              // only append in PARSING state (rationale is that an appending error could happen synchronously on first segment appending)
	              // in that case it is useless to append following segments
	              if (_this2.state === State.PARSING) {
	                // arm pending Buffering flag before appending a segment
	                _this2.pendingBuffering = true;
	                _this2.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);
	              }
	            });
	            this.pendingData = [];
	            this.appended = true;
	          }
	        }
	        //trigger handler right now
	        this.tick();
	      }
	    }
	  }, {
	    key: 'onFragParsed',
	    value: function onFragParsed(data) {
	      var fragCurrent = this.fragCurrent;
	      var fragNew = data.frag;
	      if (fragCurrent && data.id === 'audio' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
	        this.stats.tparsed = performance.now();
	        this.state = State.PARSED;
	        this._checkAppendedParsed();
	      }
	    }
	  }, {
	    key: 'onBufferCreated',
	    value: function onBufferCreated(data) {
	      var audioTrack = data.tracks.audio;
	      if (audioTrack) {
	        this.mediaBuffer = audioTrack.buffer;
	        this.loadedmetadata = true;
	      }
	    }
	  }, {
	    key: 'onBufferAppended',
	    value: function onBufferAppended(data) {
	      if (data.parent === 'audio') {
	        var state = this.state;
	        if (state === State.PARSING || state === State.PARSED) {
	          // check if all buffers have been appended
	          this.pendingBuffering = data.pending > 0;
	          this._checkAppendedParsed();
	        }
	      }
	    }
	  }, {
	    key: '_checkAppendedParsed',
	    value: function _checkAppendedParsed() {
	      //trigger handler right now
	      if (this.state === State.PARSED && (!this.appended || !this.pendingBuffering)) {
	        var frag = this.fragCurrent,
	            stats = this.stats,
	            hls = this.hls;
	        if (frag) {
	          this.fragPrevious = frag;
	          stats.tbuffered = performance.now();
	          hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: frag, id: 'audio' });
	          var media = this.mediaBuffer ? this.mediaBuffer : this.media;
	          _logger.logger.log('audio buffered : ' + _timeRanges2.default.toString(media.buffered));
	          if (this.audioSwitch && this.appended) {
	            this.audioSwitch = false;
	            hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: this.trackId });
	          }
	          this.state = State.IDLE;
	        }
	        this.tick();
	      }
	    }
	  }, {
	    key: 'onError',
	    value: function onError(data) {
	      var frag = data.frag;
	      // don't handle frag error not related to audio fragment
	      if (frag && frag.type !== 'audio') {
	        return;
	      }
	      switch (data.details) {
	        case _errors.ErrorDetails.FRAG_LOAD_ERROR:
	        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:
	          if (!data.fatal) {
	            var loadError = this.fragLoadError;
	            if (loadError) {
	              loadError++;
	            } else {
	              loadError = 1;
	            }
	            var config = this.config;
	            if (loadError <= config.fragLoadingMaxRetry) {
	              this.fragLoadError = loadError;
	              // reset load counter to avoid frag loop loading error
	              frag.loadCounter = 0;
	              // exponential backoff capped to config.fragLoadingMaxRetryTimeout
	              var delay = Math.min(Math.pow(2, loadError - 1) * config.fragLoadingRetryDelay, config.fragLoadingMaxRetryTimeout);
	              _logger.logger.warn('audioStreamController: frag loading failed, retry in ' + delay + ' ms');
	              this.retryDate = performance.now() + delay;
	              // retry loading state
	              this.state = State.FRAG_LOADING_WAITING_RETRY;
	            } else {
	              _logger.logger.error('audioStreamController: ' + data.details + ' reaches max retry, redispatch as fatal ...');
	              // switch error to fatal
	              data.fatal = true;
	              this.state = State.ERROR;
	            }
	          }
	          break;
	        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:
	        case _errors.ErrorDetails.AUDIO_TRACK_LOAD_ERROR:
	        case _errors.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:
	        case _errors.ErrorDetails.KEY_LOAD_ERROR:
	        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:
	          //  when in ERROR state, don't switch back to IDLE state in case a non-fatal error is received
	          if (this.state !== State.ERROR) {
	            // if fatal error, stop processing, otherwise move to IDLE to retry loading
	            this.state = data.fatal ? State.ERROR : State.IDLE;
	            _logger.logger.warn('audioStreamController: ' + data.details + ' while loading frag,switch to ' + this.state + ' state ...');
	          }
	          break;
	        case _errors.ErrorDetails.BUFFER_FULL_ERROR:
	          // if in appending state
	          if (data.parent === 'audio' && (this.state === State.PARSING || this.state === State.PARSED)) {
	            var media = this.mediaBuffer,
	                currentTime = this.media.currentTime,
	                mediaBuffered = media && _bufferHelper2.default.isBuffered(media, currentTime) && _bufferHelper2.default.isBuffered(media, currentTime + 0.5);
	            // reduce max buf len if current position is buffered
	            if (mediaBuffered) {
	              var _config = this.config;
	              if (_config.maxMaxBufferLength >= _config.maxBufferLength) {
	                // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...
	                _config.maxMaxBufferLength /= 2;
	                _logger.logger.warn('audio:reduce max buffer length to ' + _config.maxMaxBufferLength + 's');
	                // increase fragment load Index to avoid frag loop loading error after buffer flush
	                this.fragLoadIdx += 2 * _config.fragLoadingLoopThreshold;
	              }
	              this.state = State.IDLE;
	            } else {
	              // current position is not buffered, but browser is still complaining about buffer full error
	              // this happens on IE/Edge, refer to https://github.com/video-dev/hls.js/pull/708
	              // in that case flush the whole audio buffer to recover
	              _logger.logger.warn('buffer full error also media.currentTime is not buffered, flush audio buffer');
	              this.fragCurrent = null;
	              // flush everything
	              this.state = State.BUFFER_FLUSHING;
	              this.hls.trigger(_events2.default.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: 'audio' });
	            }
	          }
	          break;
	        default:
	          break;
	      }
	    }
	  }, {
	    key: 'onBufferFlushed',
	    value: function onBufferFlushed() {
	      var _this3 = this;
	
	      var pendingData = this.pendingData;
	      if (pendingData && pendingData.length) {
	        _logger.logger.log('appending pending audio data on Buffer Flushed');
	        pendingData.forEach(function (appendObj) {
	          _this3.hls.trigger(_events2.default.BUFFER_APPENDING, appendObj);
	        });
	        this.appended = true;
	        this.pendingData = [];
	        this.state = State.PARSED;
	      } else {
	        // move to IDLE once flush complete. this should trigger new fragment loading
	        this.state = State.IDLE;
	        // reset reference to frag
	        this.fragPrevious = null;
	        this.tick();
	      }
	    }
	  }, {
	    key: 'state',
	    set: function set(nextState) {
	      if (this.state !== nextState) {
	        var previousState = this.state;
	        this._state = nextState;
	        _logger.logger.log('audio stream:' + previousState + '->' + nextState);
	      }
	    },
	    get: function get() {
	      return this._state;
	    }
	  }]);
	
	  return AudioStreamController;
	}(_eventHandler2.default);
	
	exports.default = AudioStreamController;
	
	},{"24":24,"30":30,"31":31,"32":32,"34":34,"35":35,"45":45,"50":50,"51":51}],7:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * audio track controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var AudioTrackController = function (_EventHandler) {
	  _inherits(AudioTrackController, _EventHandler);
	
	  function AudioTrackController(hls) {
	    _classCallCheck(this, AudioTrackController);
	
	    var _this = _possibleConstructorReturn(this, (AudioTrackController.__proto__ || Object.getPrototypeOf(AudioTrackController)).call(this, hls, _events2.default.MANIFEST_LOADING, _events2.default.MANIFEST_LOADED, _events2.default.AUDIO_TRACK_LOADED));
	
	    _this.ticks = 0;
	    _this.ontick = _this.tick.bind(_this);
	    return _this;
	  }
	
	  _createClass(AudioTrackController, [{
	    key: 'destroy',
	    value: function destroy() {
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	  }, {
	    key: 'tick',
	    value: function tick() {
	      this.ticks++;
	      if (this.ticks === 1) {
	        this.doTick();
	        if (this.ticks > 1) {
	          setTimeout(this.tick, 1);
	        }
	        this.ticks = 0;
	      }
	    }
	  }, {
	    key: 'doTick',
	    value: function doTick() {
	      this.updateTrack(this.trackId);
	    }
	  }, {
	    key: 'onManifestLoading',
	    value: function onManifestLoading() {
	      // reset audio tracks on manifest loading
	      this.tracks = [];
	      this.trackId = -1;
	    }
	  }, {
	    key: 'onManifestLoaded',
	    value: function onManifestLoaded(data) {
	      var _this2 = this;
	
	      var tracks = data.audioTracks || [];
	      var defaultFound = false;
	      this.tracks = tracks;
	      this.hls.trigger(_events2.default.AUDIO_TRACKS_UPDATED, { audioTracks: tracks });
	      // loop through available audio tracks and autoselect default if needed
	      var id = 0;
	      tracks.forEach(function (track) {
	        if (track.default) {
	          _this2.audioTrack = id;
	          defaultFound = true;
	          return;
	        }
	        id++;
	      });
	      if (defaultFound === false && tracks.length) {
	        _logger.logger.log('no default audio track defined, use first audio track as default');
	        this.audioTrack = 0;
	      }
	    }
	  }, {
	    key: 'onAudioTrackLoaded',
	    value: function onAudioTrackLoaded(data) {
	      if (data.id < this.tracks.length) {
	        _logger.logger.log('audioTrack ' + data.id + ' loaded');
	        this.tracks[data.id].details = data.details;
	        // check if current playlist is a live playlist
	        if (data.details.live && !this.timer) {
	          // if live playlist we will have to reload it periodically
	          // set reload period to playlist target duration
	          this.timer = setInterval(this.ontick, 1000 * data.details.targetduration);
	        }
	        if (!data.details.live && this.timer) {
	          // playlist is not live and timer is armed : stopping it
	          clearInterval(this.timer);
	          this.timer = null;
	        }
	      }
	    }
	
	    /** get alternate audio tracks list from playlist **/
	
	  }, {
	    key: 'setAudioTrackInternal',
	    value: function setAudioTrackInternal(newId) {
	      // check if level idx is valid
	      if (newId >= 0 && newId < this.tracks.length) {
	        // stopping live reloading timer if any
	        if (this.timer) {
	          clearInterval(this.timer);
	          this.timer = null;
	        }
	        this.trackId = newId;
	        _logger.logger.log('switching to audioTrack ' + newId);
	        var audioTrack = this.tracks[newId],
	            hls = this.hls,
	            type = audioTrack.type,
	            url = audioTrack.url,
	            eventObj = { id: newId, type: type, url: url };
	        // keep AUDIO_TRACK_SWITCH for legacy reason
	        hls.trigger(_events2.default.AUDIO_TRACK_SWITCH, eventObj);
	        hls.trigger(_events2.default.AUDIO_TRACK_SWITCHING, eventObj);
	        // check if we need to load playlist for this audio Track
	        var details = audioTrack.details;
	        if (url && (details === undefined || details.live === true)) {
	          // track not retrieved yet, or live playlist we need to (re)load it
	          _logger.logger.log('(re)loading playlist for audioTrack ' + newId);
	          hls.trigger(_events2.default.AUDIO_TRACK_LOADING, { url: url, id: newId });
	        }
	      }
	    }
	  }, {
	    key: 'updateTrack',
	    value: function updateTrack(newId) {
	      // check if level idx is valid
	      if (newId >= 0 && newId < this.tracks.length) {
	        // stopping live reloading timer if any
	        if (this.timer) {
	          clearInterval(this.timer);
	          this.timer = null;
	        }
	        this.trackId = newId;
	        _logger.logger.log('updating audioTrack ' + newId);
	        var audioTrack = this.tracks[newId],
	            url = audioTrack.url;
	        // check if we need to load playlist for this audio Track
	        var details = audioTrack.details;
	        if (url && (details === undefined || details.live === true)) {
	          // track not retrieved yet, or live playlist we need to (re)load it
	          _logger.logger.log('(re)loading playlist for audioTrack ' + newId);
	          this.hls.trigger(_events2.default.AUDIO_TRACK_LOADING, { url: url, id: newId });
	        }
	      }
	    }
	  }, {
	    key: 'audioTracks',
	    get: function get() {
	      return this.tracks;
	    }
	
	    /** get index of the selected audio track (index in audio track lists) **/
	
	  }, {
	    key: 'audioTrack',
	    get: function get() {
	      return this.trackId;
	    }
	
	    /** select an audio track, based on its index in audio track lists**/
	    ,
	    set: function set(audioTrackId) {
	      if (this.trackId !== audioTrackId || this.tracks[audioTrackId].details === undefined) {
	        this.setAudioTrackInternal(audioTrackId);
	      }
	    }
	  }]);
	
	  return AudioTrackController;
	}(_eventHandler2.default);
	
	exports.default = AudioTrackController;
	
	},{"31":31,"32":32,"50":50}],8:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _logger = _dereq_(50);
	
	var _errors = _dereq_(30);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Buffer Controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var BufferController = function (_EventHandler) {
	  _inherits(BufferController, _EventHandler);
	
	  function BufferController(hls) {
	    _classCallCheck(this, BufferController);
	
	    // the value that we have set mediasource.duration to
	    // (the actual duration may be tweaked slighly by the browser)
	    var _this = _possibleConstructorReturn(this, (BufferController.__proto__ || Object.getPrototypeOf(BufferController)).call(this, hls, _events2.default.MEDIA_ATTACHING, _events2.default.MEDIA_DETACHING, _events2.default.MANIFEST_PARSED, _events2.default.BUFFER_RESET, _events2.default.BUFFER_APPENDING, _events2.default.BUFFER_CODECS, _events2.default.BUFFER_EOS, _events2.default.BUFFER_FLUSHING, _events2.default.LEVEL_PTS_UPDATED, _events2.default.LEVEL_UPDATED));
	
	    _this._msDuration = null;
	    // the value that we want to set mediaSource.duration to
	    _this._levelDuration = null;
	
	    // Source Buffer listeners
	    _this.onsbue = _this.onSBUpdateEnd.bind(_this);
	    _this.onsbe = _this.onSBUpdateError.bind(_this);
	    _this.pendingTracks = {};
	    _this.tracks = {};
	    return _this;
	  }
	
	  _createClass(BufferController, [{
	    key: 'destroy',
	    value: function destroy() {
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	  }, {
	    key: 'onLevelPtsUpdated',
	    value: function onLevelPtsUpdated(data) {
	      var type = data.type;
	      var audioTrack = this.tracks.audio;
	
	      // Adjusting `SourceBuffer.timestampOffset` (desired point in the timeline where the next frames should be appended)
	      // in Chrome browser when we detect MPEG audio container and time delta between level PTS and `SourceBuffer.timestampOffset`
	      // is greater than 100ms (this is enough to handle seek for VOD or level change for LIVE videos). At the time of change we issue
	      // `SourceBuffer.abort()` and adjusting `SourceBuffer.timestampOffset` if `SourceBuffer.updating` is false or awaiting `updateend`
	      // event if SB is in updating state.
	      // More info here: https://github.com/video-dev/hls.js/issues/332#issuecomment-257986486
	
	      if (type === 'audio' && audioTrack && audioTrack.container === 'audio/mpeg') {
	        // Chrome audio mp3 track
	        var audioBuffer = this.sourceBuffer.audio;
	        var delta = Math.abs(audioBuffer.timestampOffset - data.start);
	
	        // adjust timestamp offset if time delta is greater than 100ms
	        if (delta > 0.1) {
	          var updating = audioBuffer.updating;
	
	          try {
	            audioBuffer.abort();
	          } catch (err) {
	            updating = true;
	            _logger.logger.warn('can not abort audio buffer: ' + err);
	          }
	
	          if (!updating) {
	            _logger.logger.warn('change mpeg audio timestamp offset from ' + audioBuffer.timestampOffset + ' to ' + data.start);
	            audioBuffer.timestampOffset = data.start;
	          } else {
	            this.audioTimestampOffset = data.start;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'onManifestParsed',
	    value: function onManifestParsed(data) {
	      var audioExpected = data.audio,
	          videoExpected = data.video,
	          sourceBufferNb = 0;
	      // in case of alt audio 2 BUFFER_CODECS events will be triggered, one per stream controller
	      // sourcebuffers will be created all at once when the expected nb of tracks will be reached
	      // in case alt audio is not used, only one BUFFER_CODEC event will be fired from main stream controller
	      // it will contain the expected nb of source buffers, no need to compute it
	      if (data.altAudio && (audioExpected || videoExpected)) {
	        sourceBufferNb = (audioExpected ? 1 : 0) + (videoExpected ? 1 : 0);
	        _logger.logger.log(sourceBufferNb + ' sourceBuffer(s) expected');
	      }
	      this.sourceBufferNb = sourceBufferNb;
	    }
	  }, {
	    key: 'onMediaAttaching',
	    value: function onMediaAttaching(data) {
	      var media = this.media = data.media;
	      if (media) {
	        // setup the media source
	        var ms = this.mediaSource = new MediaSource();
	        //Media Source listeners
	        this.onmso = this.onMediaSourceOpen.bind(this);
	        this.onmse = this.onMediaSourceEnded.bind(this);
	        this.onmsc = this.onMediaSourceClose.bind(this);
	        ms.addEventListener('sourceopen', this.onmso);
	        ms.addEventListener('sourceended', this.onmse);
	        ms.addEventListener('sourceclose', this.onmsc);
	        // link video and media Source
	        media.src = URL.createObjectURL(ms);
	      }
	    }
	  }, {
	    key: 'onMediaDetaching',
	    value: function onMediaDetaching() {
	      _logger.logger.log('media source detaching');
	      var ms = this.mediaSource;
	      if (ms) {
	        if (ms.readyState === 'open') {
	          try {
	            // endOfStream could trigger exception if any sourcebuffer is in updating state
	            // we don't really care about checking sourcebuffer state here,
	            // as we are anyway detaching the MediaSource
	            // let's just avoid this exception to propagate
	            ms.endOfStream();
	          } catch (err) {
	            _logger.logger.warn('onMediaDetaching:' + err.message + ' while calling endOfStream');
	          }
	        }
	        ms.removeEventListener('sourceopen', this.onmso);
	        ms.removeEventListener('sourceended', this.onmse);
	        ms.removeEventListener('sourceclose', this.onmsc);
	
	        // Detach properly the MediaSource from the HTMLMediaElement as
	        // suggested in https://github.com/w3c/media-source/issues/53.
	        if (this.media) {
	          URL.revokeObjectURL(this.media.src);
	          this.media.removeAttribute('src');
	          this.media.load();
	        }
	
	        this.mediaSource = null;
	        this.media = null;
	        this.pendingTracks = {};
	        this.tracks = {};
	        this.sourceBuffer = {};
	        this.flushRange = [];
	        this.segments = [];
	        this.appended = 0;
	      }
	      this.onmso = this.onmse = this.onmsc = null;
	      this.hls.trigger(_events2.default.MEDIA_DETACHED);
	    }
	  }, {
	    key: 'onMediaSourceOpen',
	    value: function onMediaSourceOpen() {
	      _logger.logger.log('media source opened');
	      this.hls.trigger(_events2.default.MEDIA_ATTACHED, { media: this.media });
	      var mediaSource = this.mediaSource;
	      if (mediaSource) {
	        // once received, don't listen anymore to sourceopen event
	        mediaSource.removeEventListener('sourceopen', this.onmso);
	      }
	      this.checkPendingTracks();
	    }
	  }, {
	    key: 'checkPendingTracks',
	    value: function checkPendingTracks() {
	      // if any buffer codecs pending, check if we have enough to create sourceBuffers
	      var pendingTracks = this.pendingTracks,
	          pendingTracksNb = Object.keys(pendingTracks).length;
	      // if any pending tracks and (if nb of pending tracks gt or equal than expected nb or if unknown expected nb)
	      if (pendingTracksNb && (this.sourceBufferNb <= pendingTracksNb || this.sourceBufferNb === 0)) {
	        // ok, let's create them now !
	        this.createSourceBuffers(pendingTracks);
	        this.pendingTracks = {};
	        // append any pending segments now !
	        this.doAppending();
	      }
	    }
	  }, {
	    key: 'onMediaSourceClose',
	    value: function onMediaSourceClose() {
	      _logger.logger.log('media source closed');
	    }
	  }, {
	    key: 'onMediaSourceEnded',
	    value: function onMediaSourceEnded() {
	      _logger.logger.log('media source ended');
	    }
	  }, {
	    key: 'onSBUpdateEnd',
	    value: function onSBUpdateEnd() {
	      // update timestampOffset
	      if (this.audioTimestampOffset) {
	        var audioBuffer = this.sourceBuffer.audio;
	        _logger.logger.warn('change mpeg audio timestamp offset from ' + audioBuffer.timestampOffset + ' to ' + this.audioTimestampOffset);
	        audioBuffer.timestampOffset = this.audioTimestampOffset;
	        delete this.audioTimestampOffset;
	      }
	
	      if (this._needsFlush) {
	        this.doFlush();
	      }
	
	      if (this._needsEos) {
	        this.checkEos();
	      }
	      this.appending = false;
	      var parent = this.parent;
	      // count nb of pending segments waiting for appending on this sourcebuffer
	      var pending = this.segments.reduce(function (counter, segment) {
	        return segment.parent === parent ? counter + 1 : counter;
	      }, 0);
	      this.hls.trigger(_events2.default.BUFFER_APPENDED, { parent: parent, pending: pending });
	
	      // don't append in flushing mode
	      if (!this._needsFlush) {
	        this.doAppending();
	      }
	
	      this.updateMediaElementDuration();
	    }
	  }, {
	    key: 'onSBUpdateError',
	    value: function onSBUpdateError(event) {
	      _logger.logger.error('sourceBuffer error:', event);
	      // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error
	      // this error might not always be fatal (it is fatal if decode error is set, in that case
	      // it will be followed by a mediaElement error ...)
	      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false });
	      // we don't need to do more than that, as accordin to the spec, updateend will be fired just after
	    }
	  }, {
	    key: 'onBufferReset',
	    value: function onBufferReset() {
	      var sourceBuffer = this.sourceBuffer;
	      for (var type in sourceBuffer) {
	        var sb = sourceBuffer[type];
	        try {
	          this.mediaSource.removeSourceBuffer(sb);
	          sb.removeEventListener('updateend', this.onsbue);
	          sb.removeEventListener('error', this.onsbe);
	        } catch (err) {}
	      }
	      this.sourceBuffer = {};
	      this.flushRange = [];
	      this.segments = [];
	      this.appended = 0;
	    }
	  }, {
	    key: 'onBufferCodecs',
	    value: function onBufferCodecs(tracks) {
	      // if source buffer(s) not created yet, appended buffer tracks in this.pendingTracks
	      // if sourcebuffers already created, do nothing ...
	      if (Object.keys(this.sourceBuffer).length === 0) {
	        for (var trackName in tracks) {
	          this.pendingTracks[trackName] = tracks[trackName];
	        }
	        var mediaSource = this.mediaSource;
	        if (mediaSource && mediaSource.readyState === 'open') {
	          // try to create sourcebuffers if mediasource opened
	          this.checkPendingTracks();
	        }
	      }
	    }
	  }, {
	    key: 'createSourceBuffers',
	    value: function createSourceBuffers(tracks) {
	      var sourceBuffer = this.sourceBuffer,
	          mediaSource = this.mediaSource;
	
	      for (var trackName in tracks) {
	        if (!sourceBuffer[trackName]) {
	          var track = tracks[trackName];
	          // use levelCodec as first priority
	          var codec = track.levelCodec || track.codec;
	          var mimeType = track.container + ';codecs=' + codec;
	          _logger.logger.log('creating sourceBuffer(' + mimeType + ')');
	          try {
	            var sb = sourceBuffer[trackName] = mediaSource.addSourceBuffer(mimeType);
	            sb.addEventListener('updateend', this.onsbue);
	            sb.addEventListener('error', this.onsbe);
	            this.tracks[trackName] = { codec: codec, container: track.container };
	            track.buffer = sb;
	          } catch (err) {
	            _logger.logger.error('error while trying to add sourceBuffer:' + err.message);
	            this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_ADD_CODEC_ERROR, fatal: false, err: err, mimeType: mimeType });
	          }
	        }
	      }
	      this.hls.trigger(_events2.default.BUFFER_CREATED, { tracks: tracks });
	    }
	  }, {
	    key: 'onBufferAppending',
	    value: function onBufferAppending(data) {
	      if (!this._needsFlush) {
	        if (!this.segments) {
	          this.segments = [data];
	        } else {
	          this.segments.push(data);
	        }
	        this.doAppending();
	      }
	    }
	  }, {
	    key: 'onBufferAppendFail',
	    value: function onBufferAppendFail(data) {
	      _logger.logger.error('sourceBuffer error:', data.event);
	      // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error
	      // this error might not always be fatal (it is fatal if decode error is set, in that case
	      // it will be followed by a mediaElement error ...)
	      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_APPENDING_ERROR, fatal: false });
	    }
	
	    // on BUFFER_EOS mark matching sourcebuffer(s) as ended and trigger checkEos()
	
	  }, {
	    key: 'onBufferEos',
	    value: function onBufferEos(data) {
	      var sb = this.sourceBuffer;
	      var dataType = data.type;
	      for (var type in sb) {
	        if (!dataType || type === dataType) {
	          if (!sb[type].ended) {
	            sb[type].ended = true;
	            _logger.logger.log(type + ' sourceBuffer now EOS');
	          }
	        }
	      }
	      this.checkEos();
	    }
	
	    // if all source buffers are marked as ended, signal endOfStream() to MediaSource.
	
	  }, {
	    key: 'checkEos',
	    value: function checkEos() {
	      var sb = this.sourceBuffer,
	          mediaSource = this.mediaSource;
	      if (!mediaSource || mediaSource.readyState !== 'open') {
	        this._needsEos = false;
	        return;
	      }
	      for (var type in sb) {
	        var sbobj = sb[type];
	        if (!sbobj.ended) {
	          return;
	        }
	        if (sbobj.updating) {
	          this._needsEos = true;
	          return;
	        }
	      }
	      _logger.logger.log('all media data available, signal endOfStream() to MediaSource and stop loading fragment');
	      //Notify the media element that it now has all of the media data
	      try {
	        mediaSource.endOfStream();
	      } catch (e) {
	        _logger.logger.warn('exception while calling mediaSource.endOfStream()');
	      }
	      this._needsEos = false;
	    }
	  }, {
	    key: 'onBufferFlushing',
	    value: function onBufferFlushing(data) {
	      this.flushRange.push({ start: data.startOffset, end: data.endOffset, type: data.type });
	      // attempt flush immediatly
	      this.flushBufferCounter = 0;
	      this.doFlush();
	    }
	  }, {
	    key: 'onLevelUpdated',
	    value: function onLevelUpdated(event) {
	      var details = event.details;
	      if (details.fragments.length === 0) {
	        return;
	      }
	      this._levelDuration = details.totalduration + details.fragments[0].start;
	      this.updateMediaElementDuration();
	    }
	
	    // https://github.com/video-dev/hls.js/issues/355
	
	  }, {
	    key: 'updateMediaElementDuration',
	    value: function updateMediaElementDuration() {
	      var media = this.media,
	          mediaSource = this.mediaSource,
	          sourceBuffer = this.sourceBuffer,
	          levelDuration = this._levelDuration;
	      if (levelDuration === null || !media || !mediaSource || !sourceBuffer || media.readyState === 0 || mediaSource.readyState !== 'open') {
	        return;
	      }
	      for (var type in sourceBuffer) {
	        if (sourceBuffer[type].updating) {
	          // can't set duration whilst a buffer is updating
	          return;
	        }
	      }
	      if (this._msDuration === null) {
	        // initialise to the value that the media source is reporting
	        this._msDuration = mediaSource.duration;
	      }
	      var duration = media.duration;
	      // levelDuration was the last value we set.
	      // not using mediaSource.duration as the browser may tweak this value
	      // only update mediasource duration if its value increase, this is to avoid
	      // flushing already buffered portion when switching between quality level
	      if (levelDuration > this._msDuration && levelDuration > duration || duration === Infinity || isNaN(duration)) {
	        _logger.logger.log('Updating mediasource duration to ' + levelDuration.toFixed(3));
	        this._msDuration = mediaSource.duration = levelDuration;
	      }
	    }
	  }, {
	    key: 'doFlush',
	    value: function doFlush() {
	      // loop through all buffer ranges to flush
	      while (this.flushRange.length) {
	        var range = this.flushRange[0];
	        // flushBuffer will abort any buffer append in progress and flush Audio/Video Buffer
	        if (this.flushBuffer(range.start, range.end, range.type)) {
	          // range flushed, remove from flush array
	          this.flushRange.shift();
	          this.flushBufferCounter = 0;
	        } else {
	          this._needsFlush = true;
	          // avoid looping, wait for SB update end to retrigger a flush
	          return;
	        }
	      }
	      if (this.flushRange.length === 0) {
	        // everything flushed
	        this._needsFlush = false;
	
	        // let's recompute this.appended, which is used to avoid flush looping
	        var appended = 0;
	        var sourceBuffer = this.sourceBuffer;
	        try {
	          for (var type in sourceBuffer) {
	            appended += sourceBuffer[type].buffered.length;
	          }
	        } catch (error) {
	          // error could be thrown while accessing buffered, in case sourcebuffer has already been removed from MediaSource
	          // this is harmess at this stage, catch this to avoid reporting an internal exception
	          _logger.logger.error('error while accessing sourceBuffer.buffered');
	        }
	        this.appended = appended;
	        this.hls.trigger(_events2.default.BUFFER_FLUSHED);
	      }
	    }
	  }, {
	    key: 'doAppending',
	    value: function doAppending() {
	      var hls = this.hls,
	          sourceBuffer = this.sourceBuffer,
	          segments = this.segments;
	      if (Object.keys(sourceBuffer).length) {
	        if (this.media.error) {
	          this.segments = [];
	          _logger.logger.error('trying to append although a media error occured, flush segment and abort');
	          return;
	        }
	        if (this.appending) {
	          //logger.log(`sb appending in progress`);
	          return;
	        }
	        if (segments && segments.length) {
	          var segment = segments.shift();
	          try {
	            var type = segment.type,
	                sb = sourceBuffer[type];
	            if (sb) {
	              if (!sb.updating) {
	                // reset sourceBuffer ended flag before appending segment
	                sb.ended = false;
	                //logger.log(`appending ${segment.content} ${type} SB, size:${segment.data.length}, ${segment.parent}`);
	                this.parent = segment.parent;
	                sb.appendBuffer(segment.data);
	                this.appendError = 0;
	                this.appended++;
	                this.appending = true;
	              } else {
	                segments.unshift(segment);
	              }
	            } else {
	              // in case we don't have any source buffer matching with this segment type,
	              // it means that Mediasource fails to create sourcebuffer
	              // discard this segment, and trigger update end
	              this.onSBUpdateEnd();
	            }
	          } catch (err) {
	            // in case any error occured while appending, put back segment in segments table
	            _logger.logger.error('error while trying to append buffer:' + err.message);
	            segments.unshift(segment);
	            var event = { type: _errors.ErrorTypes.MEDIA_ERROR, parent: segment.parent };
	            if (err.code !== 22) {
	              if (this.appendError) {
	                this.appendError++;
	              } else {
	                this.appendError = 1;
	              }
	              event.details = _errors.ErrorDetails.BUFFER_APPEND_ERROR;
	              /* with UHD content, we could get loop of quota exceeded error until
	                browser is able to evict some data from sourcebuffer. retrying help recovering this
	              */
	              if (this.appendError > hls.config.appendErrorMaxRetry) {
	                _logger.logger.log('fail ' + hls.config.appendErrorMaxRetry + ' times to append segment in sourceBuffer');
	                segments = [];
	                event.fatal = true;
	                hls.trigger(_events2.default.ERROR, event);
	                return;
	              } else {
	                event.fatal = false;
	                hls.trigger(_events2.default.ERROR, event);
	              }
	            } else {
	              // QuotaExceededError: http://www.w3.org/TR/html5/infrastructure.html#quotaexceedederror
	              // let's stop appending any segments, and report BUFFER_FULL_ERROR error
	              this.segments = [];
	              event.details = _errors.ErrorDetails.BUFFER_FULL_ERROR;
	              event.fatal = false;
	              hls.trigger(_events2.default.ERROR, event);
	              return;
	            }
	          }
	        }
	      }
	    }
	
	    /*
	      flush specified buffered range,
	      return true once range has been flushed.
	      as sourceBuffer.remove() is asynchronous, flushBuffer will be retriggered on sourceBuffer update end
	    */
	
	  }, {
	    key: 'flushBuffer',
	    value: function flushBuffer(startOffset, endOffset, typeIn) {
	      var sb,
	          i,
	          bufStart,
	          bufEnd,
	          flushStart,
	          flushEnd,
	          sourceBuffer = this.sourceBuffer;
	      if (Object.keys(sourceBuffer).length) {
	        _logger.logger.log('flushBuffer,pos/start/end: ' + this.media.currentTime.toFixed(3) + '/' + startOffset + '/' + endOffset);
	        // safeguard to avoid infinite looping : don't try to flush more than the nb of appended segments
	        if (this.flushBufferCounter < this.appended) {
	          for (var type in sourceBuffer) {
	            // check if sourcebuffer type is defined (typeIn): if yes, let's only flush this one
	            // if no, let's flush all sourcebuffers
	            if (typeIn && type !== typeIn) {
	              continue;
	            }
	            sb = sourceBuffer[type];
	            // we are going to flush buffer, mark source buffer as 'not ended'
	            sb.ended = false;
	            if (!sb.updating) {
	              try {
	                for (i = 0; i < sb.buffered.length; i++) {
	                  bufStart = sb.buffered.start(i);
	                  bufEnd = sb.buffered.end(i);
	                  // workaround firefox not able to properly flush multiple buffered range.
	                  if (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1 && endOffset === Number.POSITIVE_INFINITY) {
	                    flushStart = startOffset;
	                    flushEnd = endOffset;
	                  } else {
	                    flushStart = Math.max(bufStart, startOffset);
	                    flushEnd = Math.min(bufEnd, endOffset);
	                  }
	                  /* sometimes sourcebuffer.remove() does not flush
	                     the exact expected time range.
	                     to avoid rounding issues/infinite loop,
	                     only flush buffer range of length greater than 500ms.
	                  */
	                  if (Math.min(flushEnd, bufEnd) - flushStart > 0.5) {
	                    this.flushBufferCounter++;
	                    _logger.logger.log('flush ' + type + ' [' + flushStart + ',' + flushEnd + '], of [' + bufStart + ',' + bufEnd + '], pos:' + this.media.currentTime);
	                    sb.remove(flushStart, flushEnd);
	                    return false;
	                  }
	                }
	              } catch (e) {
	                _logger.logger.warn('exception while accessing sourcebuffer, it might have been removed from MediaSource');
	              }
	            } else {
	              //logger.log('abort ' + type + ' append in progress');
	              // this will abort any appending in progress
	              //sb.abort();
	              _logger.logger.warn('cannot flush, sb updating in progress');
	              return false;
	            }
	          }
	        } else {
	          _logger.logger.warn('abort flushing too many retries');
	        }
	        _logger.logger.log('buffer flushed');
	      }
	      // everything flushed !
	      return true;
	    }
	  }]);
	
	  return BufferController;
	}(_eventHandler2.default);
	
	exports.default = BufferController;
	
	},{"30":30,"31":31,"32":32,"50":50}],9:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * cap stream level to media size dimension controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var CapLevelController = function (_EventHandler) {
	  _inherits(CapLevelController, _EventHandler);
	
	  function CapLevelController(hls) {
	    _classCallCheck(this, CapLevelController);
	
	    return _possibleConstructorReturn(this, (CapLevelController.__proto__ || Object.getPrototypeOf(CapLevelController)).call(this, hls, _events2.default.FPS_DROP_LEVEL_CAPPING, _events2.default.MEDIA_ATTACHING, _events2.default.MANIFEST_PARSED));
	  }
	
	  _createClass(CapLevelController, [{
	    key: 'destroy',
	    value: function destroy() {
	      if (this.hls.config.capLevelToPlayerSize) {
	        this.media = this.restrictedLevels = null;
	        this.autoLevelCapping = Number.POSITIVE_INFINITY;
	        if (this.timer) {
	          this.timer = clearInterval(this.timer);
	        }
	      }
	    }
	  }, {
	    key: 'onFpsDropLevelCapping',
	    value: function onFpsDropLevelCapping(data) {
	      if (!this.restrictedLevels) {
	        this.restrictedLevels = [];
	      }
	      if (!this.isLevelRestricted(data.droppedLevel)) {
	        this.restrictedLevels.push(data.droppedLevel);
	      }
	    }
	  }, {
	    key: 'onMediaAttaching',
	    value: function onMediaAttaching(data) {
	      this.media = data.media instanceof HTMLVideoElement ? data.media : null;
	    }
	  }, {
	    key: 'onManifestParsed',
	    value: function onManifestParsed(data) {
	      var hls = this.hls;
	      if (hls.config.capLevelToPlayerSize) {
	        this.autoLevelCapping = Number.POSITIVE_INFINITY;
	        this.levels = data.levels;
	        hls.firstLevel = this.getMaxLevel(data.firstLevel);
	        clearInterval(this.timer);
	        this.timer = setInterval(this.detectPlayerSize.bind(this), 1000);
	        this.detectPlayerSize();
	      }
	    }
	  }, {
	    key: 'detectPlayerSize',
	    value: function detectPlayerSize() {
	      if (this.media) {
	        var levelsLength = this.levels ? this.levels.length : 0;
	        if (levelsLength) {
	          var hls = this.hls;
	          hls.autoLevelCapping = this.getMaxLevel(levelsLength - 1);
	          if (hls.autoLevelCapping > this.autoLevelCapping) {
	            // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch
	            // usually happen when the user go to the fullscreen mode.
	            hls.streamController.nextLevelSwitch();
	          }
	          this.autoLevelCapping = hls.autoLevelCapping;
	        }
	      }
	    }
	
	    /*
	    * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)
	    */
	
	  }, {
	    key: 'getMaxLevel',
	    value: function getMaxLevel(capLevelIndex) {
	      var result = 0,
	          i = void 0,
	          level = void 0,
	          mWidth = this.mediaWidth,
	          mHeight = this.mediaHeight,
	          lWidth = 0,
	          lHeight = 0;
	
	      for (i = 0; i <= capLevelIndex; i++) {
	        level = this.levels[i];
	        if (this.isLevelRestricted(i)) {
	          break;
	        }
	        result = i;
	        lWidth = level.width;
	        lHeight = level.height;
	        if (mWidth <= lWidth || mHeight <= lHeight) {
	          break;
	        }
	      }
	      return result;
	    }
	  }, {
	    key: 'isLevelRestricted',
	    value: function isLevelRestricted(level) {
	      return this.restrictedLevels && this.restrictedLevels.indexOf(level) !== -1 ? true : false;
	    }
	  }, {
	    key: 'contentScaleFactor',
	    get: function get() {
	      var pixelRatio = 1;
	      try {
	        pixelRatio = window.devicePixelRatio;
	      } catch (e) {}
	      return pixelRatio;
	    }
	  }, {
	    key: 'mediaWidth',
	    get: function get() {
	      var width = void 0;
	      var media = this.media;
	      if (media) {
	        width = media.width || media.clientWidth || media.offsetWidth;
	        width *= this.contentScaleFactor;
	      }
	      return width;
	    }
	  }, {
	    key: 'mediaHeight',
	    get: function get() {
	      var height = void 0;
	      var media = this.media;
	      if (media) {
	        height = media.height || media.clientHeight || media.offsetHeight;
	        height *= this.contentScaleFactor;
	      }
	      return height;
	    }
	  }]);
	
	  return CapLevelController;
	}(_eventHandler2.default);
	
	exports.default = CapLevelController;
	
	},{"31":31,"32":32}],10:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	ontroller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var FPSController = function (_EventHandler) {
	  _inherits(FPSController, _EventHandler);
	
	  function FPSController(hls) {
	    _classCallCheck(this, FPSController);
	
	    return _possibleConstructorReturn(this, (FPSController.__proto__ || Object.getPrototypeOf(FPSController)).call(this, hls, _events2.default.MEDIA_ATTACHING));
	  }
	
	  _createClass(FPSController, [{
	    key: 'destroy',
	    value: function destroy() {
	      if (this.timer) {
	        clearInterval(this.timer);
	      }
	      this.isVideoPlaybackQualityAvailable = false;
	    }
	  }, {
	    key: 'onMediaAttaching',
	    value: function onMediaAttaching(data) {
	      var config = this.hls.config;
	      if (config.capLevelOnFPSDrop) {
	        var video = this.video = data.media instanceof HTMLVideoElement ? data.media : null;
	        if (typeof video.getVideoPlaybackQuality === 'function') {
	          this.isVideoPlaybackQualityAvailable = true;
	        }
	        clearInterval(this.timer);
	        this.timer = setInterval(this.checkFPSInterval.bind(this), config.fpsDroppedMonitoringPeriod);
	      }
	    }
	  }, {
	    key: 'checkFPS',
	    value: function checkFPS(video, decodedFrames, droppedFrames) {
	      var currentTime = performance.now();
	      if (decodedFrames) {
	        if (this.lastTime) {
	          var currentPeriod = currentTime - this.lastTime,
	              currentDropped = droppedFrames - this.lastDroppedFrames,
	              currentDecoded = decodedFrames - this.lastDecodedFrames,
	              droppedFPS = 1000 * currentDropped / currentPeriod,
	              hls = this.hls;
	          hls.trigger(_events2.default.FPS_DROP, { currentDropped: currentDropped, currentDecoded: currentDecoded, totalDroppedFrames: droppedFrames });
	          if (droppedFPS > 0) {
	            //logger.log('checkFPS : droppedFPS/decodedFPS:' + droppedFPS/(1000 * currentDecoded / currentPeriod));
	            if (currentDropped > hls.config.fpsDroppedMonitoringThreshold * currentDecoded) {
	              var currentLevel = hls.currentLevel;
	              _logger.logger.warn('drop FPS ratio greater than max allowed value for currentLevel: ' + currentLevel);
	              if (currentLevel > 0 && (hls.autoLevelCapping === -1 || hls.autoLevelCapping >= currentLevel)) {
	                currentLevel = currentLevel - 1;
	                hls.trigger(_events2.default.FPS_DROP_LEVEL_CAPPING, { level: currentLevel, droppedLevel: hls.currentLevel });
	                hls.autoLevelCapping = currentLevel;
	                hls.streamController.nextLevelSwitch();
	              }
	            }
	          }
	        }
	        this.lastTime = currentTime;
	        this.lastDroppedFrames = droppedFrames;
	        this.lastDecodedFrames = decodedFrames;
	      }
	    }
	  }, {
	    key: 'checkFPSInterval',
	    value: function checkFPSInterval() {
	      var video = this.video;
	      if (video) {
	        if (this.isVideoPlaybackQualityAvailable) {
	          var videoPlaybackQuality = video.getVideoPlaybackQuality();
	          this.checkFPS(video, videoPlaybackQuality.totalVideoFrames, videoPlaybackQuality.droppedVideoFrames);
	        } else {
	          this.checkFPS(video, video.webkitDecodedFrameCount, video.webkitDroppedFrameCount);
	        }
	      }
	    }
	  }]);
	
	  return FPSController;
	}(_eventHandler2.default);
	
	exports.default = FPSController;
	
	},{"31":31,"32":32,"50":50}],11:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _logger = _dereq_(50);
	
	var _errors = _dereq_(30);
	
	var _bufferHelper = _dereq_(34);
	
	var _bufferHelper2 = _interopRequireDefault(_bufferHelper);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Level Controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var LevelController = function (_EventHandler) {
	  _inherits(LevelController, _EventHandler);
	
	  function LevelController(hls) {
	    _classCallCheck(this, LevelController);
	
	    var _this = _possibleConstructorReturn(this, (LevelController.__proto__ || Object.getPrototypeOf(LevelController)).call(this, hls, _events2.default.MANIFEST_LOADED, _events2.default.LEVEL_LOADED, _events2.default.FRAG_LOADED, _events2.default.ERROR));
	
	    _this.ontick = _this.tick.bind(_this);
	    _this._manualLevel = -1;
	    return _this;
	  }
	
	  _createClass(LevelController, [{
	    key: 'destroy',
	    value: function destroy() {
	      if (this.timer) {
	        clearTimeout(this.timer);
	        this.timer = null;
	      }
	      this._manualLevel = -1;
	    }
	  }, {
	    key: 'startLoad',
	    value: function startLoad() {
	      this.canload = true;
	      var levels = this._levels;
	      // clean up live level details to force reload them, and reset load errors
	      if (levels) {
	        levels.forEach(function (level) {
	          level.loadError = 0;
	          var levelDetails = level.details;
	          if (levelDetails && levelDetails.live) {
	            level.details = undefined;
	          }
	        });
	      }
	      // speed up live playlist refresh if timer exists
	      if (this.timer) {
	        this.tick();
	      }
	    }
	  }, {
	    key: 'stopLoad',
	    value: function stopLoad() {
	      this.canload = false;
	    }
	  }, {
	    key: 'onManifestLoaded',
	    value: function onManifestLoaded(data) {
	      var levels0 = [],
	          levels = [],
	          bitrateStart,
	          bitrateSet = {},
	          videoCodecFound = false,
	          audioCodecFound = false,
	          hls = this.hls,
	          brokenmp4inmp3 = /chrome|firefox/.test(navigator.userAgent.toLowerCase()),
	          checkSupported = function checkSupported(type, codec) {
	        return MediaSource.isTypeSupported(type + '/mp4;codecs=' + codec);
	      };
	
	      // regroup redundant level together
	      data.levels.forEach(function (level) {
	        if (level.videoCodec) {
	          videoCodecFound = true;
	        }
	        // erase audio codec info if browser does not support mp4a.40.34. demuxer will autodetect codec and fallback to mpeg/audio
	        if (brokenmp4inmp3 && level.audioCodec && level.audioCodec.indexOf('mp4a.40.34') !== -1) {
	          level.audioCodec = undefined;
	        }
	        if (level.audioCodec || level.attrs && level.attrs.AUDIO) {
	          audioCodecFound = true;
	        }
	        var redundantLevelId = bitrateSet[level.bitrate];
	        if (redundantLevelId === undefined) {
	          bitrateSet[level.bitrate] = levels0.length;
	          level.url = [level.url];
	          level.urlId = 0;
	          levels0.push(level);
	        } else {
	          levels0[redundantLevelId].url.push(level.url);
	        }
	      });
	
	      // remove audio-only level if we also have levels with audio+video codecs signalled
	      if (videoCodecFound && audioCodecFound) {
	        levels0.forEach(function (level) {
	          if (level.videoCodec) {
	            levels.push(level);
	          }
	        });
	      } else {
	        levels = levels0;
	      }
	      // only keep level with supported audio/video codecs
	      levels = levels.filter(function (level) {
	        var audioCodec = level.audioCodec,
	            videoCodec = level.videoCodec;
	        return (!audioCodec || checkSupported('audio', audioCodec)) && (!videoCodec || checkSupported('video', videoCodec));
	      });
	
	      if (levels.length) {
	        // start bitrate is the first bitrate of the manifest
	        bitrateStart = levels[0].bitrate;
	        // sort level on bitrate
	        levels.sort(function (a, b) {
	          return a.bitrate - b.bitrate;
	        });
	        this._levels = levels;
	        // find index of first level in sorted levels
	        for (var i = 0; i < levels.length; i++) {
	          if (levels[i].bitrate === bitrateStart) {
	            this._firstLevel = i;
	            _logger.logger.log('manifest loaded,' + levels.length + ' level(s) found, first bitrate:' + bitrateStart);
	            break;
	          }
	        }
	        hls.trigger(_events2.default.MANIFEST_PARSED, { levels: levels, firstLevel: this._firstLevel, stats: data.stats, audio: audioCodecFound, video: videoCodecFound, altAudio: data.audioTracks.length > 0 });
	      } else {
	        hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR, fatal: true, url: hls.url, reason: 'no level with compatible codecs found in manifest' });
	      }
	      return;
	    }
	  }, {
	    key: 'setLevelInternal',
	    value: function setLevelInternal(newLevel) {
	      var levels = this._levels;
	      var hls = this.hls;
	      // check if level idx is valid
	      if (newLevel >= 0 && newLevel < levels.length) {
	        // stopping live reloading timer if any
	        if (this.timer) {
	          clearTimeout(this.timer);
	          this.timer = null;
	        }
	        if (this._level !== newLevel) {
	          _logger.logger.log('switching to level ' + newLevel);
	          this._level = newLevel;
	          var levelProperties = levels[newLevel];
	          levelProperties.level = newLevel;
	          // LEVEL_SWITCH to be deprecated in next major release
	          hls.trigger(_events2.default.LEVEL_SWITCH, levelProperties);
	          hls.trigger(_events2.default.LEVEL_SWITCHING, levelProperties);
	        }
	        var level = levels[newLevel],
	            levelDetails = level.details;
	        // check if we need to load playlist for this level
	        if (!levelDetails || levelDetails.live === true) {
	          // level not retrieved yet, or live playlist we need to (re)load it
	          var urlId = level.urlId;
	          hls.trigger(_events2.default.LEVEL_LOADING, { url: level.url[urlId], level: newLevel, id: urlId });
	        }
	      } else {
	        // invalid level id given, trigger error
	        hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.LEVEL_SWITCH_ERROR, level: newLevel, fatal: false, reason: 'invalid level idx' });
	      }
	    }
	  }, {
	    key: 'onError',
	    value: function onError(data) {
	      if (data.fatal) {
	        return;
	      }
	
	      var details = data.details,
	          hls = this.hls,
	          levelId = void 0,
	          level = void 0,
	          levelError = false;
	      // try to recover not fatal errors
	      switch (details) {
	        case _errors.ErrorDetails.FRAG_LOAD_ERROR:
	        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:
	        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:
	        case _errors.ErrorDetails.KEY_LOAD_ERROR:
	        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:
	          levelId = data.frag.level;
	          break;
	        case _errors.ErrorDetails.LEVEL_LOAD_ERROR:
	        case _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT:
	          levelId = data.context.level;
	          levelError = true;
	          break;
	        case _errors.ErrorDetails.REMUX_ALLOC_ERROR:
	          levelId = data.level;
	          break;
	        default:
	          break;
	      }
	      /* try to switch to a redundant stream if any available.
	       * if no redundant stream available, emergency switch down (if in auto mode and current level not 0)
	       * otherwise, we cannot recover this network error ...
	       */
	      if (levelId !== undefined) {
	        level = this._levels[levelId];
	        if (!level.loadError) {
	          level.loadError = 1;
	        } else {
	          level.loadError++;
	        }
	        // if any redundant streams available and if we haven't try them all (level.loadError is reseted on successful frag/level load.
	        // if level.loadError reaches nbRedundantLevel it means that we tried them all, no hope  => let's switch down
	        var nbRedundantLevel = level.url.length;
	        if (nbRedundantLevel > 1 && level.loadError < nbRedundantLevel) {
	          level.urlId = (level.urlId + 1) % nbRedundantLevel;
	          level.details = undefined;
	          _logger.logger.warn('level controller,' + details + ' for level ' + levelId + ': switching to redundant stream id ' + level.urlId);
	        } else {
	          // we could try to recover if in auto mode and current level not lowest level (0)
	          var recoverable = this._manualLevel === -1 && levelId;
	          if (recoverable) {
	            _logger.logger.warn('level controller,' + details + ': switch-down for next fragment');
	            hls.nextAutoLevel = Math.max(0, levelId - 1);
	          } else if (level && level.details && level.details.live) {
	            _logger.logger.warn('level controller,' + details + ' on live stream, discard');
	            if (levelError) {
	              // reset this._level so that another call to set level() will retrigger a frag load
	              this._level = undefined;
	            }
	            // other errors are handled by stream controller
	          } else if (details === _errors.ErrorDetails.LEVEL_LOAD_ERROR || details === _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT) {
	            var media = hls.media,
	
	            // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end
	            mediaBuffered = media && _bufferHelper2.default.isBuffered(media, media.currentTime) && _bufferHelper2.default.isBuffered(media, media.currentTime + 0.5);
	            if (mediaBuffered) {
	              var retryDelay = hls.config.levelLoadingRetryDelay;
	              _logger.logger.warn('level controller,' + details + ', but media buffered, retry in ' + retryDelay + 'ms');
	              this.timer = setTimeout(this.ontick, retryDelay);
	            } else {
	              _logger.logger.error('cannot recover ' + details + ' error');
	              this._level = undefined;
	              // stopping live reloading timer if any
	              if (this.timer) {
	                clearTimeout(this.timer);
	                this.timer = null;
	              }
	              // switch error to fatal
	              data.fatal = true;
	            }
	          }
	        }
	      }
	    }
	
	    // reset level load error counter on successful frag loaded
	
	  }, {
	    key: 'onFragLoaded',
	    value: function onFragLoaded(data) {
	      var fragLoaded = data.frag;
	      if (fragLoaded && fragLoaded.type === 'main') {
	        var level = this._levels[fragLoaded.level];
	        if (level) {
	          level.loadError = 0;
	        }
	      }
	    }
	  }, {
	    key: 'onLevelLoaded',
	    value: function onLevelLoaded(data) {
	      var levelId = data.level;
	      // only process level loaded events matching with expected level
	      if (levelId === this._level) {
	        var curLevel = this._levels[levelId];
	        // reset level load error counter on successful level loaded
	        curLevel.loadError = 0;
	        var newDetails = data.details;
	        // if current playlist is a live playlist, arm a timer to reload it
	        if (newDetails.live) {
	          var reloadInterval = 1000 * (newDetails.averagetargetduration ? newDetails.averagetargetduration : newDetails.targetduration),
	              curDetails = curLevel.details;
	          if (curDetails && newDetails.endSN === curDetails.endSN) {
	            // follow HLS Spec, If the client reloads a Playlist file and finds that it has not
	            // changed then it MUST wait for a period of one-half the target
	            // duration before retrying.
	            reloadInterval /= 2;
	            _logger.logger.log('same live playlist, reload twice faster');
	          }
	          // decrement reloadInterval with level loading delay
	          reloadInterval -= performance.now() - data.stats.trequest;
	          // in any case, don't reload more than every second
	          reloadInterval = Math.max(1000, Math.round(reloadInterval));
	          _logger.logger.log('live playlist, reload in ' + reloadInterval + ' ms');
	          this.timer = setTimeout(this.ontick, reloadInterval);
	        } else {
	          this.timer = null;
	        }
	      }
	    }
	  }, {
	    key: 'tick',
	    value: function tick() {
	      var levelId = this._level;
	      if (levelId !== undefined && this.canload) {
	        var level = this._levels[levelId];
	        if (level && level.url) {
	          var urlId = level.urlId;
	          this.hls.trigger(_events2.default.LEVEL_LOADING, { url: level.url[urlId], level: levelId, id: urlId });
	        }
	      }
	    }
	  }, {
	    key: 'levels',
	    get: function get() {
	      return this._levels;
	    }
	  }, {
	    key: 'level',
	    get: function get() {
	      return this._level;
	    },
	    set: function set(newLevel) {
	      var levels = this._levels;
	      if (levels && levels.length > newLevel) {
	        if (this._level !== newLevel || levels[newLevel].details === undefined) {
	          this.setLevelInternal(newLevel);
	        }
	      }
	    }
	  }, {
	    key: 'manualLevel',
	    get: function get() {
	      return this._manualLevel;
	    },
	    set: function set(newLevel) {
	      this._manualLevel = newLevel;
	      if (this._startLevel === undefined) {
	        this._startLevel = newLevel;
	      }
	      if (newLevel !== -1) {
	        this.level = newLevel;
	      }
	    }
	  }, {
	    key: 'firstLevel',
	    get: function get() {
	      return this._firstLevel;
	    },
	    set: function set(newLevel) {
	      this._firstLevel = newLevel;
	    }
	  }, {
	    key: 'startLevel',
	    get: function get() {
	      // hls.startLevel takes precedence over config.startLevel
	      // if none of these values are defined, fallback on this._firstLevel (first quality level appearing in variant manifest)
	      if (this._startLevel === undefined) {
	        var configStartLevel = this.hls.config.startLevel;
	        if (configStartLevel !== undefined) {
	          return configStartLevel;
	        } else {
	          return this._firstLevel;
	        }
	      } else {
	        return this._startLevel;
	      }
	    },
	    set: function set(newLevel) {
	      this._startLevel = newLevel;
	    }
	  }, {
	    key: 'nextLoadLevel',
	    get: function get() {
	      if (this._manualLevel !== -1) {
	        return this._manualLevel;
	      } else {
	        return this.hls.nextAutoLevel;
	      }
	    },
	    set: function set(nextLevel) {
	      this.level = nextLevel;
	      if (this._manualLevel === -1) {
	        this.hls.nextAutoLevel = nextLevel;
	      }
	    }
	  }]);
	
	  return LevelController;
	}(_eventHandler2.default);
	
	exports.default = LevelController;
	
	},{"30":30,"31":31,"32":32,"34":34,"50":50}],12:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _binarySearch = _dereq_(45);
	
	var _binarySearch2 = _interopRequireDefault(_binarySearch);
	
	var _bufferHelper = _dereq_(34);
	
	var _bufferHelper2 = _interopRequireDefault(_bufferHelper);
	
	var _demuxer = _dereq_(24);
	
	var _demuxer2 = _interopRequireDefault(_demuxer);
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _levelHelper = _dereq_(35);
	
	var _levelHelper2 = _interopRequireDefault(_levelHelper);
	
	var _timeRanges = _dereq_(51);
	
	var _timeRanges2 = _interopRequireDefault(_timeRanges);
	
	var _errors = _dereq_(30);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Stream Controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var State = {
	  STOPPED: 'STOPPED',
	  IDLE: 'IDLE',
	  KEY_LOADING: 'KEY_LOADING',
	  FRAG_LOADING: 'FRAG_LOADING',
	  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',
	  WAITING_LEVEL: 'WAITING_LEVEL',
	  PARSING: 'PARSING',
	  PARSED: 'PARSED',
	  BUFFER_FLUSHING: 'BUFFER_FLUSHING',
	  ENDED: 'ENDED',
	  ERROR: 'ERROR'
	};
	
	var StreamController = function (_EventHandler) {
	  _inherits(StreamController, _EventHandler);
	
	  function StreamController(hls) {
	    _classCallCheck(this, StreamController);
	
	    var _this = _possibleConstructorReturn(this, (StreamController.__proto__ || Object.getPrototypeOf(StreamController)).call(this, hls, _events2.default.MEDIA_ATTACHED, _events2.default.MEDIA_DETACHING, _events2.default.MANIFEST_LOADING, _events2.default.MANIFEST_PARSED, _events2.default.LEVEL_LOADED, _events2.default.KEY_LOADED, _events2.default.FRAG_LOADED, _events2.default.FRAG_LOAD_EMERGENCY_ABORTED, _events2.default.FRAG_PARSING_INIT_SEGMENT, _events2.default.FRAG_PARSING_DATA, _events2.default.FRAG_PARSED, _events2.default.ERROR, _events2.default.AUDIO_TRACK_SWITCHING, _events2.default.AUDIO_TRACK_SWITCHED, _events2.default.BUFFER_CREATED, _events2.default.BUFFER_APPENDED, _events2.default.BUFFER_FLUSHED));
	
	    _this.config = hls.config;
	    _this.audioCodecSwap = false;
	    _this.ticks = 0;
	    _this._state = State.STOPPED;
	    _this.ontick = _this.tick.bind(_this);
	    return _this;
	  }
	
	  _createClass(StreamController, [{
	    key: 'destroy',
	    value: function destroy() {
	      this.stopLoad();
	      if (this.timer) {
	        clearInterval(this.timer);
	        this.timer = null;
	      }
	      _eventHandler2.default.prototype.destroy.call(this);
	      this.state = State.STOPPED;
	    }
	  }, {
	    key: 'startLoad',
	    value: function startLoad(startPosition) {
	      if (this.levels) {
	        var lastCurrentTime = this.lastCurrentTime,
	            hls = this.hls;
	        this.stopLoad();
	        if (!this.timer) {
	          this.timer = setInterval(this.ontick, 100);
	        }
	        this.level = -1;
	        this.fragLoadError = 0;
	        if (!this.startFragRequested) {
	          // determine load level
	          var startLevel = hls.startLevel;
	          if (startLevel === -1) {
	            // -1 : guess start Level by doing a bitrate test by loading first fragment of lowest quality level
	            startLevel = 0;
	            this.bitrateTest = true;
	          }
	          // set new level to playlist loader : this will trigger start level load
	          // hls.nextLoadLevel remains until it is set to a new value or until a new frag is successfully loaded
	          this.level = hls.nextLoadLevel = startLevel;
	          this.loadedmetadata = false;
	        }
	        // if startPosition undefined but lastCurrentTime set, set startPosition to last currentTime
	        if (lastCurrentTime > 0 && startPosition === -1) {
	          _logger.logger.log('override startPosition with lastCurrentTime @' + lastCurrentTime.toFixed(3));
	          startPosition = lastCurrentTime;
	        }
	        this.state = State.IDLE;
	        this.nextLoadPosition = this.startPosition = this.lastCurrentTime = startPosition;
	        this.tick();
	      } else {
	        this.forceStartLoad = true;
	        this.state = State.STOPPED;
	      }
	    }
	  }, {
	    key: 'stopLoad',
	    value: function stopLoad() {
	      var frag = this.fragCurrent;
	      if (frag) {
	        if (frag.loader) {
	          frag.loader.abort();
	        }
	        this.fragCurrent = null;
	      }
	      this.fragPrevious = null;
	      if (this.demuxer) {
	        this.demuxer.destroy();
	        this.demuxer = null;
	      }
	      this.state = State.STOPPED;
	      this.forceStartLoad = false;
	    }
	  }, {
	    key: 'tick',
	    value: function tick() {
	      this.ticks++;
	      if (this.ticks === 1) {
	        this.doTick();
	        if (this.ticks > 1) {
	          setTimeout(this.tick, 1);
	        }
	        this.ticks = 0;
	      }
	    }
	  }, {
	    key: 'doTick',
	    value: function doTick() {
	      switch (this.state) {
	        case State.ERROR:
	          //don't do anything in error state to avoid breaking further ...
	          break;
	        case State.BUFFER_FLUSHING:
	          // in buffer flushing state, reset fragLoadError counter
	          this.fragLoadError = 0;
	          break;
	        case State.IDLE:
	          // when this returns false there was an error and we shall return immediatly
	          // from current tick
	          if (!this._doTickIdle()) {
	            return;
	          }
	          break;
	        case State.WAITING_LEVEL:
	          var level = this.levels[this.level];
	          // check if playlist is already loaded
	          if (level && level.details) {
	            this.state = State.IDLE;
	          }
	          break;
	        case State.FRAG_LOADING_WAITING_RETRY:
	          var now = performance.now();
	          var retryDate = this.retryDate;
	          // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading
	          if (!retryDate || now >= retryDate || this.media && this.media.seeking) {
	            _logger.logger.log('mediaController: retryDate reached, switch back to IDLE state');
	            this.state = State.IDLE;
	          }
	          break;
	        case State.ERROR:
	        case State.STOPPED:
	        case State.FRAG_LOADING:
	        case State.PARSING:
	        case State.PARSED:
	        case State.ENDED:
	          break;
	        default:
	          break;
	      }
	      // check buffer
	      this._checkBuffer();
	      // check/update current fragment
	      this._checkFragmentChanged();
	    }
	
	    // Ironically the "idle" state is the on we do the most logic in it seems ....
	    // NOTE: Maybe we could rather schedule a check for buffer length after half of the currently
	    //       played segment, or on pause/play/seek instead of naively checking every 100ms?
	
	  }, {
	    key: '_doTickIdle',
	    value: function _doTickIdle() {
	      var hls = this.hls,
	          config = hls.config,
	          media = this.media;
	
	      // if video not attached AND
	      // start fragment already requested OR start frag prefetch disable
	      // exit loop
	      // => if start level loaded and media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop
	      if (this.levelLastLoaded !== undefined && !media && (this.startFragRequested || !config.startFragPrefetch)) {
	        return true;
	      }
	
	      // if we have not yet loaded any fragment, start loading from start position
	      var pos = void 0;
	      if (this.loadedmetadata) {
	        pos = media.currentTime;
	      } else {
	        pos = this.nextLoadPosition;
	      }
	      // determine next load level
	      var level = hls.nextLoadLevel,
	          levelInfo = this.levels[level],
	          levelBitrate = levelInfo.bitrate,
	          maxBufLen = void 0;
	
	      // compute max Buffer Length that we could get from this load level, based on level bitrate. don't buffer more than 60 MB and more than 30s
	      if (levelBitrate) {
	        maxBufLen = Math.max(8 * config.maxBufferSize / levelBitrate, config.maxBufferLength);
	      } else {
	        maxBufLen = config.maxBufferLength;
	      }
	      maxBufLen = Math.min(maxBufLen, config.maxMaxBufferLength);
	
	      // determine next candidate fragment to be loaded, based on current position and end of buffer position
	      // ensure up to `config.maxMaxBufferLength` of buffer upfront
	
	      var bufferInfo = _bufferHelper2.default.bufferInfo(this.mediaBuffer ? this.mediaBuffer : media, pos, config.maxBufferHole),
	          bufferLen = bufferInfo.len;
	      // Stay idle if we are still with buffer margins
	      if (bufferLen >= maxBufLen) {
	        return true;
	      }
	
	      // if buffer length is less than maxBufLen try to load a new fragment ...
	      _logger.logger.trace('buffer length of ' + bufferLen.toFixed(3) + ' is below max of ' + maxBufLen.toFixed(3) + '. checking for more payload ...');
	
	      // set next load level : this will trigger a playlist load if needed
	      this.level = hls.nextLoadLevel = level;
	
	      var levelDetails = levelInfo.details;
	      // if level info not retrieved yet, switch state and wait for level retrieval
	      // if live playlist, ensure that new playlist has been refreshed to avoid loading/try to load
	      // a useless and outdated fragment (that might even introduce load error if it is already out of the live playlist)
	      if (typeof levelDetails === 'undefined' || levelDetails.live && this.levelLastLoaded !== level) {
	        this.state = State.WAITING_LEVEL;
	        return true;
	      }
	
	      // we just got done loading the final fragment, check if we need to finalize media stream
	      var fragPrevious = this.fragPrevious;
	      if (!levelDetails.live && fragPrevious && fragPrevious.sn === levelDetails.endSN) {
	        // fragPrevious is last fragment. retrieve level duration using last frag start offset + duration
	        // real duration might be lower than initial duration if there are drifts between real frag duration and playlist signaling
	        var duration = Math.min(media.duration, fragPrevious.start + fragPrevious.duration);
	        // if everything (almost) til the end is buffered, let's signal eos
	        // we don't compare exactly media.duration === bufferInfo.end as there could be some subtle media duration difference
	        // using half frag duration should help cope with these cases.
	        // also cope with almost zero last frag duration (max last frag duration with 200ms) refer to https://github.com/video-dev/hls.js/pull/657
	        if (duration - Math.max(bufferInfo.end, fragPrevious.start) <= Math.max(0.2, fragPrevious.duration / 2)) {
	          // Finalize the media stream
	          var data = {};
	          if (this.altAudio) {
	            data.type = 'video';
	          }
	          this.hls.trigger(_events2.default.BUFFER_EOS, data);
	          this.state = State.ENDED;
	          return true;
	        }
	      }
	
	      // if we have the levelDetails for the selected variant, lets continue enrichen our stream (load keys/fragments or trigger EOS, etc..)
	      return this._fetchPayloadOrEos(pos, bufferInfo, levelDetails);
	    }
	  }, {
	    key: '_fetchPayloadOrEos',
	    value: function _fetchPayloadOrEos(pos, bufferInfo, levelDetails) {
	      var fragPrevious = this.fragPrevious,
	          level = this.level,
	          fragments = levelDetails.fragments,
	          fragLen = fragments.length;
	
	      // empty playlist
	      if (fragLen === 0) {
	        return false;
	      }
	
	      // find fragment index, contiguous with end of buffer position
	      var start = fragments[0].start,
	          end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration,
	          bufferEnd = bufferInfo.end,
	          frag = void 0;
	
	      if (levelDetails.initSegment && !levelDetails.initSegment.data) {
	        frag = levelDetails.initSegment;
	      } else {
	        // in case of live playlist we need to ensure that requested position is not located before playlist start
	        if (levelDetails.live) {
	          var initialLiveManifestSize = this.config.initialLiveManifestSize;
	          if (fragLen < initialLiveManifestSize) {
	            _logger.logger.warn('Can not start playback of a level, reason: not enough fragments ' + fragLen + ' < ' + initialLiveManifestSize);
	            return false;
	          }
	
	          frag = this._ensureFragmentAtLivePoint(levelDetails, bufferEnd, start, end, fragPrevious, fragments, fragLen);
	          // if it explicitely returns null don't load any fragment and exit function now
	          if (frag === null) {
	            return false;
	          }
	        } else {
	          // VoD playlist: if bufferEnd before start of playlist, load first fragment
	          if (bufferEnd < start) {
	            frag = fragments[0];
	          }
	        }
	      }
	      if (!frag) {
	        frag = this._findFragment(start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails);
	      }
	      if (frag) {
	        return this._loadFragmentOrKey(frag, level, levelDetails, pos, bufferEnd);
	      }
	      return true;
	    }
	  }, {
	    key: '_ensureFragmentAtLivePoint',
	    value: function _ensureFragmentAtLivePoint(levelDetails, bufferEnd, start, end, fragPrevious, fragments, fragLen) {
	      var config = this.hls.config,
	          media = this.media;
	
	      var frag = void 0;
	
	      // check if requested position is within seekable boundaries :
	      //logger.log(`start/pos/bufEnd/seeking:${start.toFixed(3)}/${pos.toFixed(3)}/${bufferEnd.toFixed(3)}/${this.media.seeking}`);
	      var maxLatency = config.liveMaxLatencyDuration !== undefined ? config.liveMaxLatencyDuration : config.liveMaxLatencyDurationCount * levelDetails.targetduration;
	
	      if (bufferEnd < Math.max(start - config.maxFragLookUpTolerance, end - maxLatency)) {
	        var liveSyncPosition = this.liveSyncPosition = this.computeLivePosition(start, levelDetails);
	        _logger.logger.log('buffer end: ' + bufferEnd.toFixed(3) + ' is located too far from the end of live sliding playlist, reset currentTime to : ' + liveSyncPosition.toFixed(3));
	        bufferEnd = liveSyncPosition;
	        if (media && media.readyState && media.duration > liveSyncPosition) {
	          media.currentTime = liveSyncPosition;
	        }
	      }
	
	      // if end of buffer greater than live edge, don't load any fragment
	      // this could happen if live playlist intermittently slides in the past.
	      // level 1 loaded [182580161,182580167]
	      // level 1 loaded [182580162,182580169]
	      // Loading 182580168 of [182580162 ,182580169],level 1 ..
	      // Loading 182580169 of [182580162 ,182580169],level 1 ..
	      // level 1 loaded [182580162,182580168] <============= here we should have bufferEnd > end. in that case break to avoid reloading 182580168
	      // level 1 loaded [182580164,182580171]
	      //
	      // don't return null in case media not loaded yet (readystate === 0)
	      if (levelDetails.PTSKnown && bufferEnd > end && media && media.readyState) {
	        return null;
	      }
	
	      if (this.startFragRequested && !levelDetails.PTSKnown) {
	        /* we are switching level on live playlist, but we don't have any PTS info for that quality level ...
	           try to load frag matching with next SN.
	           even if SN are not synchronized between playlists, loading this frag will help us
	           compute playlist sliding and find the right one after in case it was not the right consecutive one */
	        if (fragPrevious) {
	          var targetSN = fragPrevious.sn + 1;
	          if (targetSN >= levelDetails.startSN && targetSN <= levelDetails.endSN) {
	            frag = fragments[targetSN - levelDetails.startSN];
	            _logger.logger.log('live playlist, switching playlist, load frag with next SN: ' + frag.sn);
	          }
	        }
	        if (!frag) {
	          /* we have no idea about which fragment should be loaded.
	             so let's load mid fragment. it will help computing playlist sliding and find the right one
	          */
	          frag = fragments[Math.min(fragLen - 1, Math.round(fragLen / 2))];
	          _logger.logger.log('live playlist, switching playlist, unknown, load middle frag : ' + frag.sn);
	        }
	      }
	      return frag;
	    }
	  }, {
	    key: '_findFragment',
	    value: function _findFragment(start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails) {
	      var config = this.hls.config;
	      var frag = void 0;
	      var foundFrag = void 0;
	      var maxFragLookUpTolerance = config.maxFragLookUpTolerance;
	      var fragNext = fragPrevious ? fragments[fragPrevious.sn - fragments[0].sn + 1] : undefined;
	      var fragmentWithinToleranceTest = function fragmentWithinToleranceTest(candidate) {
	        // offset should be within fragment boundary - config.maxFragLookUpTolerance
	        // this is to cope with situations like
	        // bufferEnd = 9.991
	        // frag[Ø] : [0,10]
	        // frag[1] : [10,20]
	        // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here
	        //              frag start               frag start+duration
	        //                  |-----------------------------|
	        //              <--->                         <--->
	        //  ...--------><-----------------------------><---------....
	        // previous frag         matching fragment         next frag
	        //  return -1             return 0                 return 1
	        //logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);
	        // Set the lookup tolerance to be small enough to detect the current segment - ensures we don't skip over very small segments
	        var candidateLookupTolerance = Math.min(maxFragLookUpTolerance, candidate.duration);
	        if (candidate.start + candidate.duration - candidateLookupTolerance <= bufferEnd) {
	          return 1;
	        } // if maxFragLookUpTolerance will have negative value then don't return -1 for first element
	        else if (candidate.start - candidateLookupTolerance > bufferEnd && candidate.start) {
	            return -1;
	          }
	        return 0;
	      };
	
	      if (bufferEnd < end) {
	        if (bufferEnd > end - maxFragLookUpTolerance) {
	          maxFragLookUpTolerance = 0;
	        }
	        // Prefer the next fragment if it's within tolerance
	        if (fragNext && !fragmentWithinToleranceTest(fragNext)) {
	          foundFrag = fragNext;
	        } else {
	          foundFrag = _binarySearch2.default.search(fragments, fragmentWithinToleranceTest);
	        }
	      } else {
	        // reach end of playlist
	        foundFrag = fragments[fragLen - 1];
	      }
	      if (foundFrag) {
	        frag = foundFrag;
	        var curSNIdx = frag.sn - levelDetails.startSN;
	        var sameLevel = fragPrevious && frag.level === fragPrevious.level;
	        var prevFrag = fragments[curSNIdx - 1];
	        var nextFrag = fragments[curSNIdx + 1];
	        //logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);
	        if (sameLevel && frag.sn === fragPrevious.sn) {
	          if (frag.sn < levelDetails.endSN) {
	            var deltaPTS = fragPrevious.deltaPTS;
	            // if there is a significant delta between audio and video, larger than max allowed hole,
	            // and if previous remuxed fragment did not start with a keyframe. (fragPrevious.dropped)
	            // let's try to load previous fragment again to get last keyframe
	            // then we will reload again current fragment (that way we should be able to fill the buffer hole ...)
	            if (deltaPTS && deltaPTS > config.maxBufferHole && fragPrevious.dropped && curSNIdx) {
	              frag = prevFrag;
	              _logger.logger.warn('SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this');
	              // decrement previous frag load counter to avoid frag loop loading error when next fragment will get reloaded
	              fragPrevious.loadCounter--;
	            } else {
	              frag = nextFrag;
	              _logger.logger.log('SN just loaded, load next one: ' + frag.sn);
	            }
	          } else {
	            frag = null;
	          }
	        } else if (frag.dropped && !sameLevel) {
	          // Only backtrack a max of 1 consecutive fragment to prevent sliding back too far when little or no frags start with keyframes
	          if (nextFrag && nextFrag.backtracked) {
	            _logger.logger.warn('Already backtracked from fragment ' + (curSNIdx + 1) + ', will not backtrack to fragment ' + curSNIdx + '. Loading fragment ' + (curSNIdx + 1));
	            frag = nextFrag;
	          } else {
	            // If a fragment has dropped frames and it's in a different level/sequence, load the previous fragment to try and find the keyframe
	            // Reset the dropped count now since it won't be reset until we parse the fragment again, which prevents infinite backtracking on the same segment
	            _logger.logger.warn('Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe');
	            frag.dropped = 0;
	            if (prevFrag) {
	              if (prevFrag.loadCounter) {
	                prevFrag.loadCounter--;
	              }
	              frag = prevFrag;
	            } else {
	              frag = null;
	            }
	          }
	        }
	      }
	      return frag;
	    }
	  }, {
	    key: '_loadFragmentOrKey',
	    value: function _loadFragmentOrKey(frag, level, levelDetails, pos, bufferEnd) {
	      var hls = this.hls,
	          config = hls.config;
	
	      //logger.log('loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));
	      if (frag.decryptdata && frag.decryptdata.uri != null && frag.decryptdata.key == null) {
	        _logger.logger.log('Loading key for ' + frag.sn + ' of [' + levelDetails.startSN + ' ,' + levelDetails.endSN + '],level ' + level);
	        this.state = State.KEY_LOADING;
	        hls.trigger(_events2.default.KEY_LOADING, { frag: frag });
	      } else {
	        _logger.logger.log('Loading ' + frag.sn + ' of [' + levelDetails.startSN + ' ,' + levelDetails.endSN + '],level ' + level + ', currentTime:' + pos.toFixed(3) + ',bufferEnd:' + bufferEnd.toFixed(3));
	        // ensure that we are not reloading the same fragments in loop ...
	        if (this.fragLoadIdx !== undefined) {
	          this.fragLoadIdx++;
	        } else {
	          this.fragLoadIdx = 0;
	        }
	        if (frag.loadCounter) {
	          frag.loadCounter++;
	          var maxThreshold = config.fragLoadingLoopThreshold;
	          // if this frag has already been loaded 3 times, and if it has been reloaded recently
	          if (frag.loadCounter > maxThreshold && Math.abs(this.fragLoadIdx - frag.loadIdx) < maxThreshold) {
	            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR, fatal: false, frag: frag });
	            return false;
	          }
	        } else {
	          frag.loadCounter = 1;
	        }
	        frag.loadIdx = this.fragLoadIdx;
	        this.fragCurrent = frag;
	        this.startFragRequested = true;
	        if (!isNaN(frag.sn)) {
	          this.nextLoadPosition = frag.start + frag.duration;
	        }
	        frag.autoLevel = hls.autoLevelEnabled;
	        frag.bitrateTest = this.bitrateTest;
	        hls.trigger(_events2.default.FRAG_LOADING, { frag: frag });
	        // lazy demuxer init, as this could take some time ... do it during frag loading
	        if (!this.demuxer) {
	          this.demuxer = new _demuxer2.default(hls, 'main');
	        }
	        this.state = State.FRAG_LOADING;
	        return true;
	      }
	    }
	  }, {
	    key: 'getBufferedFrag',
	    value: function getBufferedFrag(position) {
	      return _binarySearch2.default.search(this._bufferedFrags, function (frag) {
	        if (position < frag.startPTS) {
	          return -1;
	        } else if (position > frag.endPTS) {
	          return 1;
	        }
	        return 0;
	      });
	    }
	  }, {
	    key: 'followingBufferedFrag',
	    value: function followingBufferedFrag(frag) {
	      if (frag) {
	        // try to get range of next fragment (500ms after this range)
	        return this.getBufferedFrag(frag.endPTS + 0.5);
	      }
	      return null;
	    }
	  }, {
	    key: '_checkFragmentChanged',
	    value: function _checkFragmentChanged() {
	      var fragPlayingCurrent,
	          currentTime,
	          video = this.media;
	      if (video && video.readyState && video.seeking === false) {
	        currentTime = video.currentTime;
	        /* if video element is in seeked state, currentTime can only increase.
	          (assuming that playback rate is positive ...)
	          As sometimes currentTime jumps back to zero after a
	          media decode error, check this, to avoid seeking back to
	          wrong position after a media decode error
	        */
	        if (currentTime > video.playbackRate * this.lastCurrentTime) {
	          this.lastCurrentTime = currentTime;
	        }
	        if (_bufferHelper2.default.isBuffered(video, currentTime)) {
	          fragPlayingCurrent = this.getBufferedFrag(currentTime);
	        } else if (_bufferHelper2.default.isBuffered(video, currentTime + 0.1)) {
	          /* ensure that FRAG_CHANGED event is triggered at startup,
	            when first video frame is displayed and playback is paused.
	            add a tolerance of 100ms, in case current position is not buffered,
	            check if current pos+100ms is buffered and use that buffer range
	            for FRAG_CHANGED event reporting */
	          fragPlayingCurrent = this.getBufferedFrag(currentTime + 0.1);
	        }
	        if (fragPlayingCurrent) {
	          var fragPlaying = fragPlayingCurrent;
	          if (fragPlaying !== this.fragPlaying) {
	            this.hls.trigger(_events2.default.FRAG_CHANGED, { frag: fragPlaying });
	            var fragPlayingLevel = fragPlaying.level;
	            if (!this.fragPlaying || this.fragPlaying.level !== fragPlayingLevel) {
	              this.hls.trigger(_events2.default.LEVEL_SWITCHED, { level: fragPlayingLevel });
	            }
	            this.fragPlaying = fragPlaying;
	          }
	        }
	      }
	    }
	
	    /*
	      on immediate level switch :
	       - pause playback if playing
	       - cancel any pending load request
	       - and trigger a buffer flush
	    */
	
	  }, {
	    key: 'immediateLevelSwitch',
	    value: function immediateLevelSwitch() {
	      _logger.logger.log('immediateLevelSwitch');
	      if (!this.immediateSwitch) {
	        this.immediateSwitch = true;
	        var media = this.media,
	            previouslyPaused = void 0;
	        if (media) {
	          previouslyPaused = media.paused;
	          media.pause();
	        } else {
	          // don't restart playback after instant level switch in case media not attached
	          previouslyPaused = true;
	        }
	        this.previouslyPaused = previouslyPaused;
	      }
	      var fragCurrent = this.fragCurrent;
	      if (fragCurrent && fragCurrent.loader) {
	        fragCurrent.loader.abort();
	      }
	      this.fragCurrent = null;
	      // increase fragment load Index to avoid frag loop loading error after buffer flush
	      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;
	      // flush everything
	      this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
	    }
	
	    /*
	       on immediate level switch end, after new fragment has been buffered :
	        - nudge video decoder by slightly adjusting video currentTime (if currentTime buffered)
	        - resume the playback if needed
	    */
	
	  }, {
	    key: 'immediateLevelSwitchEnd',
	    value: function immediateLevelSwitchEnd() {
	      var media = this.media;
	      if (media && media.buffered.length) {
	        this.immediateSwitch = false;
	        if (_bufferHelper2.default.isBuffered(media, media.currentTime)) {
	          // only nudge if currentTime is buffered
	          media.currentTime -= 0.0001;
	        }
	        if (!this.previouslyPaused) {
	          media.play();
	        }
	      }
	    }
	  }, {
	    key: 'nextLevelSwitch',
	    value: function nextLevelSwitch() {
	      /* try to switch ASAP without breaking video playback :
	         in order to ensure smooth but quick level switching,
	        we need to find the next flushable buffer range
	        we should take into account new segment fetch time
	      */
	      var media = this.media;
	      // ensure that media is defined and that metadata are available (to retrieve currentTime)
	      if (media && media.readyState) {
	        var fetchdelay = void 0,
	            fragPlayingCurrent = void 0,
	            nextBufferedFrag = void 0;
	        // increase fragment load Index to avoid frag loop loading error after buffer flush
	        this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;
	        fragPlayingCurrent = this.getBufferedFrag(media.currentTime);
	        if (fragPlayingCurrent && fragPlayingCurrent.startPTS > 1) {
	          // flush buffer preceding current fragment (flush until current fragment start offset)
	          // minus 1s to avoid video freezing, that could happen if we flush keyframe of current video ...
	          this.flushMainBuffer(0, fragPlayingCurrent.startPTS - 1);
	        }
	        if (!media.paused) {
	          // add a safety delay of 1s
	          var nextLevelId = this.hls.nextLoadLevel,
	              nextLevel = this.levels[nextLevelId],
	              fragLastKbps = this.fragLastKbps;
	          if (fragLastKbps && this.fragCurrent) {
	            fetchdelay = this.fragCurrent.duration * nextLevel.bitrate / (1000 * fragLastKbps) + 1;
	          } else {
	            fetchdelay = 0;
	          }
	        } else {
	          fetchdelay = 0;
	        }
	        //logger.log('fetchdelay:'+fetchdelay);
	        // find buffer range that will be reached once new fragment will be fetched
	        nextBufferedFrag = this.getBufferedFrag(media.currentTime + fetchdelay);
	        if (nextBufferedFrag) {
	          // we can flush buffer range following this one without stalling playback
	          nextBufferedFrag = this.followingBufferedFrag(nextBufferedFrag);
	          if (nextBufferedFrag) {
	            // if we are here, we can also cancel any loading/demuxing in progress, as they are useless
	            var fragCurrent = this.fragCurrent;
	            if (fragCurrent && fragCurrent.loader) {
	              fragCurrent.loader.abort();
	            }
	            this.fragCurrent = null;
	            // flush position is the start position of this new buffer
	            this.flushMainBuffer(nextBufferedFrag.startPTS, Number.POSITIVE_INFINITY);
	          }
	        }
	      }
	    }
	  }, {
	    key: 'flushMainBuffer',
	    value: function flushMainBuffer(startOffset, endOffset) {
	      this.state = State.BUFFER_FLUSHING;
	      var flushScope = { startOffset: startOffset, endOffset: endOffset };
	      // if alternate audio tracks are used, only flush video, otherwise flush everything
	      if (this.altAudio) {
	        flushScope.type = 'video';
	      }
	      this.hls.trigger(_events2.default.BUFFER_FLUSHING, flushScope);
	    }
	  }, {
	    key: 'onMediaAttached',
	    value: function onMediaAttached(data) {
	      var media = this.media = this.mediaBuffer = data.media;
	      this.onvseeking = this.onMediaSeeking.bind(this);
	      this.onvseeked = this.onMediaSeeked.bind(this);
	      this.onvended = this.onMediaEnded.bind(this);
	      media.addEventListener('seeking', this.onvseeking);
	      media.addEventListener('seeked', this.onvseeked);
	      media.addEventListener('ended', this.onvended);
	      var config = this.config;
	      if (this.levels && config.autoStartLoad) {
	        this.hls.startLoad(config.startPosition);
	      }
	    }
	  }, {
	    key: 'onMediaDetaching',
	    value: function onMediaDetaching() {
	      var media = this.media;
	      if (media && media.ended) {
	        _logger.logger.log('MSE detaching and video ended, reset startPosition');
	        this.startPosition = this.lastCurrentTime = 0;
	      }
	
	      // reset fragment loading counter on MSE detaching to avoid reporting FRAG_LOOP_LOADING_ERROR after error recovery
	      var levels = this.levels;
	      if (levels) {
	        // reset fragment load counter
	        levels.forEach(function (level) {
	          if (level.details) {
	            level.details.fragments.forEach(function (fragment) {
	              fragment.loadCounter = undefined;
	              fragment.backtracked = undefined;
	            });
	          }
	        });
	      }
	      // remove video listeners
	      if (media) {
	        media.removeEventListener('seeking', this.onvseeking);
	        media.removeEventListener('seeked', this.onvseeked);
	        media.removeEventListener('ended', this.onvended);
	        this.onvseeking = this.onvseeked = this.onvended = null;
	      }
	      this.media = this.mediaBuffer = null;
	      this.loadedmetadata = false;
	      this.stopLoad();
	    }
	  }, {
	    key: 'onMediaSeeking',
	    value: function onMediaSeeking() {
	      var media = this.media,
	          currentTime = media ? media.currentTime : undefined,
	          config = this.config;
	      _logger.logger.log('media seeking to ' + currentTime.toFixed(3));
	      if (this.state === State.FRAG_LOADING) {
	        var mediaBuffer = this.mediaBuffer ? this.mediaBuffer : media;
	        var bufferInfo = _bufferHelper2.default.bufferInfo(mediaBuffer, currentTime, this.config.maxBufferHole),
	            fragCurrent = this.fragCurrent;
	        // check if we are seeking to a unbuffered area AND if frag loading is in progress
	        if (bufferInfo.len === 0 && fragCurrent) {
	          var tolerance = config.maxFragLookUpTolerance,
	              fragStartOffset = fragCurrent.start - tolerance,
	              fragEndOffset = fragCurrent.start + fragCurrent.duration + tolerance;
	          // check if we seek position will be out of currently loaded frag range : if out cancel frag load, if in, don't do anything
	          if (currentTime < fragStartOffset || currentTime > fragEndOffset) {
	            if (fragCurrent.loader) {
	              _logger.logger.log('seeking outside of buffer while fragment load in progress, cancel fragment load');
	              fragCurrent.loader.abort();
	            }
	            this.fragCurrent = null;
	            this.fragPrevious = null;
	            // switch to IDLE state to load new fragment
	            this.state = State.IDLE;
	          } else {
	            _logger.logger.log('seeking outside of buffer but within currently loaded fragment range');
	          }
	        }
	      } else if (this.state === State.ENDED) {
	        // switch to IDLE state to check for potential new fragment
	        this.state = State.IDLE;
	      }
	      if (media) {
	        this.lastCurrentTime = currentTime;
	      }
	      // avoid reporting fragment loop loading error in case user is seeking several times on same position
	      if (this.state !== State.FRAG_LOADING && this.fragLoadIdx !== undefined) {
	        this.fragLoadIdx += 2 * config.fragLoadingLoopThreshold;
	      }
	      // in case seeking occurs although no media buffered, adjust startPosition and nextLoadPosition to seek target
	      if (!this.loadedmetadata) {
	        this.nextLoadPosition = this.startPosition = currentTime;
	      }
	      // tick to speed up processing
	      this.tick();
	    }
	  }, {
	    key: 'onMediaSeeked',
	    value: function onMediaSeeked() {
	      _logger.logger.log('media seeked to ' + this.media.currentTime.toFixed(3));
	      // tick to speed up FRAGMENT_PLAYING triggering
	      this.tick();
	    }
	  }, {
	    key: 'onMediaEnded',
	    value: function onMediaEnded() {
	      _logger.logger.log('media ended');
	      // reset startPosition and lastCurrentTime to restart playback @ stream beginning
	      this.startPosition = this.lastCurrentTime = 0;
	    }
	  }, {
	    key: 'onManifestLoading',
	    value: function onManifestLoading() {
	      // reset buffer on manifest loading
	      _logger.logger.log('trigger BUFFER_RESET');
	      this.hls.trigger(_events2.default.BUFFER_RESET);
	      this._bufferedFrags = [];
	      this.stalled = false;
	      this.startPosition = this.lastCurrentTime = 0;
	    }
	  }, {
	    key: 'onManifestParsed',
	    value: function onManifestParsed(data) {
	      var aac = false,
	          heaac = false,
	          codec;
	      data.levels.forEach(function (level) {
	        // detect if we have different kind of audio codecs used amongst playlists
	        codec = level.audioCodec;
	        if (codec) {
	          if (codec.indexOf('mp4a.40.2') !== -1) {
	            aac = true;
	          }
	          if (codec.indexOf('mp4a.40.5') !== -1) {
	            heaac = true;
	          }
	        }
	      });
	      this.audioCodecSwitch = aac && heaac;
	      if (this.audioCodecSwitch) {
	        _logger.logger.log('both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC');
	      }
	      this.levels = data.levels;
	      this.startLevelLoaded = false;
	      this.startFragRequested = false;
	      var config = this.config;
	      if (config.autoStartLoad || this.forceStartLoad) {
	        this.hls.startLoad(config.startPosition);
	      }
	    }
	  }, {
	    key: 'onLevelLoaded',
	    value: function onLevelLoaded(data) {
	      var newDetails = data.details,
	          newLevelId = data.level,
	          curLevel = this.levels[newLevelId],
	          duration = newDetails.totalduration,
	          sliding = 0;
	
	      _logger.logger.log('level ' + newLevelId + ' loaded [' + newDetails.startSN + ',' + newDetails.endSN + '],duration:' + duration);
	      this.levelLastLoaded = newLevelId;
	
	      if (newDetails.live) {
	        var curDetails = curLevel.details;
	        if (curDetails && newDetails.fragments.length > 0) {
	          // we already have details for that level, merge them
	          _levelHelper2.default.mergeDetails(curDetails, newDetails);
	          sliding = newDetails.fragments[0].start;
	          this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);
	          if (newDetails.PTSKnown) {
	            _logger.logger.log('live playlist sliding:' + sliding.toFixed(3));
	          } else {
	            _logger.logger.log('live playlist - outdated PTS, unknown sliding');
	          }
	        } else {
	          newDetails.PTSKnown = false;
	          _logger.logger.log('live playlist - first load, unknown sliding');
	        }
	      } else {
	        newDetails.PTSKnown = false;
	      }
	      // override level info
	      curLevel.details = newDetails;
	      this.hls.trigger(_events2.default.LEVEL_UPDATED, { details: newDetails, level: newLevelId });
	
	      if (this.startFragRequested === false) {
	        // compute start position if set to -1. use it straight away if value is defined
	        if (this.startPosition === -1 || this.lastCurrentTime === -1) {
	          // first, check if start time offset has been set in playlist, if yes, use this value
	          var startTimeOffset = newDetails.startTimeOffset;
	          if (!isNaN(startTimeOffset)) {
	            if (startTimeOffset < 0) {
	              _logger.logger.log('negative start time offset ' + startTimeOffset + ', count from end of last fragment');
	              startTimeOffset = sliding + duration + startTimeOffset;
	            }
	            _logger.logger.log('start time offset found in playlist, adjust startPosition to ' + startTimeOffset);
	            this.startPosition = startTimeOffset;
	          } else {
	            // if live playlist, set start position to be fragment N-this.config.liveSyncDurationCount (usually 3)
	            if (newDetails.live) {
	              this.startPosition = this.computeLivePosition(sliding, newDetails);
	              _logger.logger.log('configure startPosition to ' + this.startPosition);
	            } else {
	              this.startPosition = 0;
	            }
	          }
	          this.lastCurrentTime = this.startPosition;
	        }
	        this.nextLoadPosition = this.startPosition;
	      }
	      // only switch batck to IDLE state if we were waiting for level to start downloading a new fragment
	      if (this.state === State.WAITING_LEVEL) {
	        this.state = State.IDLE;
	      }
	      //trigger handler right now
	      this.tick();
	    }
	  }, {
	    key: 'onKeyLoaded',
	    value: function onKeyLoaded() {
	      if (this.state === State.KEY_LOADING) {
	        this.state = State.IDLE;
	        this.tick();
	      }
	    }
	  }, {
	    key: 'onFragLoaded',
	    value: function onFragLoaded(data) {
	      var fragCurrent = this.fragCurrent,
	          fragLoaded = data.frag;
	      if (this.state === State.FRAG_LOADING && fragCurrent && fragLoaded.type === 'main' && fragLoaded.level === fragCurrent.level && fragLoaded.sn === fragCurrent.sn) {
	        var stats = data.stats,
	            currentLevel = this.levels[fragCurrent.level],
	            details = currentLevel.details;
	        _logger.logger.log('Loaded  ' + fragCurrent.sn + ' of [' + details.startSN + ' ,' + details.endSN + '],level ' + fragCurrent.level);
	        // reset frag bitrate test in any case after frag loaded event
	        this.bitrateTest = false;
	        this.stats = stats;
	        // if this frag was loaded to perform a bitrate test AND if hls.nextLoadLevel is greater than 0
	        // then this means that we should be able to load a fragment at a higher quality level
	        if (fragLoaded.bitrateTest === true && this.hls.nextLoadLevel) {
	          // switch back to IDLE state ... we just loaded a fragment to determine adequate start bitrate and initialize autoswitch algo
	          this.state = State.IDLE;
	          this.startFragRequested = false;
	          stats.tparsed = stats.tbuffered = performance.now();
	          this.hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: fragCurrent, id: 'main' });
	          this.tick();
	        } else if (fragLoaded.sn === 'initSegment') {
	          this.state = State.IDLE;
	          stats.tparsed = stats.tbuffered = performance.now();
	          details.initSegment.data = data.payload;
	          this.hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: fragCurrent, id: 'main' });
	          this.tick();
	        } else {
	          this.state = State.PARSING;
	          // transmux the MPEG-TS data to ISO-BMFF segments
	          var duration = details.totalduration,
	              level = fragCurrent.level,
	              sn = fragCurrent.sn,
	              audioCodec = this.config.defaultAudioCodec || currentLevel.audioCodec;
	          if (this.audioCodecSwap) {
	            _logger.logger.log('swapping playlist audio codec');
	            if (audioCodec === undefined) {
	              audioCodec = this.lastAudioCodec;
	            }
	            if (audioCodec) {
	              if (audioCodec.indexOf('mp4a.40.5') !== -1) {
	                audioCodec = 'mp4a.40.2';
	              } else {
	                audioCodec = 'mp4a.40.5';
	              }
	            }
	          }
	          this.pendingBuffering = true;
	          this.appended = false;
	          _logger.logger.log('Parsing ' + sn + ' of [' + details.startSN + ' ,' + details.endSN + '],level ' + level + ', cc ' + fragCurrent.cc);
	          var demuxer = this.demuxer;
	          if (!demuxer) {
	            demuxer = this.demuxer = new _demuxer2.default(this.hls, 'main');
	          }
	          // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live) and if media is not seeking (this is to overcome potential timestamp drifts between playlists and fragments)
	          var media = this.media;
	          var mediaSeeking = media && media.seeking;
	          var accurateTimeOffset = !mediaSeeking && (details.PTSKnown || !details.live);
	          var initSegmentData = details.initSegment ? details.initSegment.data : [];
	          demuxer.push(data.payload, initSegmentData, audioCodec, currentLevel.videoCodec, fragCurrent, duration, accurateTimeOffset, undefined);
	        }
	      }
	      this.fragLoadError = 0;
	    }
	  }, {
	    key: 'onFragParsingInitSegment',
	    value: function onFragParsingInitSegment(data) {
	      var fragCurrent = this.fragCurrent;
	      var fragNew = data.frag;
	      if (fragCurrent && data.id === 'main' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
	        var tracks = data.tracks,
	            trackName,
	            track;
	
	        // if audio track is expected to come from audio stream controller, discard any coming from main
	        if (tracks.audio && this.altAudio) {
	          delete tracks.audio;
	        }
	        // include levelCodec in audio and video tracks
	        track = tracks.audio;
	        if (track) {
	          var audioCodec = this.levels[this.level].audioCodec,
	              ua = navigator.userAgent.toLowerCase();
	          if (audioCodec && this.audioCodecSwap) {
	            _logger.logger.log('swapping playlist audio codec');
	            if (audioCodec.indexOf('mp4a.40.5') !== -1) {
	              audioCodec = 'mp4a.40.2';
	            } else {
	              audioCodec = 'mp4a.40.5';
	            }
	          }
	          // in case AAC and HE-AAC audio codecs are signalled in manifest
	          // force HE-AAC , as it seems that most browsers prefers that way,
	          // except for mono streams OR on FF
	          // these conditions might need to be reviewed ...
	          if (this.audioCodecSwitch) {
	            // don't force HE-AAC if mono stream
	            if (track.metadata.channelCount !== 1 &&
	            // don't force HE-AAC if firefox
	            ua.indexOf('firefox') === -1) {
	              audioCodec = 'mp4a.40.5';
	            }
	          }
	          // HE-AAC is broken on Android, always signal audio codec as AAC even if variant manifest states otherwise
	          if (ua.indexOf('android') !== -1 && track.container !== 'audio/mpeg') {
	            // Exclude mpeg audio
	            audioCodec = 'mp4a.40.2';
	            _logger.logger.log('Android: force audio codec to ' + audioCodec);
	          }
	          track.levelCodec = audioCodec;
	          track.id = data.id;
	        }
	        track = tracks.video;
	        if (track) {
	          track.levelCodec = this.levels[this.level].videoCodec;
	          track.id = data.id;
	        }
	        this.hls.trigger(_events2.default.BUFFER_CODECS, tracks);
	        // loop through tracks that are going to be provided to bufferController
	        for (trackName in tracks) {
	          track = tracks[trackName];
	          _logger.logger.log('main track:' + trackName + ',container:' + track.container + ',codecs[level/parsed]=[' + track.levelCodec + '/' + track.codec + ']');
	          var initSegment = track.initSegment;
	          if (initSegment) {
	            this.appended = true;
	            // arm pending Buffering flag before appending a segment
	            this.pendingBuffering = true;
	            this.hls.trigger(_events2.default.BUFFER_APPENDING, { type: trackName, data: initSegment, parent: 'main', content: 'initSegment' });
	          }
	        }
	        //trigger handler right now
	        this.tick();
	      }
	    }
	  }, {
	    key: 'onFragParsingData',
	    value: function onFragParsingData(data) {
	      var _this2 = this;
	
	      var fragCurrent = this.fragCurrent;
	      var fragNew = data.frag;
	      if (fragCurrent && data.id === 'main' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && !(data.type === 'audio' && this.altAudio) && // filter out main audio if audio track is loaded through audio stream controller
	      this.state === State.PARSING) {
	        var level = this.levels[this.level],
	            frag = fragCurrent;
	        if (isNaN(data.endPTS)) {
	          data.endPTS = data.startPTS + fragCurrent.duration;
	          data.endDTS = data.startDTS + fragCurrent.duration;
	        }
	
	        _logger.logger.log('Parsed ' + data.type + ',PTS:[' + data.startPTS.toFixed(3) + ',' + data.endPTS.toFixed(3) + '],DTS:[' + data.startDTS.toFixed(3) + '/' + data.endDTS.toFixed(3) + '],nb:' + data.nb + ',dropped:' + (data.dropped || 0));
	
	        // Detect gaps in a fragment  and try to fix it by finding a keyframe in the previous fragment (see _findFragments)
	        if (data.type === 'video') {
	          frag.dropped = data.dropped;
	          if (frag.dropped) {
	            if (!frag.backtracked) {
	              // Return back to the IDLE state without appending to buffer
	              // Causes findFragments to backtrack a segment and find the keyframe
	              // Audio fragments arriving before video sets the nextLoadPosition, causing _findFragments to skip the backtracked fragment
	              frag.backtracked = true;
	              this.nextLoadPosition = data.startPTS;
	              this.state = State.IDLE;
	              this.tick();
	              return;
	            } else {
	              _logger.logger.warn('Already backtracked on this fragment, appending with the gap');
	            }
	          } else {
	            // Only reset the backtracked flag if we've loaded the frag without any dropped frames
	            frag.backtracked = false;
	          }
	        }
	
	        var drift = _levelHelper2.default.updateFragPTSDTS(level.details, frag.sn, data.startPTS, data.endPTS, data.startDTS, data.endDTS),
	            hls = this.hls;
	        hls.trigger(_events2.default.LEVEL_PTS_UPDATED, { details: level.details, level: this.level, drift: drift, type: data.type, start: data.startPTS, end: data.endPTS });
	
	        // has remuxer dropped video frames located before first keyframe ?
	        [data.data1, data.data2].forEach(function (buffer) {
	          // only append in PARSING state (rationale is that an appending error could happen synchronously on first segment appending)
	          // in that case it is useless to append following segments
	          if (buffer && buffer.length && _this2.state === State.PARSING) {
	            _this2.appended = true;
	            // arm pending Buffering flag before appending a segment
	            _this2.pendingBuffering = true;
	            hls.trigger(_events2.default.BUFFER_APPENDING, { type: data.type, data: buffer, parent: 'main', content: 'data' });
	          }
	        });
	        //trigger handler right now
	        this.tick();
	      }
	    }
	  }, {
	    key: 'onFragParsed',
	    value: function onFragParsed(data) {
	      var fragCurrent = this.fragCurrent;
	      var fragNew = data.frag;
	      if (fragCurrent && data.id === 'main' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
	        this.stats.tparsed = performance.now();
	        this.state = State.PARSED;
	        this._checkAppendedParsed();
	      }
	    }
	  }, {
	    key: 'onAudioTrackSwitching',
	    value: function onAudioTrackSwitching(data) {
	      // if any URL found on new audio track, it is an alternate audio track
	      var altAudio = !!data.url,
	          trackId = data.id;
	      // if we switch on main audio, ensure that main fragment scheduling is synced with media.buffered
	      // don't do anything if we switch to alt audio: audio stream controller is handling it.
	      // we will just have to change buffer scheduling on audioTrackSwitched
	      if (!altAudio) {
	        if (this.mediaBuffer !== this.media) {
	          _logger.logger.log('switching on main audio, use media.buffered to schedule main fragment loading');
	          this.mediaBuffer = this.media;
	          var fragCurrent = this.fragCurrent;
	          // we need to refill audio buffer from main: cancel any frag loading to speed up audio switch
	          if (fragCurrent.loader) {
	            _logger.logger.log('switching to main audio track, cancel main fragment load');
	            fragCurrent.loader.abort();
	          }
	          this.fragCurrent = null;
	          this.fragPrevious = null;
	          // destroy demuxer to force init segment generation (following audio switch)
	          if (this.demuxer) {
	            this.demuxer.destroy();
	            this.demuxer = null;
	          }
	          // switch to IDLE state to load new fragment
	          this.state = State.IDLE;
	        }
	        var hls = this.hls;
	        // switching to main audio, flush all audio and trigger track switched
	        hls.trigger(_events2.default.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: 'audio' });
	        hls.trigger(_events2.default.AUDIO_TRACK_SWITCHED, { id: trackId });
	        this.altAudio = false;
	      }
	    }
	  }, {
	    key: 'onAudioTrackSwitched',
	    value: function onAudioTrackSwitched(data) {
	      var trackId = data.id,
	          altAudio = !!this.hls.audioTracks[trackId].url;
	      if (altAudio) {
	        var videoBuffer = this.videoBuffer;
	        // if we switched on alternate audio, ensure that main fragment scheduling is synced with video sourcebuffer buffered
	        if (videoBuffer && this.mediaBuffer !== videoBuffer) {
	          _logger.logger.log('switching on alternate audio, use video.buffered to schedule main fragment loading');
	          this.mediaBuffer = videoBuffer;
	        }
	      }
	      this.altAudio = altAudio;
	      this.tick();
	    }
	  }, {
	    key: 'onBufferCreated',
	    value: function onBufferCreated(data) {
	      var tracks = data.tracks,
	          mediaTrack = void 0,
	          name = void 0,
	          alternate = false;
	      for (var type in tracks) {
	        var track = tracks[type];
	        if (track.id === 'main') {
	          name = type;
	          mediaTrack = track;
	          // keep video source buffer reference
	          if (type === 'video') {
	            this.videoBuffer = tracks[type].buffer;
	          }
	        } else {
	          alternate = true;
	        }
	      }
	      if (alternate && mediaTrack) {
	        _logger.logger.log('alternate track found, use ' + name + '.buffered to schedule main fragment loading');
	        this.mediaBuffer = mediaTrack.buffer;
	      } else {
	        this.mediaBuffer = this.media;
	      }
	    }
	  }, {
	    key: 'onBufferAppended',
	    value: function onBufferAppended(data) {
	      if (data.parent === 'main') {
	        var state = this.state;
	        if (state === State.PARSING || state === State.PARSED) {
	          // check if all buffers have been appended
	          this.pendingBuffering = data.pending > 0;
	          this._checkAppendedParsed();
	        }
	      }
	    }
	  }, {
	    key: '_checkAppendedParsed',
	    value: function _checkAppendedParsed() {
	      //trigger handler right now
	      if (this.state === State.PARSED && (!this.appended || !this.pendingBuffering)) {
	        var frag = this.fragCurrent;
	        if (frag) {
	          var media = this.mediaBuffer ? this.mediaBuffer : this.media;
	          _logger.logger.log('main buffered : ' + _timeRanges2.default.toString(media.buffered));
	          // filter fragments potentially evicted from buffer. this is to avoid memleak on live streams
	          var bufferedFrags = this._bufferedFrags.filter(function (frag) {
	            return _bufferHelper2.default.isBuffered(media, (frag.startPTS + frag.endPTS) / 2);
	          });
	          // push new range
	          bufferedFrags.push(frag);
	          // sort frags, as we use BinarySearch for lookup in getBufferedFrag ...
	          this._bufferedFrags = bufferedFrags.sort(function (a, b) {
	            return a.startPTS - b.startPTS;
	          });
	          this.fragPrevious = frag;
	          var stats = this.stats;
	          stats.tbuffered = performance.now();
	          // we should get rid of this.fragLastKbps
	          this.fragLastKbps = Math.round(8 * stats.total / (stats.tbuffered - stats.tfirst));
	          this.hls.trigger(_events2.default.FRAG_BUFFERED, { stats: stats, frag: frag, id: 'main' });
	          this.state = State.IDLE;
	        }
	        this.tick();
	      }
	    }
	  }, {
	    key: 'onError',
	    value: function onError(data) {
	      var frag = data.frag || this.fragCurrent;
	      // don't handle frag error not related to main fragment
	      if (frag && frag.type !== 'main') {
	        return;
	      }
	      var media = this.media,
	
	      // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end
	      mediaBuffered = media && _bufferHelper2.default.isBuffered(media, media.currentTime) && _bufferHelper2.default.isBuffered(media, media.currentTime + 0.5);
	      switch (data.details) {
	        case _errors.ErrorDetails.FRAG_LOAD_ERROR:
	        case _errors.ErrorDetails.FRAG_LOAD_TIMEOUT:
	        case _errors.ErrorDetails.KEY_LOAD_ERROR:
	        case _errors.ErrorDetails.KEY_LOAD_TIMEOUT:
	          if (!data.fatal) {
	            var loadError = this.fragLoadError;
	            if (loadError) {
	              loadError++;
	            } else {
	              loadError = 1;
	            }
	            var config = this.config;
	            // keep retrying / don't raise fatal network error if current position is buffered or if in automode with current level not 0
	            if (loadError <= config.fragLoadingMaxRetry || mediaBuffered || frag.autoLevel && frag.level) {
	              this.fragLoadError = loadError;
	              // reset load counter to avoid frag loop loading error
	              frag.loadCounter = 0;
	              // exponential backoff capped to config.fragLoadingMaxRetryTimeout
	              var delay = Math.min(Math.pow(2, loadError - 1) * config.fragLoadingRetryDelay, config.fragLoadingMaxRetryTimeout);
	              _logger.logger.warn('mediaController: frag loading failed, retry in ' + delay + ' ms');
	              this.retryDate = performance.now() + delay;
	              // retry loading state
	              // if loadedmetadata is not set, it means that we are emergency switch down on first frag
	              // in that case, reset startFragRequested flag
	              if (!this.loadedmetadata) {
	                this.startFragRequested = false;
	                this.nextLoadPosition = this.startPosition;
	              }
	              this.state = State.FRAG_LOADING_WAITING_RETRY;
	            } else {
	              _logger.logger.error('mediaController: ' + data.details + ' reaches max retry, redispatch as fatal ...');
	              // switch error to fatal
	              data.fatal = true;
	              this.state = State.ERROR;
	            }
	          }
	          break;
	        case _errors.ErrorDetails.FRAG_LOOP_LOADING_ERROR:
	          if (!data.fatal) {
	            // if buffer is not empty
	            if (mediaBuffered) {
	              // try to reduce max buffer length : rationale is that we could get
	              // frag loop loading error because of buffer eviction
	              this._reduceMaxBufferLength(frag.duration);
	              this.state = State.IDLE;
	            } else {
	              // buffer empty. report as fatal if in manual mode or if lowest level.
	              // level controller takes care of emergency switch down logic
	              if (!frag.autoLevel || frag.level === 0) {
	                // switch error to fatal
	                data.fatal = true;
	                this.state = State.ERROR;
	              }
	            }
	          }
	          break;
	        case _errors.ErrorDetails.LEVEL_LOAD_ERROR:
	        case _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT:
	          if (this.state !== State.ERROR) {
	            if (data.fatal) {
	              // if fatal error, stop processing
	              this.state = State.ERROR;
	              _logger.logger.warn('streamController: ' + data.details + ',switch to ' + this.state + ' state ...');
	            } else {
	              // in cas of non fatal error while waiting level load to be completed, switch back to IDLE
	              if (this.state === State.WAITING_LEVEL) {
	                this.state = State.IDLE;
	              }
	            }
	          }
	          break;
	        case _errors.ErrorDetails.BUFFER_FULL_ERROR:
	          // if in appending state
	          if (data.parent === 'main' && (this.state === State.PARSING || this.state === State.PARSED)) {
	            // reduce max buf len if current position is buffered
	            if (mediaBuffered) {
	              this._reduceMaxBufferLength(this.config.maxBufferLength);
	              this.state = State.IDLE;
	            } else {
	              // current position is not buffered, but browser is still complaining about buffer full error
	              // this happens on IE/Edge, refer to https://github.com/video-dev/hls.js/pull/708
	              // in that case flush the whole buffer to recover
	              _logger.logger.warn('buffer full error also media.currentTime is not buffered, flush everything');
	              this.fragCurrent = null;
	              // flush everything
	              this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
	            }
	          }
	          break;
	        default:
	          break;
	      }
	    }
	  }, {
	    key: '_reduceMaxBufferLength',
	    value: function _reduceMaxBufferLength(minLength) {
	      var config = this.config;
	      if (config.maxMaxBufferLength >= minLength) {
	        // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...
	        config.maxMaxBufferLength /= 2;
	        _logger.logger.warn('main:reduce max buffer length to ' + config.maxMaxBufferLength + 's');
	        // increase fragment load Index to avoid frag loop loading error after buffer flush
	        this.fragLoadIdx += 2 * config.fragLoadingLoopThreshold;
	      }
	    }
	  }, {
	    key: '_checkBuffer',
	    value: function _checkBuffer() {
	      var media = this.media;
	      // if ready state different from HAVE_NOTHING (numeric value 0), we are allowed to seek
	      if (media && media.readyState) {
	        var currentTime = media.currentTime,
	            mediaBuffer = this.mediaBuffer ? this.mediaBuffer : media,
	            buffered = mediaBuffer.buffered;
	        // adjust currentTime to start position on loaded metadata
	        if (!this.loadedmetadata && buffered.length) {
	          this.loadedmetadata = true;
	          // only adjust currentTime if different from startPosition or if startPosition not buffered
	          // at that stage, there should be only one buffered range, as we reach that code after first fragment has been buffered
	          var startPosition = media.seeking ? currentTime : this.startPosition,
	              startPositionBuffered = _bufferHelper2.default.isBuffered(mediaBuffer, startPosition);
	          // if currentTime not matching with expected startPosition or startPosition not buffered
	          if (currentTime !== startPosition || !startPositionBuffered) {
	            _logger.logger.log('target start position:' + startPosition);
	            // if startPosition not buffered, let's seek to buffered.start(0)
	            if (!startPositionBuffered) {
	              startPosition = buffered.start(0);
	              _logger.logger.log('target start position not buffered, seek to buffered.start(0) ' + startPosition);
	            }
	            _logger.logger.log('adjust currentTime from ' + currentTime + ' to ' + startPosition);
	            media.currentTime = startPosition;
	          }
	        } else if (this.immediateSwitch) {
	          this.immediateLevelSwitchEnd();
	        } else {
	          var bufferInfo = _bufferHelper2.default.bufferInfo(media, currentTime, 0),
	              expectedPlaying = !(media.paused || // not playing when media is paused
	          media.ended || // not playing when media is ended
	          media.buffered.length === 0),
	              // not playing if nothing buffered
	          jumpThreshold = 0.5,
	              // tolerance needed as some browsers stalls playback before reaching buffered range end
	          playheadMoving = currentTime !== this.lastCurrentTime,
	              config = this.config;
	
	          if (playheadMoving) {
	            // played moving, but was previously stalled => now not stuck anymore
	            if (this.stallReported) {
	              _logger.logger.warn('playback not stuck anymore @' + currentTime + ', after ' + Math.round(performance.now() - this.stalled) + 'ms');
	              this.stallReported = false;
	            }
	            this.stalled = undefined;
	            this.nudgeRetry = 0;
	          } else {
	            // playhead not moving
	            if (expectedPlaying) {
	              // playhead not moving BUT media expected to play
	              var tnow = performance.now();
	              var hls = this.hls;
	              if (!this.stalled) {
	                // stall just detected, store current time
	                this.stalled = tnow;
	                this.stallReported = false;
	              } else {
	                // playback already stalled, check stalling duration
	                // if stalling for more than a given threshold, let's try to recover
	                var stalledDuration = tnow - this.stalled;
	                var bufferLen = bufferInfo.len;
	                var nudgeRetry = this.nudgeRetry || 0;
	                // have we reached stall deadline ?
	                if (bufferLen <= jumpThreshold && stalledDuration > config.lowBufferWatchdogPeriod * 1000) {
	                  // report stalled error once
	                  if (!this.stallReported) {
	                    this.stallReported = true;
	                    _logger.logger.warn('playback stalling in low buffer @' + currentTime);
	                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: false, buffer: bufferLen });
	                  }
	                  // if buffer len is below threshold, try to jump to start of next buffer range if close
	                  // no buffer available @ currentTime, check if next buffer is close (within a config.maxSeekHole second range)
	                  var nextBufferStart = bufferInfo.nextStart,
	                      delta = nextBufferStart - currentTime;
	                  if (nextBufferStart && delta < config.maxSeekHole && delta > 0) {
	                    this.nudgeRetry = ++nudgeRetry;
	                    var nudgeOffset = nudgeRetry * config.nudgeOffset;
	                    // next buffer is close ! adjust currentTime to nextBufferStart
	                    // this will ensure effective video decoding
	                    _logger.logger.log('adjust currentTime from ' + media.currentTime + ' to next buffered @ ' + nextBufferStart + ' + nudge ' + nudgeOffset);
	                    media.currentTime = nextBufferStart + nudgeOffset;
	                    // reset stalled so to rearm watchdog timer
	                    this.stalled = undefined;
	                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_SEEK_OVER_HOLE, fatal: false, hole: nextBufferStart + nudgeOffset - currentTime });
	                  }
	                } else if (bufferLen > jumpThreshold && stalledDuration > config.highBufferWatchdogPeriod * 1000) {
	                  // report stalled error once
	                  if (!this.stallReported) {
	                    this.stallReported = true;
	                    _logger.logger.warn('playback stalling in high buffer @' + currentTime);
	                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: false, buffer: bufferLen });
	                  }
	                  // reset stalled so to rearm watchdog timer
	                  this.stalled = undefined;
	                  this.nudgeRetry = ++nudgeRetry;
	                  if (nudgeRetry < config.nudgeMaxRetry) {
	                    var _currentTime = media.currentTime;
	                    var targetTime = _currentTime + nudgeRetry * config.nudgeOffset;
	                    _logger.logger.log('adjust currentTime from ' + _currentTime + ' to ' + targetTime);
	                    // playback stalled in buffered area ... let's nudge currentTime to try to overcome this
	                    media.currentTime = targetTime;
	                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_NUDGE_ON_STALL, fatal: false });
	                  } else {
	                    _logger.logger.error('still stuck in high buffer @' + currentTime + ' after ' + config.nudgeMaxRetry + ', raise fatal error');
	                    hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.BUFFER_STALLED_ERROR, fatal: true });
	                  }
	                }
	              }
	            }
	          }
	        }
	      }
	    }
	  }, {
	    key: 'onFragLoadEmergencyAborted',
	    value: function onFragLoadEmergencyAborted() {
	      this.state = State.IDLE;
	      // if loadedmetadata is not set, it means that we are emergency switch down on first frag
	      // in that case, reset startFragRequested flag
	      if (!this.loadedmetadata) {
	        this.startFragRequested = false;
	        this.nextLoadPosition = this.startPosition;
	      }
	      this.tick();
	    }
	  }, {
	    key: 'onBufferFlushed',
	    value: function onBufferFlushed() {
	      /* after successful buffer flushing, filter flushed fragments from bufferedFrags
	        use mediaBuffered instead of media (so that we will check against video.buffered ranges in case of alt audio track)
	      */
	      var media = this.mediaBuffer ? this.mediaBuffer : this.media;
	      this._bufferedFrags = this._bufferedFrags.filter(function (frag) {
	        return _bufferHelper2.default.isBuffered(media, (frag.startPTS + frag.endPTS) / 2);
	      });
	
	      // increase fragment load Index to avoid frag loop loading error after buffer flush
	      this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold;
	      // move to IDLE once flush complete. this should trigger new fragment loading
	      this.state = State.IDLE;
	      // reset reference to frag
	      this.fragPrevious = null;
	    }
	  }, {
	    key: 'swapAudioCodec',
	    value: function swapAudioCodec() {
	      this.audioCodecSwap = !this.audioCodecSwap;
	    }
	  }, {
	    key: 'computeLivePosition',
	    value: function computeLivePosition(sliding, levelDetails) {
	      var targetLatency = this.config.liveSyncDuration !== undefined ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * levelDetails.targetduration;
	      return sliding + Math.max(0, levelDetails.totalduration - targetLatency);
	    }
	  }, {
	    key: 'state',
	    set: function set(nextState) {
	      if (this.state !== nextState) {
	        var previousState = this.state;
	        this._state = nextState;
	        _logger.logger.log('main stream:' + previousState + '->' + nextState);
	        this.hls.trigger(_events2.default.STREAM_STATE_TRANSITION, { previousState: previousState, nextState: nextState });
	      }
	    },
	    get: function get() {
	      return this._state;
	    }
	  }, {
	    key: 'currentLevel',
	    get: function get() {
	      var media = this.media;
	      if (media) {
	        var frag = this.getBufferedFrag(media.currentTime);
	        if (frag) {
	          return frag.level;
	        }
	      }
	      return -1;
	    }
	  }, {
	    key: 'nextBufferedFrag',
	    get: function get() {
	      var media = this.media;
	      if (media) {
	        // first get end range of current fragment
	        return this.followingBufferedFrag(this.getBufferedFrag(media.currentTime));
	      } else {
	        return null;
	      }
	    }
	  }, {
	    key: 'nextLevel',
	    get: function get() {
	      var frag = this.nextBufferedFrag;
	      if (frag) {
	        return frag.level;
	      } else {
	        return -1;
	      }
	    }
	  }, {
	    key: 'liveSyncPosition',
	    get: function get() {
	      return this._liveSyncPosition;
	    },
	    set: function set(value) {
	      this._liveSyncPosition = value;
	    }
	  }]);
	
	  return StreamController;
	}(_eventHandler2.default);
	
	exports.default = StreamController;
	
	},{"24":24,"30":30,"31":31,"32":32,"34":34,"35":35,"45":45,"50":50,"51":51}],13:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Subtitle Stream Controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var SubtitleStreamController = function (_EventHandler) {
	  _inherits(SubtitleStreamController, _EventHandler);
	
	  function SubtitleStreamController(hls) {
	    _classCallCheck(this, SubtitleStreamController);
	
	    var _this = _possibleConstructorReturn(this, (SubtitleStreamController.__proto__ || Object.getPrototypeOf(SubtitleStreamController)).call(this, hls, _events2.default.ERROR, _events2.default.SUBTITLE_TRACKS_UPDATED, _events2.default.SUBTITLE_TRACK_SWITCH, _events2.default.SUBTITLE_TRACK_LOADED, _events2.default.SUBTITLE_FRAG_PROCESSED));
	
	    _this.config = hls.config;
	    _this.vttFragSNsProcessed = {};
	    _this.vttFragQueues = undefined;
	    _this.currentlyProcessing = null;
	    _this.currentTrackId = -1;
	    return _this;
	  }
	
	  _createClass(SubtitleStreamController, [{
	    key: 'destroy',
	    value: function destroy() {
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	
	    // Remove all queued items and create a new, empty queue for each track.
	
	  }, {
	    key: 'clearVttFragQueues',
	    value: function clearVttFragQueues() {
	      var _this2 = this;
	
	      this.vttFragQueues = {};
	      this.tracks.forEach(function (track) {
	        _this2.vttFragQueues[track.id] = [];
	      });
	    }
	
	    // If no frag is being processed and queue isn't empty, initiate processing of next frag in line.
	
	  }, {
	    key: 'nextFrag',
	    value: function nextFrag() {
	      if (this.currentlyProcessing === null && this.currentTrackId > -1 && this.vttFragQueues[this.currentTrackId].length) {
	        var frag = this.currentlyProcessing = this.vttFragQueues[this.currentTrackId].shift();
	        this.hls.trigger(_events2.default.FRAG_LOADING, { frag: frag });
	      }
	    }
	
	    // When fragment has finished processing, add sn to list of completed if successful.
	
	  }, {
	    key: 'onSubtitleFragProcessed',
	    value: function onSubtitleFragProcessed(data) {
	      if (data.success) {
	        this.vttFragSNsProcessed[data.frag.trackId].push(data.frag.sn);
	      }
	      this.currentlyProcessing = null;
	      this.nextFrag();
	    }
	
	    // If something goes wrong, procede to next frag, if we were processing one.
	
	  }, {
	    key: 'onError',
	    value: function onError(data) {
	      var frag = data.frag;
	      // don't handle frag error not related to subtitle fragment
	      if (frag && frag.type !== 'subtitle') {
	        return;
	      }
	      if (this.currentlyProcessing) {
	        this.currentlyProcessing = null;
	        this.nextFrag();
	      }
	    }
	
	    // Got all new subtitle tracks.
	
	  }, {
	    key: 'onSubtitleTracksUpdated',
	    value: function onSubtitleTracksUpdated(data) {
	      var _this3 = this;
	
	      _logger.logger.log('subtitle tracks updated');
	      this.tracks = data.subtitleTracks;
	      this.clearVttFragQueues();
	      this.vttFragSNsProcessed = {};
	      this.tracks.forEach(function (track) {
	        _this3.vttFragSNsProcessed[track.id] = [];
	      });
	    }
	  }, {
	    key: 'onSubtitleTrackSwitch',
	    value: function onSubtitleTrackSwitch(data) {
	      this.currentTrackId = data.id;
	      this.clearVttFragQueues();
	    }
	
	    // Got a new set of subtitle fragments.
	
	  }, {
	    key: 'onSubtitleTrackLoaded',
	    value: function onSubtitleTrackLoaded(data) {
	      var processedFragSNs = this.vttFragSNsProcessed[data.id],
	          fragQueue = this.vttFragQueues[data.id],
	          currentFragSN = !!this.currentlyProcessing ? this.currentlyProcessing.sn : -1;
	
	      var alreadyProcessed = function alreadyProcessed(frag) {
	        return processedFragSNs.indexOf(frag.sn) > -1;
	      };
	
	      var alreadyInQueue = function alreadyInQueue(frag) {
	        return fragQueue.some(function (fragInQueue) {
	          return fragInQueue.sn === frag.sn;
	        });
	      };
	
	      // Add all fragments that haven't been, aren't currently being and aren't waiting to be processed, to queue.
	      data.details.fragments.forEach(function (frag) {
	        if (!(alreadyProcessed(frag) || frag.sn === currentFragSN || alreadyInQueue(frag))) {
	          // Frags don't know their subtitle track ID, so let's just add that...
	          frag.trackId = data.id;
	          fragQueue.push(frag);
	        }
	      });
	
	      this.nextFrag();
	    }
	  }]);
	
	  return SubtitleStreamController;
	}(_eventHandler2.default);
	
	exports.default = SubtitleStreamController;
	
	},{"31":31,"32":32,"50":50}],14:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * audio track controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var SubtitleTrackController = function (_EventHandler) {
	  _inherits(SubtitleTrackController, _EventHandler);
	
	  function SubtitleTrackController(hls) {
	    _classCallCheck(this, SubtitleTrackController);
	
	    var _this = _possibleConstructorReturn(this, (SubtitleTrackController.__proto__ || Object.getPrototypeOf(SubtitleTrackController)).call(this, hls, _events2.default.MEDIA_ATTACHED, _events2.default.MEDIA_DETACHING, _events2.default.MANIFEST_LOADING, _events2.default.MANIFEST_LOADED, _events2.default.SUBTITLE_TRACK_LOADED));
	
	    _this.tracks = [];
	    _this.trackId = -1;
	    _this.media = undefined;
	    return _this;
	  }
	
	  _createClass(SubtitleTrackController, [{
	    key: 'destroy',
	    value: function destroy() {
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	
	    // Listen for subtitle track change, then extract the current track ID.
	
	  }, {
	    key: 'onMediaAttached',
	    value: function onMediaAttached(data) {
	      var _this2 = this;
	
	      this.media = data.media;
	      if (!this.media) {
	        return;
	      }
	
	      this.media.textTracks.addEventListener('change', function () {
	        // Media is undefined when switching streams via loadSource()
	        if (!_this2.media) {
	          return;
	        }
	
	        var trackId = -1;
	        var tracks = _this2.media.textTracks;
	        for (var id = 0; id < tracks.length; id++) {
	          if (tracks[id].mode === 'showing') {
	            trackId = id;
	          }
	        }
	        // Setting current subtitleTrack will invoke code.
	        _this2.subtitleTrack = trackId;
	      });
	    }
	  }, {
	    key: 'onMediaDetaching',
	    value: function onMediaDetaching() {
	      // TODO: Remove event listeners.
	      this.media = undefined;
	    }
	
	    // Reset subtitle tracks on manifest loading
	
	  }, {
	    key: 'onManifestLoading',
	    value: function onManifestLoading() {
	      this.tracks = [];
	      this.trackId = -1;
	    }
	
	    // Fired whenever a new manifest is loaded.
	
	  }, {
	    key: 'onManifestLoaded',
	    value: function onManifestLoaded(data) {
	      var _this3 = this;
	
	      var tracks = data.subtitles || [];
	      var defaultFound = false;
	      this.tracks = tracks;
	      this.trackId = -1;
	      this.hls.trigger(_events2.default.SUBTITLE_TRACKS_UPDATED, { subtitleTracks: tracks });
	
	      // loop through available subtitle tracks and autoselect default if needed
	      // TODO: improve selection logic to handle forced, etc
	      tracks.forEach(function (track) {
	        if (track.default) {
	          _this3.subtitleTrack = track.id;
	          defaultFound = true;
	        }
	      });
	    }
	
	    // Trigger subtitle track playlist reload.
	
	  }, {
	    key: 'onTick',
	    value: function onTick() {
	      var trackId = this.trackId;
	      var subtitleTrack = this.tracks[trackId];
	      if (!subtitleTrack) {
	        return;
	      }
	
	      var details = subtitleTrack.details;
	      // check if we need to load playlist for this subtitle Track
	      if (details === undefined || details.live === true) {
	        // track not retrieved yet, or live playlist we need to (re)load it
	        _logger.logger.log('(re)loading playlist for subtitle track ' + trackId);
	        this.hls.trigger(_events2.default.SUBTITLE_TRACK_LOADING, { url: subtitleTrack.url, id: trackId });
	      }
	    }
	  }, {
	    key: 'onSubtitleTrackLoaded',
	    value: function onSubtitleTrackLoaded(data) {
	      var _this4 = this;
	
	      if (data.id < this.tracks.length) {
	        _logger.logger.log('subtitle track ' + data.id + ' loaded');
	        this.tracks[data.id].details = data.details;
	        // check if current playlist is a live playlist
	        if (data.details.live && !this.timer) {
	          // if live playlist we will have to reload it periodically
	          // set reload period to playlist target duration
	          this.timer = setInterval(function () {
	            _this4.onTick();
	          }, 1000 * data.details.targetduration, this);
	        }
	        if (!data.details.live && this.timer) {
	          // playlist is not live and timer is armed : stopping it
	          clearInterval(this.timer);
	          this.timer = null;
	        }
	      }
	    }
	
	    /** get alternate subtitle tracks list from playlist **/
	
	  }, {
	    key: 'setSubtitleTrackInternal',
	    value: function setSubtitleTrackInternal(newId) {
	      // check if level idx is valid
	      if (newId >= 0 && newId < this.tracks.length) {
	        // stopping live reloading timer if any
	        if (this.timer) {
	          clearInterval(this.timer);
	          this.timer = null;
	        }
	        this.trackId = newId;
	        _logger.logger.log('switching to subtitle track ' + newId);
	        var subtitleTrack = this.tracks[newId];
	        this.hls.trigger(_events2.default.SUBTITLE_TRACK_SWITCH, { id: newId });
	        // check if we need to load playlist for this subtitle Track
	        var details = subtitleTrack.details;
	        if (details === undefined || details.live === true) {
	          // track not retrieved yet, or live playlist we need to (re)load it
	          _logger.logger.log('(re)loading playlist for subtitle track ' + newId);
	          this.hls.trigger(_events2.default.SUBTITLE_TRACK_LOADING, { url: subtitleTrack.url, id: newId });
	        }
	      }
	    }
	  }, {
	    key: 'subtitleTracks',
	    get: function get() {
	      return this.tracks;
	    }
	
	    /** get index of the selected subtitle track (index in subtitle track lists) **/
	
	  }, {
	    key: 'subtitleTrack',
	    get: function get() {
	      return this.trackId;
	    }
	
	    /** select a subtitle track, based on its index in subtitle track lists**/
	    ,
	    set: function set(subtitleTrackId) {
	      if (this.trackId !== subtitleTrackId) {
	        // || this.tracks[subtitleTrackId].details === undefined) {
	        this.setSubtitleTrackInternal(subtitleTrackId);
	      }
	    }
	  }]);
	
	  return SubtitleTrackController;
	}(_eventHandler2.default);
	
	exports.default = SubtitleTrackController;
	
	},{"31":31,"32":32,"50":50}],15:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _cea608Parser = _dereq_(46);
	
	var _cea608Parser2 = _interopRequireDefault(_cea608Parser);
	
	var _webvttParser = _dereq_(54);
	
	var _webvttParser2 = _interopRequireDefault(_webvttParser);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Timeline Controller
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	function clearCurrentCues(track) {
	  if (track && track.cues) {
	    while (track.cues.length > 0) {
	      track.removeCue(track.cues[0]);
	    }
	  }
	}
	
	function reuseVttTextTrack(inUseTrack, manifestTrack) {
	  return inUseTrack && inUseTrack.label === manifestTrack.name && !(inUseTrack.textTrack1 || inUseTrack.textTrack2);
	}
	
	function intersection(x1, x2, y1, y2) {
	  return Math.min(x2, y2) - Math.max(x1, y1);
	}
	
	var TimelineController = function (_EventHandler) {
	  _inherits(TimelineController, _EventHandler);
	
	  function TimelineController(hls) {
	    _classCallCheck(this, TimelineController);
	
	    var _this = _possibleConstructorReturn(this, (TimelineController.__proto__ || Object.getPrototypeOf(TimelineController)).call(this, hls, _events2.default.MEDIA_ATTACHING, _events2.default.MEDIA_DETACHING, _events2.default.FRAG_PARSING_USERDATA, _events2.default.MANIFEST_LOADING, _events2.default.MANIFEST_LOADED, _events2.default.FRAG_LOADED, _events2.default.LEVEL_SWITCHING, _events2.default.INIT_PTS_FOUND));
	
	    _this.hls = hls;
	    _this.config = hls.config;
	    _this.enabled = true;
	    _this.Cues = hls.config.cueHandler;
	    _this.textTracks = [];
	    _this.tracks = [];
	    _this.unparsedVttFrags = [];
	    _this.initPTS = undefined;
	    _this.cueRanges = [];
	
	    if (_this.config.enableCEA708Captions) {
	      var self = _this;
	      var sendAddTrackEvent = function sendAddTrackEvent(track, media) {
	        var e = null;
	        try {
	          e = new window.Event('addtrack');
	        } catch (err) {
	          //for IE11
	          e = document.createEvent('Event');
	          e.initEvent('addtrack', false, false);
	        }
	        e.track = track;
	        media.dispatchEvent(e);
	      };
	
	      var channel1 = {
	        'newCue': function newCue(startTime, endTime, screen) {
	          if (!self.textTrack1) {
	            //Enable reuse of existing text track.
	            var existingTrack1 = self.getExistingTrack('1');
	            if (!existingTrack1) {
	              var textTrack1 = self.createTextTrack('captions', self.config.captionsTextTrack1Label, self.config.captionsTextTrack1LanguageCode);
	              if (textTrack1) {
	                textTrack1.textTrack1 = true;
	                self.textTrack1 = textTrack1;
	              }
	            } else {
	              self.textTrack1 = existingTrack1;
	              clearCurrentCues(self.textTrack1);
	
	              sendAddTrackEvent(self.textTrack1, self.media);
	            }
	          }
	          self.addCues('textTrack1', startTime, endTime, screen);
	        }
	      };
	
	      var channel2 = {
	        'newCue': function newCue(startTime, endTime, screen) {
	          if (!self.textTrack2) {
	            //Enable reuse of existing text track.
	            var existingTrack2 = self.getExistingTrack('2');
	            if (!existingTrack2) {
	              var textTrack2 = self.createTextTrack('captions', self.config.captionsTextTrack2Label, self.config.captionsTextTrack1LanguageCode);
	              if (textTrack2) {
	                textTrack2.textTrack2 = true;
	                self.textTrack2 = textTrack2;
	              }
	            } else {
	              self.textTrack2 = existingTrack2;
	              clearCurrentCues(self.textTrack2);
	
	              sendAddTrackEvent(self.textTrack2, self.media);
	            }
	          }
	          self.addCues('textTrack2', startTime, endTime, screen);
	        }
	      };
	
	      _this.cea608Parser = new _cea608Parser2.default(0, channel1, channel2);
	    }
	    return _this;
	  }
	
	  _createClass(TimelineController, [{
	    key: 'addCues',
	    value: function addCues(channel, startTime, endTime, screen) {
	      // skip cues which overlap more than 50% with previously parsed time ranges
	      var ranges = this.cueRanges;
	      var merged = false;
	      for (var i = ranges.length; i--;) {
	        var cueRange = ranges[i];
	        var overlap = intersection(cueRange[0], cueRange[1], startTime, endTime);
	        if (overlap >= 0) {
	          cueRange[0] = Math.min(cueRange[0], startTime);
	          cueRange[1] = Math.max(cueRange[1], endTime);
	          merged = true;
	          if (overlap / (endTime - startTime) > 0.5) {
	            return;
	          }
	        }
	      }
	      if (!merged) {
	        ranges.push([startTime, endTime]);
	      }
	      this.Cues.newCue(this[channel], startTime, endTime, screen);
	    }
	
	    // Triggered when an initial PTS is found; used for synchronisation of WebVTT.
	
	  }, {
	    key: 'onInitPtsFound',
	    value: function onInitPtsFound(data) {
	      var _this2 = this;
	
	      if (typeof this.initPTS === 'undefined') {
	        this.initPTS = data.initPTS;
	      }
	
	      // Due to asynchrony, initial PTS may arrive later than the first VTT fragments are loaded.
	      // Parse any unparsed fragments upon receiving the initial PTS.
	      if (this.unparsedVttFrags.length) {
	        this.unparsedVttFrags.forEach(function (frag) {
	          _this2.onFragLoaded(frag);
	        });
	        this.unparsedVttFrags = [];
	      }
	    }
	  }, {
	    key: 'getExistingTrack',
	    value: function getExistingTrack(channelNumber) {
	      var media = this.media;
	      if (media) {
	        for (var i = 0; i < media.textTracks.length; i++) {
	          var textTrack = media.textTracks[i];
	          var propName = 'textTrack' + channelNumber;
	          if (textTrack[propName] === true) {
	            return textTrack;
	          }
	        }
	      }
	      return null;
	    }
	  }, {
	    key: 'createTextTrack',
	    value: function createTextTrack(kind, label, lang) {
	      var media = this.media;
	      if (media) {
	        return media.addTextTrack(kind, label, lang);
	      }
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	  }, {
	    key: 'onMediaAttaching',
	    value: function onMediaAttaching(data) {
	      this.media = data.media;
	    }
	  }, {
	    key: 'onMediaDetaching',
	    value: function onMediaDetaching() {
	      clearCurrentCues(this.textTrack1);
	      clearCurrentCues(this.textTrack2);
	    }
	  }, {
	    key: 'onManifestLoading',
	    value: function onManifestLoading() {
	      this.lastSn = -1; // Detect discontiguity in fragment parsing
	      this.prevCC = -1;
	      this.vttCCs = { ccOffset: 0, presentationOffset: 0 }; // Detect discontinuity in subtitle manifests
	
	      // clear outdated subtitles
	      var media = this.media;
	      if (media) {
	        var textTracks = media.textTracks;
	        if (textTracks) {
	          for (var i = 0; i < textTracks.length; i++) {
	            clearCurrentCues(textTracks[i]);
	          }
	        }
	      }
	    }
	  }, {
	    key: 'onManifestLoaded',
	    value: function onManifestLoaded(data) {
	      var _this3 = this;
	
	      this.textTracks = [];
	      this.unparsedVttFrags = this.unparsedVttFrags || [];
	      this.initPTS = undefined;
	      this.cueRanges = [];
	
	      if (this.config.enableWebVTT) {
	        this.tracks = data.subtitles || [];
	        var inUseTracks = this.media ? this.media.textTracks : [];
	
	        this.tracks.forEach(function (track, index) {
	          var textTrack = void 0;
	          if (index < inUseTracks.length) {
	            var inUseTrack = inUseTracks[index];
	            // Reuse tracks with the same label, but do not reuse 608/708 tracks
	            if (reuseVttTextTrack(inUseTrack, track)) {
	              textTrack = inUseTrack;
	            }
	          }
	          if (!textTrack) {
	            textTrack = _this3.createTextTrack('subtitles', track.name, track.lang);
	          }
	          textTrack.mode = track.default ? 'showing' : 'hidden';
	          _this3.textTracks.push(textTrack);
	        });
	      }
	    }
	  }, {
	    key: 'onLevelSwitching',
	    value: function onLevelSwitching() {
	      this.enabled = this.hls.currentLevel.closedCaptions !== 'NONE';
	    }
	  }, {
	    key: 'onFragLoaded',
	    value: function onFragLoaded(data) {
	      var frag = data.frag,
	          payload = data.payload;
	      if (frag.type === 'main') {
	        var sn = frag.sn;
	        // if this frag isn't contiguous, clear the parser so cues with bad start/end times aren't added to the textTrack
	        if (sn !== this.lastSn + 1) {
	          this.cea608Parser.reset();
	        }
	        this.lastSn = sn;
	      }
	      // If fragment is subtitle type, parse as WebVTT.
	      else if (frag.type === 'subtitle') {
	          if (payload.byteLength) {
	            // We need an initial synchronisation PTS. Store fragments as long as none has arrived.
	            if (typeof this.initPTS === 'undefined') {
	              this.unparsedVttFrags.push(data);
	              return;
	            }
	            var vttCCs = this.vttCCs;
	            if (!vttCCs[frag.cc]) {
	              vttCCs[frag.cc] = { start: frag.start, prevCC: this.prevCC, new: true };
	              this.prevCC = frag.cc;
	            }
	            var textTracks = this.textTracks,
	                hls = this.hls;
	
	            // Parse the WebVTT file contents.
	            _webvttParser2.default.parse(payload, this.initPTS, vttCCs, frag.cc, function (cues) {
	              // Add cues and trigger event with success true.
	              cues.forEach(function (cue) {
	                textTracks[frag.trackId].addCue(cue);
	              });
	              hls.trigger(_events2.default.SUBTITLE_FRAG_PROCESSED, { success: true, frag: frag });
	            }, function (e) {
	              // Something went wrong while parsing. Trigger event with success false.
	              _logger.logger.log('Failed to parse VTT cue: ' + e);
	              hls.trigger(_events2.default.SUBTITLE_FRAG_PROCESSED, { success: false, frag: frag });
	            });
	          } else {
	            // In case there is no payload, finish unsuccessfully.
	            this.hls.trigger(_events2.default.SUBTITLE_FRAG_PROCESSED, { success: false, frag: frag });
	          }
	        }
	    }
	  }, {
	    key: 'onFragParsingUserdata',
	    value: function onFragParsingUserdata(data) {
	      // push all of the CEA-708 messages into the interpreter
	      // immediately. It will create the proper timestamps based on our PTS value
	      if (this.enabled && this.config.enableCEA708Captions) {
	        for (var i = 0; i < data.samples.length; i++) {
	          var ccdatas = this.extractCea608Data(data.samples[i].bytes);
	          this.cea608Parser.addData(data.samples[i].pts, ccdatas);
	        }
	      }
	    }
	  }, {
	    key: 'extractCea608Data',
	    value: function extractCea608Data(byteArray) {
	      var count = byteArray[0] & 31;
	      var position = 2;
	      var tmpByte, ccbyte1, ccbyte2, ccValid, ccType;
	      var actualCCBytes = [];
	
	      for (var j = 0; j < count; j++) {
	        tmpByte = byteArray[position++];
	        ccbyte1 = 0x7F & byteArray[position++];
	        ccbyte2 = 0x7F & byteArray[position++];
	        ccValid = (4 & tmpByte) !== 0;
	        ccType = 3 & tmpByte;
	
	        if (ccbyte1 === 0 && ccbyte2 === 0) {
	          continue;
	        }
	
	        if (ccValid) {
	          if (ccType === 0) // || ccType === 1
	            {
	              actualCCBytes.push(ccbyte1);
	              actualCCBytes.push(ccbyte2);
	            }
	        }
	      }
	      return actualCCBytes;
	    }
	  }]);
	
	  return TimelineController;
	}(_eventHandler2.default);
	
	exports.default = TimelineController;
	
	},{"31":31,"32":32,"46":46,"50":50,"54":54}],16:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var AESCrypto = function () {
	  function AESCrypto(subtle, iv) {
	    _classCallCheck(this, AESCrypto);
	
	    this.subtle = subtle;
	    this.aesIV = iv;
	  }
	
	  _createClass(AESCrypto, [{
	    key: 'decrypt',
	    value: function decrypt(data, key) {
	      return this.subtle.decrypt({ name: 'AES-CBC', iv: this.aesIV }, key, data);
	    }
	  }]);
	
	  return AESCrypto;
	}();
	
	exports.default = AESCrypto;
	
	},{}],17:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var AESDecryptor = function () {
	  function AESDecryptor() {
	    _classCallCheck(this, AESDecryptor);
	
	    // Static after running initTable
	    this.rcon = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];
	    this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)];
	    this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)];
	    this.sBox = new Uint32Array(256);
	    this.invSBox = new Uint32Array(256);
	
	    // Changes during runtime
	    this.key = new Uint32Array(0);
	
	    this.initTable();
	  }
	
	  // Using view.getUint32() also swaps the byte order.
	
	
	  _createClass(AESDecryptor, [{
	    key: 'uint8ArrayToUint32Array_',
	    value: function uint8ArrayToUint32Array_(arrayBuffer) {
	      var view = new DataView(arrayBuffer);
	      var newArray = new Uint32Array(4);
	      for (var i = 0; i < 4; i++) {
	        newArray[i] = view.getUint32(i * 4);
	      }
	      return newArray;
	    }
	  }, {
	    key: 'initTable',
	    value: function initTable() {
	      var sBox = this.sBox;
	      var invSBox = this.invSBox;
	      var subMix = this.subMix;
	      var subMix0 = subMix[0];
	      var subMix1 = subMix[1];
	      var subMix2 = subMix[2];
	      var subMix3 = subMix[3];
	      var invSubMix = this.invSubMix;
	      var invSubMix0 = invSubMix[0];
	      var invSubMix1 = invSubMix[1];
	      var invSubMix2 = invSubMix[2];
	      var invSubMix3 = invSubMix[3];
	
	      var d = new Uint32Array(256);
	      var x = 0;
	      var xi = 0;
	      var i = 0;
	      for (i = 0; i < 256; i++) {
	        if (i < 128) {
	          d[i] = i << 1;
	        } else {
	          d[i] = i << 1 ^ 0x11b;
	        }
	      }
	
	      for (i = 0; i < 256; i++) {
	        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
	        sx = sx >>> 8 ^ sx & 0xff ^ 0x63;
	        sBox[x] = sx;
	        invSBox[sx] = x;
	
	        // Compute multiplication
	        var x2 = d[x];
	        var x4 = d[x2];
	        var x8 = d[x4];
	
	        // Compute sub/invSub bytes, mix columns tables
	        var t = d[sx] * 0x101 ^ sx * 0x1010100;
	        subMix0[x] = t << 24 | t >>> 8;
	        subMix1[x] = t << 16 | t >>> 16;
	        subMix2[x] = t << 8 | t >>> 24;
	        subMix3[x] = t;
	
	        // Compute inv sub bytes, inv mix columns tables
	        t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;
	        invSubMix0[sx] = t << 24 | t >>> 8;
	        invSubMix1[sx] = t << 16 | t >>> 16;
	        invSubMix2[sx] = t << 8 | t >>> 24;
	        invSubMix3[sx] = t;
	
	        // Compute next counter
	        if (!x) {
	          x = xi = 1;
	        } else {
	          x = x2 ^ d[d[d[x8 ^ x2]]];
	          xi ^= d[d[xi]];
	        }
	      }
	    }
	  }, {
	    key: 'expandKey',
	    value: function expandKey(keyBuffer) {
	      // convert keyBuffer to Uint32Array
	      var key = this.uint8ArrayToUint32Array_(keyBuffer);
	      var sameKey = true;
	      var offset = 0;
	
	      while (offset < key.length && sameKey) {
	        sameKey = key[offset] === this.key[offset];
	        offset++;
	      }
	
	      if (sameKey) {
	        return;
	      }
	
	      this.key = key;
	      var keySize = this.keySize = key.length;
	
	      if (keySize !== 4 && keySize !== 6 && keySize !== 8) {
	        throw new Error('Invalid aes key size=' + keySize);
	      }
	
	      var ksRows = this.ksRows = (keySize + 6 + 1) * 4;
	      var ksRow = void 0;
	      var invKsRow = void 0;
	
	      var keySchedule = this.keySchedule = new Uint32Array(ksRows);
	      var invKeySchedule = this.invKeySchedule = new Uint32Array(ksRows);
	      var sbox = this.sBox;
	      var rcon = this.rcon;
	
	      var invSubMix = this.invSubMix;
	      var invSubMix0 = invSubMix[0];
	      var invSubMix1 = invSubMix[1];
	      var invSubMix2 = invSubMix[2];
	      var invSubMix3 = invSubMix[3];
	
	      var prev = void 0;
	      var t = void 0;
	
	      for (ksRow = 0; ksRow < ksRows; ksRow++) {
	        if (ksRow < keySize) {
	          prev = keySchedule[ksRow] = key[ksRow];
	          continue;
	        }
	        t = prev;
	
	        if (ksRow % keySize === 0) {
	          // Rot word
	          t = t << 8 | t >>> 24;
	
	          // Sub word
	          t = sbox[t >>> 24] << 24 | sbox[t >>> 16 & 0xff] << 16 | sbox[t >>> 8 & 0xff] << 8 | sbox[t & 0xff];
	
	          // Mix Rcon
	          t ^= rcon[ksRow / keySize | 0] << 24;
	        } else if (keySize > 6 && ksRow % keySize === 4) {
	          // Sub word
	          t = sbox[t >>> 24] << 24 | sbox[t >>> 16 & 0xff] << 16 | sbox[t >>> 8 & 0xff] << 8 | sbox[t & 0xff];
	        }
	
	        keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0;
	      }
	
	      for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {
	        ksRow = ksRows - invKsRow;
	        if (invKsRow & 3) {
	          t = keySchedule[ksRow];
	        } else {
	          t = keySchedule[ksRow - 4];
	        }
	
	        if (invKsRow < 4 || ksRow <= 4) {
	          invKeySchedule[invKsRow] = t;
	        } else {
	          invKeySchedule[invKsRow] = invSubMix0[sbox[t >>> 24]] ^ invSubMix1[sbox[t >>> 16 & 0xff]] ^ invSubMix2[sbox[t >>> 8 & 0xff]] ^ invSubMix3[sbox[t & 0xff]];
	        }
	
	        invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0;
	      }
	    }
	
	    // Adding this as a method greatly improves performance.
	
	  }, {
	    key: 'networkToHostOrderSwap',
	    value: function networkToHostOrderSwap(word) {
	      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;
	    }
	  }, {
	    key: 'decrypt',
	    value: function decrypt(inputArrayBuffer, offset, aesIV) {
	      var nRounds = this.keySize + 6;
	      var invKeySchedule = this.invKeySchedule;
	      var invSBOX = this.invSBox;
	
	      var invSubMix = this.invSubMix;
	      var invSubMix0 = invSubMix[0];
	      var invSubMix1 = invSubMix[1];
	      var invSubMix2 = invSubMix[2];
	      var invSubMix3 = invSubMix[3];
	
	      var initVector = this.uint8ArrayToUint32Array_(aesIV);
	      var initVector0 = initVector[0];
	      var initVector1 = initVector[1];
	      var initVector2 = initVector[2];
	      var initVector3 = initVector[3];
	
	      var inputInt32 = new Int32Array(inputArrayBuffer);
	      var outputInt32 = new Int32Array(inputInt32.length);
	
	      var t0 = void 0,
	          t1 = void 0,
	          t2 = void 0,
	          t3 = void 0;
	      var s0 = void 0,
	          s1 = void 0,
	          s2 = void 0,
	          s3 = void 0;
	      var inputWords0 = void 0,
	          inputWords1 = void 0,
	          inputWords2 = void 0,
	          inputWords3 = void 0;
	
	      var ksRow, i;
	      var swapWord = this.networkToHostOrderSwap;
	
	      while (offset < inputInt32.length) {
	        inputWords0 = swapWord(inputInt32[offset]);
	        inputWords1 = swapWord(inputInt32[offset + 1]);
	        inputWords2 = swapWord(inputInt32[offset + 2]);
	        inputWords3 = swapWord(inputInt32[offset + 3]);
	
	        s0 = inputWords0 ^ invKeySchedule[0];
	        s1 = inputWords3 ^ invKeySchedule[1];
	        s2 = inputWords2 ^ invKeySchedule[2];
	        s3 = inputWords1 ^ invKeySchedule[3];
	
	        ksRow = 4;
	
	        // Iterate through the rounds of decryption
	        for (i = 1; i < nRounds; i++) {
	          t0 = invSubMix0[s0 >>> 24] ^ invSubMix1[s1 >> 16 & 0xff] ^ invSubMix2[s2 >> 8 & 0xff] ^ invSubMix3[s3 & 0xff] ^ invKeySchedule[ksRow];
	          t1 = invSubMix0[s1 >>> 24] ^ invSubMix1[s2 >> 16 & 0xff] ^ invSubMix2[s3 >> 8 & 0xff] ^ invSubMix3[s0 & 0xff] ^ invKeySchedule[ksRow + 1];
	          t2 = invSubMix0[s2 >>> 24] ^ invSubMix1[s3 >> 16 & 0xff] ^ invSubMix2[s0 >> 8 & 0xff] ^ invSubMix3[s1 & 0xff] ^ invKeySchedule[ksRow + 2];
	          t3 = invSubMix0[s3 >>> 24] ^ invSubMix1[s0 >> 16 & 0xff] ^ invSubMix2[s1 >> 8 & 0xff] ^ invSubMix3[s2 & 0xff] ^ invKeySchedule[ksRow + 3];
	          // Update state
	          s0 = t0;
	          s1 = t1;
	          s2 = t2;
	          s3 = t3;
	
	          ksRow = ksRow + 4;
	        }
	
	        // Shift rows, sub bytes, add round key
	        t0 = invSBOX[s0 >>> 24] << 24 ^ invSBOX[s1 >> 16 & 0xff] << 16 ^ invSBOX[s2 >> 8 & 0xff] << 8 ^ invSBOX[s3 & 0xff] ^ invKeySchedule[ksRow];
	        t1 = invSBOX[s1 >>> 24] << 24 ^ invSBOX[s2 >> 16 & 0xff] << 16 ^ invSBOX[s3 >> 8 & 0xff] << 8 ^ invSBOX[s0 & 0xff] ^ invKeySchedule[ksRow + 1];
	        t2 = invSBOX[s2 >>> 24] << 24 ^ invSBOX[s3 >> 16 & 0xff] << 16 ^ invSBOX[s0 >> 8 & 0xff] << 8 ^ invSBOX[s1 & 0xff] ^ invKeySchedule[ksRow + 2];
	        t3 = invSBOX[s3 >>> 24] << 24 ^ invSBOX[s0 >> 16 & 0xff] << 16 ^ invSBOX[s1 >> 8 & 0xff] << 8 ^ invSBOX[s2 & 0xff] ^ invKeySchedule[ksRow + 3];
	        ksRow = ksRow + 3;
	
	        // Write
	        outputInt32[offset] = swapWord(t0 ^ initVector0);
	        outputInt32[offset + 1] = swapWord(t3 ^ initVector1);
	        outputInt32[offset + 2] = swapWord(t2 ^ initVector2);
	        outputInt32[offset + 3] = swapWord(t1 ^ initVector3);
	
	        // reset initVector to last 4 unsigned int
	        initVector0 = inputWords0;
	        initVector1 = inputWords1;
	        initVector2 = inputWords2;
	        initVector3 = inputWords3;
	
	        offset = offset + 4;
	      }
	
	      return outputInt32.buffer;
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      this.key = undefined;
	      this.keySize = undefined;
	      this.ksRows = undefined;
	
	      this.sBox = undefined;
	      this.invSBox = undefined;
	      this.subMix = undefined;
	      this.invSubMix = undefined;
	      this.keySchedule = undefined;
	      this.invKeySchedule = undefined;
	
	      this.rcon = undefined;
	    }
	  }]);
	
	  return AESDecryptor;
	}();
	
	exports.default = AESDecryptor;
	
	},{}],18:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _aesCrypto = _dereq_(16);
	
	var _aesCrypto2 = _interopRequireDefault(_aesCrypto);
	
	var _fastAesKey = _dereq_(19);
	
	var _fastAesKey2 = _interopRequireDefault(_fastAesKey);
	
	var _aesDecryptor = _dereq_(17);
	
	var _aesDecryptor2 = _interopRequireDefault(_aesDecryptor);
	
	var _errors = _dereq_(30);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/*globals self: false */
	
	var Decrypter = function () {
	  function Decrypter(observer, config) {
	    _classCallCheck(this, Decrypter);
	
	    this.observer = observer;
	    this.config = config;
	    this.logEnabled = true;
	    try {
	      var browserCrypto = crypto ? crypto : self.crypto;
	      this.subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;
	    } catch (e) {}
	    this.disableWebCrypto = !this.subtle;
	  }
	
	  _createClass(Decrypter, [{
	    key: 'isSync',
	    value: function isSync() {
	      return this.disableWebCrypto && this.config.enableSoftwareAES;
	    }
	  }, {
	    key: 'decrypt',
	    value: function decrypt(data, key, iv, callback) {
	      var _this = this;
	
	      if (this.disableWebCrypto && this.config.enableSoftwareAES) {
	        if (this.logEnabled) {
	          _logger.logger.log('JS AES decrypt');
	          this.logEnabled = false;
	        }
	        var decryptor = this.decryptor;
	        if (!decryptor) {
	          this.decryptor = decryptor = new _aesDecryptor2.default();
	        }
	        decryptor.expandKey(key);
	        callback(decryptor.decrypt(data, 0, iv));
	      } else {
	        if (this.logEnabled) {
	          _logger.logger.log('WebCrypto AES decrypt');
	          this.logEnabled = false;
	        }
	        var subtle = this.subtle;
	        if (this.key !== key) {
	          this.key = key;
	          this.fastAesKey = new _fastAesKey2.default(subtle, key);
	        }
	
	        this.fastAesKey.expandKey().then(function (aesKey) {
	          // decrypt using web crypto
	          var crypto = new _aesCrypto2.default(subtle, iv);
	          crypto.decrypt(data, aesKey).catch(function (err) {
	            _this.onWebCryptoError(err, data, key, iv, callback);
	          }).then(function (result) {
	            callback(result);
	          });
	        }).catch(function (err) {
	          _this.onWebCryptoError(err, data, key, iv, callback);
	        });
	      }
	    }
	  }, {
	    key: 'onWebCryptoError',
	    value: function onWebCryptoError(err, data, key, iv, callback) {
	      if (this.config.enableSoftwareAES) {
	        _logger.logger.log('WebCrypto Error, disable WebCrypto API');
	        this.disableWebCrypto = true;
	        this.logEnabled = true;
	        this.decrypt(data, key, iv, callback);
	      } else {
	        _logger.logger.error('decrypting error : ' + err.message);
	        this.observer.trigger(Event.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_DECRYPT_ERROR, fatal: true, reason: err.message });
	      }
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      var decryptor = this.decryptor;
	      if (decryptor) {
	        decryptor.destroy();
	        this.decryptor = undefined;
	      }
	    }
	  }]);
	
	  return Decrypter;
	}();
	
	exports.default = Decrypter;
	
	},{"16":16,"17":17,"19":19,"30":30,"50":50}],19:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var FastAESKey = function () {
	  function FastAESKey(subtle, key) {
	    _classCallCheck(this, FastAESKey);
	
	    this.subtle = subtle;
	    this.key = key;
	  }
	
	  _createClass(FastAESKey, [{
	    key: 'expandKey',
	    value: function expandKey() {
	      return this.subtle.importKey('raw', this.key, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);
	    }
	  }]);
	
	  return FastAESKey;
	}();
	
	exports.default = FastAESKey;
	
	},{}],20:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * AAC demuxer
	
	
	
	var _adts = _dereq_(21);
	
	var _adts2 = _interopRequireDefault(_adts);
	
	var _logger = _dereq_(50);
	
	var _id = _dereq_(26);
	
	var _id2 = _interopRequireDefault(_id);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var AACDemuxer = function () {
	  function AACDemuxer(observer, remuxer, config) {
	    _classCallCheck(this, AACDemuxer);
	
	    this.observer = observer;
	    this.config = config;
	    this.remuxer = remuxer;
	  }
	
	  _createClass(AACDemuxer, [{
	    key: 'resetInitSegment',
	    value: function resetInitSegment(initSegment, audioCodec, videoCodec, duration) {
	      this._aacTrack = { container: 'audio/adts', type: 'audio', id: -1, sequenceNumber: 0, isAAC: true, samples: [], len: 0, manifestCodec: audioCodec, duration: duration, inputTimeScale: 90000 };
	    }
	  }, {
	    key: 'resetTimeStamp',
	    value: function resetTimeStamp() {}
	  }, {
	    key: 'append',
	
	
	    // feed incoming data to the front of the parsing pipeline
	    value: function append(data, timeOffset, contiguous, accurateTimeOffset) {
	      var track,
	          id3 = new _id2.default(data),
	          pts = 90 * id3.timeStamp,
	          config,
	          frameLength,
	          frameDuration,
	          frameIndex,
	          offset,
	          headerLength,
	          stamp,
	          len,
	          aacSample;
	
	      track = this._aacTrack;
	
	      // look for ADTS header (0xFFFx)
	      for (offset = id3.length, len = data.length; offset < len - 1; offset++) {
	        if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {
	          break;
	        }
	      }
	
	      if (!track.samplerate) {
	        config = _adts2.default.getAudioConfig(this.observer, data, offset, track.manifestCodec);
	        track.config = config.config;
	        track.samplerate = config.samplerate;
	        track.channelCount = config.channelCount;
	        track.codec = config.codec;
	        _logger.logger.log('parsed codec:' + track.codec + ',rate:' + config.samplerate + ',nb channel:' + config.channelCount);
	      }
	      frameIndex = 0;
	      frameDuration = 1024 * 90000 / track.samplerate;
	      while (offset + 5 < len) {
	        // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header
	        headerLength = !!(data[offset + 1] & 0x01) ? 7 : 9;
	        // retrieve frame size
	        frameLength = (data[offset + 3] & 0x03) << 11 | data[offset + 4] << 3 | (data[offset + 5] & 0xE0) >>> 5;
	        frameLength -= headerLength;
	        //stamp = pes.pts;
	
	        if (frameLength > 0 && offset + headerLength + frameLength <= len) {
	          stamp = pts + frameIndex * frameDuration;
	          //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);
	          aacSample = { unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp };
	          track.samples.push(aacSample);
	          track.len += frameLength;
	          offset += frameLength + headerLength;
	          frameIndex++;
	          // look for ADTS header (0xFFFx)
	          for (; offset < len - 1; offset++) {
	            if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {
	              break;
	            }
	          }
	        } else {
	          break;
	        }
	      }
	      this.remuxer.remux(track, { samples: [] }, { samples: [{ pts: pts, dts: pts, unit: id3.payload }] }, { samples: [] }, timeOffset, contiguous, accurateTimeOffset);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {}
	  }], [{
	    key: 'probe',
	    value: function probe(data) {
	      // check if data contains ID3 timestamp and ADTS sync worc
	      var id3 = new _id2.default(data),
	          offset,
	          len;
	      if (id3.hasTimeStamp) {
	        // look for ADTS header (0xFFFx)
	        for (offset = id3.length, len = data.length; offset < len - 1; offset++) {
	          if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {
	            //logger.log('ADTS sync word found !');
	            return true;
	          }
	        }
	      }
	      return false;
	    }
	  }]);
	
	  return AACDemuxer;
	}();
	
	exports.default = AACDemuxer;
	
	},{"21":21,"26":26,"50":50}],21:[function(_dereq_,module,exports){
	'use strict';
	
	var _logger = _dereq_(50);
	
	var _errors = _dereq_(30);
	
	/**
	 *  ADTS parser helper
	 */
	var ADTS = {
	  getAudioConfig: function getAudioConfig(observer, data, offset, audioCodec) {
	    var adtsObjectType,
	        // :int
	    adtsSampleingIndex,
	        // :int
	    adtsExtensionSampleingIndex,
	        // :int
	    adtsChanelConfig,
	        // :int
	    config,
	        userAgent = navigator.userAgent.toLowerCase(),
	        manifestCodec = audioCodec,
	        adtsSampleingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];
	    // byte 2
	    adtsObjectType = ((data[offset + 2] & 0xC0) >>> 6) + 1;
	    adtsSampleingIndex = (data[offset + 2] & 0x3C) >>> 2;
	    if (adtsSampleingIndex > adtsSampleingRates.length - 1) {
	      observer.trigger(Event.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: 'invalid ADTS sampling index:' + adtsSampleingIndex });
	      return;
	    }
	    adtsChanelConfig = (data[offset + 2] & 0x01) << 2;
	    // byte 3
	    adtsChanelConfig |= (data[offset + 3] & 0xC0) >>> 6;
	    _logger.logger.log('manifest codec:' + audioCodec + ',ADTS data:type:' + adtsObjectType + ',sampleingIndex:' + adtsSampleingIndex + '[' + adtsSampleingRates[adtsSampleingIndex] + 'Hz],channelConfig:' + adtsChanelConfig);
	    // firefox: freq less than 24kHz = AAC SBR (HE-AAC)
	    if (/firefox/i.test(userAgent)) {
	      if (adtsSampleingIndex >= 6) {
	        adtsObjectType = 5;
	        config = new Array(4);
	        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies
	        // there is a factor 2 between frame sample rate and output sample rate
	        // multiply frequency by 2 (see table below, equivalent to substract 3)
	        adtsExtensionSampleingIndex = adtsSampleingIndex - 3;
	      } else {
	        adtsObjectType = 2;
	        config = new Array(2);
	        adtsExtensionSampleingIndex = adtsSampleingIndex;
	      }
	      // Android : always use AAC
	    } else if (userAgent.indexOf('android') !== -1) {
	      adtsObjectType = 2;
	      config = new Array(2);
	      adtsExtensionSampleingIndex = adtsSampleingIndex;
	    } else {
	      /*  for other browsers (Chrome/Vivaldi/Opera ...)
	          always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)
	      */
	      adtsObjectType = 5;
	      config = new Array(4);
	      // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)
	      if (audioCodec && (audioCodec.indexOf('mp4a.40.29') !== -1 || audioCodec.indexOf('mp4a.40.5') !== -1) || !audioCodec && adtsSampleingIndex >= 6) {
	        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies
	        // there is a factor 2 between frame sample rate and output sample rate
	        // multiply frequency by 2 (see table below, equivalent to substract 3)
	        adtsExtensionSampleingIndex = adtsSampleingIndex - 3;
	      } else {
	        // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)
	        // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.
	        if (audioCodec && audioCodec.indexOf('mp4a.40.2') !== -1 && adtsSampleingIndex >= 6 && adtsChanelConfig === 1 || !audioCodec && adtsChanelConfig === 1) {
	          adtsObjectType = 2;
	          config = new Array(2);
	        }
	        adtsExtensionSampleingIndex = adtsSampleingIndex;
	      }
	    }
	    /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config
	        ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()
	      Audio Profile / Audio Object Type
	      0: Null
	      1: AAC Main
	      2: AAC LC (Low Complexity)
	      3: AAC SSR (Scalable Sample Rate)
	      4: AAC LTP (Long Term Prediction)
	      5: SBR (Spectral Band Replication)
	      6: AAC Scalable
	     sampling freq
	      0: 96000 Hz
	      1: 88200 Hz
	      2: 64000 Hz
	      3: 48000 Hz
	      4: 44100 Hz
	      5: 32000 Hz
	      6: 24000 Hz
	      7: 22050 Hz
	      8: 16000 Hz
	      9: 12000 Hz
	      10: 11025 Hz
	      11: 8000 Hz
	      12: 7350 Hz
	      13: Reserved
	      14: Reserved
	      15: frequency is written explictly
	      Channel Configurations
	      These are the channel configurations:
	      0: Defined in AOT Specifc Config
	      1: 1 channel: front-center
	      2: 2 channels: front-left, front-right
	    */
	    // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1
	    config[0] = adtsObjectType << 3;
	    // samplingFrequencyIndex
	    config[0] |= (adtsSampleingIndex & 0x0E) >> 1;
	    config[1] |= (adtsSampleingIndex & 0x01) << 7;
	    // channelConfiguration
	    config[1] |= adtsChanelConfig << 3;
	    if (adtsObjectType === 5) {
	      // adtsExtensionSampleingIndex
	      config[1] |= (adtsExtensionSampleingIndex & 0x0E) >> 1;
	      config[2] = (adtsExtensionSampleingIndex & 0x01) << 7;
	      // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???
	      //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc
	      config[2] |= 2 << 2;
	      config[3] = 0;
	    }
	    return { config: config, samplerate: adtsSampleingRates[adtsSampleingIndex], channelCount: adtsChanelConfig, codec: 'mp4a.40.' + adtsObjectType, manifestCodec: manifestCodec };
	  }
	};
	
	module.exports = ADTS;
	
	},{"30":30,"50":50}],22:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*  inline demuxer.
	probe fragments and instantiate appropriate demuxer depending on content type (TSDemuxer, AACDemuxer, ...)
	
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _errors = _dereq_(30);
	
	var _decrypter = _dereq_(18);
	
	var _decrypter2 = _interopRequireDefault(_decrypter);
	
	var _aacdemuxer = _dereq_(20);
	
	var _aacdemuxer2 = _interopRequireDefault(_aacdemuxer);
	
	var _mp4demuxer = _dereq_(27);
	
	var _mp4demuxer2 = _interopRequireDefault(_mp4demuxer);
	
	var _tsdemuxer = _dereq_(29);
	
	var _tsdemuxer2 = _interopRequireDefault(_tsdemuxer);
	
	var _mp4Remuxer = _dereq_(42);
	
	var _mp4Remuxer2 = _interopRequireDefault(_mp4Remuxer);
	
	var _passthroughRemuxer = _dereq_(43);
	
	var _passthroughRemuxer2 = _interopRequireDefault(_passthroughRemuxer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var DemuxerInline = function () {
	  function DemuxerInline(observer, typeSupported, config, vendor) {
	    _classCallCheck(this, DemuxerInline);
	
	    this.observer = observer;
	    this.typeSupported = typeSupported;
	    this.config = config;
	    this.vendor = vendor;
	  }
	
	  _createClass(DemuxerInline, [{
	    key: 'destroy',
	    value: function destroy() {
	      var demuxer = this.demuxer;
	      if (demuxer) {
	        demuxer.destroy();
	      }
	    }
	  }, {
	    key: 'push',
	    value: function push(data, decryptdata, initSegment, audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS) {
	      if (data.byteLength > 0 && decryptdata != null && decryptdata.key != null && decryptdata.method === 'AES-128') {
	        var decrypter = this.decrypter;
	        if (decrypter == null) {
	          decrypter = this.decrypter = new _decrypter2.default(this.observer, this.config);
	        }
	        var localthis = this;
	        // performance.now() not available on WebWorker, at least on Safari Desktop
	        var startTime;
	        try {
	          startTime = performance.now();
	        } catch (error) {
	          startTime = Date.now();
	        }
	        decrypter.decrypt(data, decryptdata.key.buffer, decryptdata.iv.buffer, function (decryptedData) {
	          var endTime;
	          try {
	            endTime = performance.now();
	          } catch (error) {
	            endTime = Date.now();
	          }
	          localthis.observer.trigger(_events2.default.FRAG_DECRYPTED, { stats: { tstart: startTime, tdecrypt: endTime } });
	          localthis.pushDecrypted(new Uint8Array(decryptedData), decryptdata, new Uint8Array(initSegment), audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS);
	        });
	      } else {
	        this.pushDecrypted(new Uint8Array(data), decryptdata, new Uint8Array(initSegment), audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS);
	      }
	    }
	  }, {
	    key: 'pushDecrypted',
	    value: function pushDecrypted(data, decryptdata, initSegment, audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS) {
	      var demuxer = this.demuxer;
	      if (!demuxer ||
	      // in case of continuity change, we might switch from content type (AAC container to TS container for example)
	      // so let's check that current demuxer is still valid
	      discontinuity && !this.probe(data)) {
	        var observer = this.observer;
	        var typeSupported = this.typeSupported;
	        var config = this.config;
	        var muxConfig = [{ demux: _tsdemuxer2.default, remux: _mp4Remuxer2.default }, { demux: _aacdemuxer2.default, remux: _mp4Remuxer2.default }, { demux: _mp4demuxer2.default, remux: _passthroughRemuxer2.default }];
	
	        // probe for content type
	        for (var i in muxConfig) {
	          var mux = muxConfig[i];
	          var probe = mux.demux.probe;
	          if (probe(data)) {
	            var _remuxer = this.remuxer = new mux.remux(observer, config, typeSupported, this.vendor);
	            demuxer = new mux.demux(observer, _remuxer, config, typeSupported);
	            this.probe = probe;
	            break;
	          }
	        }
	        if (!demuxer) {
	          observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: true, reason: 'no demux matching with content found' });
	          return;
	        }
	        this.demuxer = demuxer;
	      }
	      var remuxer = this.remuxer;
	
	      if (discontinuity || trackSwitch) {
	        demuxer.resetInitSegment(initSegment, audioCodec, videoCodec, duration);
	        remuxer.resetInitSegment();
	      }
	      if (discontinuity) {
	        demuxer.resetTimeStamp();
	        remuxer.resetTimeStamp(defaultInitPTS);
	      }
	      if (typeof demuxer.setDecryptData === 'function') {
	        demuxer.setDecryptData(decryptdata);
	      }
	      demuxer.append(data, timeOffset, contiguous, accurateTimeOffset);
	    }
	  }]);
	
	  return DemuxerInline;
	}();
	
	exports.default = DemuxerInline;
	
	},{"18":18,"20":20,"27":27,"29":29,"30":30,"32":32,"42":42,"43":43}],23:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _demuxerInline = _dereq_(22);
	
	var _demuxerInline2 = _interopRequireDefault(_demuxerInline);
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _logger = _dereq_(50);
	
	var _events3 = _dereq_(1);
	
	var _events4 = _interopRequireDefault(_events3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* demuxer web worker.
	 *  - listen to worker message, and trigger DemuxerInline upon reception of Fragments.
	 *  - provides MP4 Boxes back to main thread using [transferable objects](https://developers.google.com/web/updates/2011/12/Transferable-Objects-Lightning-Fast) in order to minimize message passing overhead.
	 */
	
	var DemuxerWorker = function DemuxerWorker(self) {
	  // observer setup
	  var observer = new _events4.default();
	  observer.trigger = function trigger(event) {
	    for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      data[_key - 1] = arguments[_key];
	    }
	
	    observer.emit.apply(observer, [event, event].concat(data));
	  };
	
	  observer.off = function off(event) {
	    for (var _len2 = arguments.length, data = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	      data[_key2 - 1] = arguments[_key2];
	    }
	
	    observer.removeListener.apply(observer, [event].concat(data));
	  };
	
	  var forwardMessage = function forwardMessage(ev, data) {
	    self.postMessage({ event: ev, data: data });
	  };
	
	  self.addEventListener('message', function (ev) {
	    var data = ev.data;
	    //console.log('demuxer cmd:' + data.cmd);
	    switch (data.cmd) {
	      case 'init':
	        var config = JSON.parse(data.config);
	        self.demuxer = new _demuxerInline2.default(observer, data.typeSupported, config, data.vendor);
	        try {
	          (0, _logger.enableLogs)(config.debug === true);
	        } catch (err) {
	          console.warn('demuxerWorker: unable to enable logs');
	        }
	        // signal end of worker init
	        forwardMessage('init', null);
	        break;
	      case 'demux':
	        self.demuxer.push(data.data, data.decryptdata, data.initSegment, data.audioCodec, data.videoCodec, data.timeOffset, data.discontinuity, data.trackSwitch, data.contiguous, data.duration, data.accurateTimeOffset, data.defaultInitPTS);
	        break;
	      default:
	        break;
	    }
	  });
	
	  // forward events to main thread
	  observer.on(_events2.default.FRAG_DECRYPTED, forwardMessage);
	  observer.on(_events2.default.FRAG_PARSING_INIT_SEGMENT, forwardMessage);
	  observer.on(_events2.default.FRAG_PARSED, forwardMessage);
	  observer.on(_events2.default.ERROR, forwardMessage);
	  observer.on(_events2.default.FRAG_PARSING_METADATA, forwardMessage);
	  observer.on(_events2.default.FRAG_PARSING_USERDATA, forwardMessage);
	  observer.on(_events2.default.INIT_PTS_FOUND, forwardMessage);
	
	  // special case for FRAG_PARSING_DATA: pass data1/data2 as transferable object (no copy)
	  observer.on(_events2.default.FRAG_PARSING_DATA, function (ev, data) {
	    var transferable = [];
	    var message = { event: ev, data: data };
	    if (data.data1) {
	      message.data1 = data.data1.buffer;
	      transferable.push(data.data1.buffer);
	      delete data.data1;
	    }
	    if (data.data2) {
	      message.data2 = data.data2.buffer;
	      transferable.push(data.data2.buffer);
	      delete data.data2;
	    }
	    self.postMessage(message, transferable);
	  });
	};
	
	exports.default = DemuxerWorker;
	
	},{"1":1,"22":22,"32":32,"50":50}],24:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _demuxerInline = _dereq_(22);
	
	var _demuxerInline2 = _interopRequireDefault(_demuxerInline);
	
	var _demuxerWorker = _dereq_(23);
	
	var _demuxerWorker2 = _interopRequireDefault(_demuxerWorker);
	
	var _logger = _dereq_(50);
	
	var _errors = _dereq_(30);
	
	var _events3 = _dereq_(1);
	
	var _events4 = _interopRequireDefault(_events3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Demuxer = function () {
	  function Demuxer(hls, id) {
	    _classCallCheck(this, Demuxer);
	
	    this.hls = hls;
	    this.id = id;
	    // observer setup
	    var observer = this.observer = new _events4.default();
	    var config = hls.config;
	    observer.trigger = function trigger(event) {
	      for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        data[_key - 1] = arguments[_key];
	      }
	
	      observer.emit.apply(observer, [event, event].concat(data));
	    };
	
	    observer.off = function off(event) {
	      for (var _len2 = arguments.length, data = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        data[_key2 - 1] = arguments[_key2];
	      }
	
	      observer.removeListener.apply(observer, [event].concat(data));
	    };
	
	    var forwardMessage = function (ev, data) {
	      data = data || {};
	      data.frag = this.frag;
	      data.id = this.id;
	      hls.trigger(ev, data);
	    }.bind(this);
	
	    // forward events to main thread
	    observer.on(_events2.default.FRAG_DECRYPTED, forwardMessage);
	    observer.on(_events2.default.FRAG_PARSING_INIT_SEGMENT, forwardMessage);
	    observer.on(_events2.default.FRAG_PARSING_DATA, forwardMessage);
	    observer.on(_events2.default.FRAG_PARSED, forwardMessage);
	    observer.on(_events2.default.ERROR, forwardMessage);
	    observer.on(_events2.default.FRAG_PARSING_METADATA, forwardMessage);
	    observer.on(_events2.default.FRAG_PARSING_USERDATA, forwardMessage);
	    observer.on(_events2.default.INIT_PTS_FOUND, forwardMessage);
	
	    var typeSupported = {
	      mp4: MediaSource.isTypeSupported('video/mp4'),
	      mpeg: MediaSource.isTypeSupported('audio/mpeg'),
	      mp3: MediaSource.isTypeSupported('audio/mp4; codecs="mp3"')
	    };
	    // navigator.vendor is not always available in Web Worker
	    // refer to https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/navigator
	    var vendor = navigator.vendor;
	    if (config.enableWorker && typeof Worker !== 'undefined') {
	      _logger.logger.log('demuxing in webworker');
	      var w = void 0;
	      try {
	        var work = _dereq_(3);
	        w = this.w = work(_demuxerWorker2.default);
	        this.onwmsg = this.onWorkerMessage.bind(this);
	        w.addEventListener('message', this.onwmsg);
	        w.onerror = function (event) {
	          hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.INTERNAL_EXCEPTION, fatal: true, event: 'demuxerWorker', err: { message: event.message + ' (' + event.filename + ':' + event.lineno + ')' } });
	        };
	        w.postMessage({ cmd: 'init', typeSupported: typeSupported, vendor: vendor, id: id, config: JSON.stringify(config) });
	      } catch (err) {
	        _logger.logger.error('error while initializing DemuxerWorker, fallback on DemuxerInline');
	        if (w) {
	          // revoke the Object URL that was used to create demuxer worker, so as not to leak it
	          URL.revokeObjectURL(w.objectURL);
	        }
	        this.demuxer = new _demuxerInline2.default(observer, typeSupported, config, vendor);
	        this.w = undefined;
	      }
	    } else {
	      this.demuxer = new _demuxerInline2.default(observer, typeSupported, config, vendor);
	    }
	  }
	
	  _createClass(Demuxer, [{
	    key: 'destroy',
	    value: function destroy() {
	      var w = this.w;
	      if (w) {
	        w.removeEventListener('message', this.onwmsg);
	        w.terminate();
	        this.w = null;
	      } else {
	        var demuxer = this.demuxer;
	        if (demuxer) {
	          demuxer.destroy();
	          this.demuxer = null;
	        }
	      }
	      var observer = this.observer;
	      if (observer) {
	        observer.removeAllListeners();
	        this.observer = null;
	      }
	    }
	  }, {
	    key: 'push',
	    value: function push(data, initSegment, audioCodec, videoCodec, frag, duration, accurateTimeOffset, defaultInitPTS) {
	      var w = this.w;
	      var timeOffset = !isNaN(frag.startDTS) ? frag.startDTS : frag.start;
	      var decryptdata = frag.decryptdata;
	      var lastFrag = this.frag;
	      var discontinuity = !(lastFrag && frag.cc === lastFrag.cc);
	      var trackSwitch = !(lastFrag && frag.level === lastFrag.level);
	      var nextSN = lastFrag && frag.sn === lastFrag.sn + 1;
	      var contiguous = !trackSwitch && nextSN;
	      if (discontinuity) {
	        _logger.logger.log(this.id + ':discontinuity detected');
	      }
	      if (trackSwitch) {
	        _logger.logger.log(this.id + ':switch detected');
	      }
	      this.frag = frag;
	      if (w) {
	        // post fragment payload as transferable objects (no copy)
	        w.postMessage({ cmd: 'demux', data: data, decryptdata: decryptdata, initSegment: initSegment, audioCodec: audioCodec, videoCodec: videoCodec, timeOffset: timeOffset, discontinuity: discontinuity, trackSwitch: trackSwitch, contiguous: contiguous, duration: duration, accurateTimeOffset: accurateTimeOffset, defaultInitPTS: defaultInitPTS }, [data]);
	      } else {
	        var demuxer = this.demuxer;
	        if (demuxer) {
	          demuxer.push(data, decryptdata, initSegment, audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS);
	        }
	      }
	    }
	  }, {
	    key: 'onWorkerMessage',
	    value: function onWorkerMessage(ev) {
	      var data = ev.data,
	          hls = this.hls;
	      //console.log('onWorkerMessage:' + data.event);
	      switch (data.event) {
	        case 'init':
	          // revoke the Object URL that was used to create demuxer worker, so as not to leak it
	          URL.revokeObjectURL(this.w.objectURL);
	          break;
	        // special case for FRAG_PARSING_DATA: data1 and data2 are transferable objects
	        case _events2.default.FRAG_PARSING_DATA:
	          data.data.data1 = new Uint8Array(data.data1);
	          if (data.data2) {
	            data.data.data2 = new Uint8Array(data.data2);
	          }
	        /* falls through */
	        default:
	          data.data = data.data || {};
	          data.data.frag = this.frag;
	          data.data.id = this.id;
	          hls.trigger(data.event, data.data);
	          break;
	      }
	    }
	  }]);
	
	  return Demuxer;
	}();
	
	exports.default = Demuxer;
	
	},{"1":1,"22":22,"23":23,"3":3,"30":30,"32":32,"50":50}],25:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	arser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.
	
	
	var _logger = _dereq_(50);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ExpGolomb = function () {
	  function ExpGolomb(data) {
	    _classCallCheck(this, ExpGolomb);
	
	    this.data = data;
	    // the number of bytes left to examine in this.data
	    this.bytesAvailable = data.byteLength;
	    // the current word being examined
	    this.word = 0; // :uint
	    // the number of bits left to examine in the current word
	    this.bitsAvailable = 0; // :uint
	  }
	
	  // ():void
	
	
	  _createClass(ExpGolomb, [{
	    key: 'loadWord',
	    value: function loadWord() {
	      var data = this.data,
	          bytesAvailable = this.bytesAvailable,
	          position = data.byteLength - bytesAvailable,
	          workingBytes = new Uint8Array(4),
	          availableBytes = Math.min(4, bytesAvailable);
	      if (availableBytes === 0) {
	        throw new Error('no bytes available');
	      }
	      workingBytes.set(data.subarray(position, position + availableBytes));
	      this.word = new DataView(workingBytes.buffer).getUint32(0);
	      // track the amount of this.data that has been processed
	      this.bitsAvailable = availableBytes * 8;
	      this.bytesAvailable -= availableBytes;
	    }
	
	    // (count:int):void
	
	  }, {
	    key: 'skipBits',
	    value: function skipBits(count) {
	      var skipBytes; // :int
	      if (this.bitsAvailable > count) {
	        this.word <<= count;
	        this.bitsAvailable -= count;
	      } else {
	        count -= this.bitsAvailable;
	        skipBytes = count >> 3;
	        count -= skipBytes >> 3;
	        this.bytesAvailable -= skipBytes;
	        this.loadWord();
	        this.word <<= count;
	        this.bitsAvailable -= count;
	      }
	    }
	
	    // (size:int):uint
	
	  }, {
	    key: 'readBits',
	    value: function readBits(size) {
	      var bits = Math.min(this.bitsAvailable, size),
	          // :uint
	      valu = this.word >>> 32 - bits; // :uint
	      if (size > 32) {
	        _logger.logger.error('Cannot read more than 32 bits at a time');
	      }
	      this.bitsAvailable -= bits;
	      if (this.bitsAvailable > 0) {
	        this.word <<= bits;
	      } else if (this.bytesAvailable > 0) {
	        this.loadWord();
	      }
	      bits = size - bits;
	      if (bits > 0 && this.bitsAvailable) {
	        return valu << bits | this.readBits(bits);
	      } else {
	        return valu;
	      }
	    }
	
	    // ():uint
	
	  }, {
	    key: 'skipLZ',
	    value: function skipLZ() {
	      var leadingZeroCount; // :uint
	      for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {
	        if (0 !== (this.word & 0x80000000 >>> leadingZeroCount)) {
	          // the first bit of working word is 1
	          this.word <<= leadingZeroCount;
	          this.bitsAvailable -= leadingZeroCount;
	          return leadingZeroCount;
	        }
	      }
	      // we exhausted word and still have not found a 1
	      this.loadWord();
	      return leadingZeroCount + this.skipLZ();
	    }
	
	    // ():void
	
	  }, {
	    key: 'skipUEG',
	    value: function skipUEG() {
	      this.skipBits(1 + this.skipLZ());
	    }
	
	    // ():void
	
	  }, {
	    key: 'skipEG',
	    value: function skipEG() {
	      this.skipBits(1 + this.skipLZ());
	    }
	
	    // ():uint
	
	  }, {
	    key: 'readUEG',
	    value: function readUEG() {
	      var clz = this.skipLZ(); // :uint
	      return this.readBits(clz + 1) - 1;
	    }
	
	    // ():int
	
	  }, {
	    key: 'readEG',
	    value: function readEG() {
	      var valu = this.readUEG(); // :int
	      if (0x01 & valu) {
	        // the number is odd if the low order bit is set
	        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2
	      } else {
	        return -1 * (valu >>> 1); // divide by two then make it negative
	      }
	    }
	
	    // Some convenience functions
	    // :Boolean
	
	  }, {
	    key: 'readBoolean',
	    value: function readBoolean() {
	      return 1 === this.readBits(1);
	    }
	
	    // ():int
	
	  }, {
	    key: 'readUByte',
	    value: function readUByte() {
	      return this.readBits(8);
	    }
	
	    // ():int
	
	  }, {
	    key: 'readUShort',
	    value: function readUShort() {
	      return this.readBits(16);
	    }
	    // ():int
	
	  }, {
	    key: 'readUInt',
	    value: function readUInt() {
	      return this.readBits(32);
	    }
	
	    /**
	     * Advance the ExpGolomb decoder past a scaling list. The scaling
	     * list is optionally transmitted as part of a sequence parameter
	     * set and is not relevant to transmuxing.
	     * @param count {number} the number of entries in this scaling list
	     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1
	     */
	
	  }, {
	    key: 'skipScalingList',
	    value: function skipScalingList(count) {
	      var lastScale = 8,
	          nextScale = 8,
	          j,
	          deltaScale;
	      for (j = 0; j < count; j++) {
	        if (nextScale !== 0) {
	          deltaScale = this.readEG();
	          nextScale = (lastScale + deltaScale + 256) % 256;
	        }
	        lastScale = nextScale === 0 ? lastScale : nextScale;
	      }
	    }
	
	    /**
	     * Read a sequence parameter set and return some interesting video
	     * properties. A sequence parameter set is the H264 metadata that
	     * describes the properties of upcoming video frames.
	     * @param data {Uint8Array} the bytes of a sequence parameter set
	     * @return {object} an object with configuration parsed from the
	     * sequence parameter set, including the dimensions of the
	     * associated video frames.
	     */
	
	  }, {
	    key: 'readSPS',
	    value: function readSPS() {
	      var frameCropLeftOffset = 0,
	          frameCropRightOffset = 0,
	          frameCropTopOffset = 0,
	          frameCropBottomOffset = 0,
	          profileIdc,
	          profileCompat,
	          levelIdc,
	          numRefFramesInPicOrderCntCycle,
	          picWidthInMbsMinus1,
	          picHeightInMapUnitsMinus1,
	          frameMbsOnlyFlag,
	          scalingListCount,
	          i,
	          readUByte = this.readUByte.bind(this),
	          readBits = this.readBits.bind(this),
	          readUEG = this.readUEG.bind(this),
	          readBoolean = this.readBoolean.bind(this),
	          skipBits = this.skipBits.bind(this),
	          skipEG = this.skipEG.bind(this),
	          skipUEG = this.skipUEG.bind(this),
	          skipScalingList = this.skipScalingList.bind(this);
	
	      readUByte();
	      profileIdc = readUByte(); // profile_idc
	      profileCompat = readBits(5); // constraint_set[0-4]_flag, u(5)
	      skipBits(3); // reserved_zero_3bits u(3),
	      levelIdc = readUByte(); //level_idc u(8)
	      skipUEG(); // seq_parameter_set_id
	      // some profiles have more optional data we don't need
	      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128) {
	        var chromaFormatIdc = readUEG();
	        if (chromaFormatIdc === 3) {
	          skipBits(1); // separate_colour_plane_flag
	        }
	        skipUEG(); // bit_depth_luma_minus8
	        skipUEG(); // bit_depth_chroma_minus8
	        skipBits(1); // qpprime_y_zero_transform_bypass_flag
	        if (readBoolean()) {
	          // seq_scaling_matrix_present_flag
	          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;
	          for (i = 0; i < scalingListCount; i++) {
	            if (readBoolean()) {
	              // seq_scaling_list_present_flag[ i ]
	              if (i < 6) {
	                skipScalingList(16);
	              } else {
	                skipScalingList(64);
	              }
	            }
	          }
	        }
	      }
	      skipUEG(); // log2_max_frame_num_minus4
	      var picOrderCntType = readUEG();
	      if (picOrderCntType === 0) {
	        readUEG(); //log2_max_pic_order_cnt_lsb_minus4
	      } else if (picOrderCntType === 1) {
	        skipBits(1); // delta_pic_order_always_zero_flag
	        skipEG(); // offset_for_non_ref_pic
	        skipEG(); // offset_for_top_to_bottom_field
	        numRefFramesInPicOrderCntCycle = readUEG();
	        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {
	          skipEG(); // offset_for_ref_frame[ i ]
	        }
	      }
	      skipUEG(); // max_num_ref_frames
	      skipBits(1); // gaps_in_frame_num_value_allowed_flag
	      picWidthInMbsMinus1 = readUEG();
	      picHeightInMapUnitsMinus1 = readUEG();
	      frameMbsOnlyFlag = readBits(1);
	      if (frameMbsOnlyFlag === 0) {
	        skipBits(1); // mb_adaptive_frame_field_flag
	      }
	      skipBits(1); // direct_8x8_inference_flag
	      if (readBoolean()) {
	        // frame_cropping_flag
	        frameCropLeftOffset = readUEG();
	        frameCropRightOffset = readUEG();
	        frameCropTopOffset = readUEG();
	        frameCropBottomOffset = readUEG();
	      }
	      var pixelRatio = [1, 1];
	      if (readBoolean()) {
	        // vui_parameters_present_flag
	        if (readBoolean()) {
	          // aspect_ratio_info_present_flag
	          var aspectRatioIdc = readUByte();
	          switch (aspectRatioIdc) {
	            case 1:
	              pixelRatio = [1, 1];break;
	            case 2:
	              pixelRatio = [12, 11];break;
	            case 3:
	              pixelRatio = [10, 11];break;
	            case 4:
	              pixelRatio = [16, 11];break;
	            case 5:
	              pixelRatio = [40, 33];break;
	            case 6:
	              pixelRatio = [24, 11];break;
	            case 7:
	              pixelRatio = [20, 11];break;
	            case 8:
	              pixelRatio = [32, 11];break;
	            case 9:
	              pixelRatio = [80, 33];break;
	            case 10:
	              pixelRatio = [18, 11];break;
	            case 11:
	              pixelRatio = [15, 11];break;
	            case 12:
	              pixelRatio = [64, 33];break;
	            case 13:
	              pixelRatio = [160, 99];break;
	            case 14:
	              pixelRatio = [4, 3];break;
	            case 15:
	              pixelRatio = [3, 2];break;
	            case 16:
	              pixelRatio = [2, 1];break;
	            case 255:
	              {
	                pixelRatio = [readUByte() << 8 | readUByte(), readUByte() << 8 | readUByte()];
	                break;
	              }
	          }
	        }
	      }
	      return {
	        width: Math.ceil((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2),
	        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - (frameMbsOnlyFlag ? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset),
	        pixelRatio: pixelRatio
	      };
	    }
	  }, {
	    key: 'readSliceType',
	    value: function readSliceType() {
	      // skip NALu type
	      this.readUByte();
	      // discard first_mb_in_slice
	      this.readUEG();
	      // return slice_type
	      return this.readUEG();
	    }
	  }]);
	
	  return ExpGolomb;
	}();
	
	exports.default = ExpGolomb;
	
	},{"50":50}],26:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	parser
	
	
	
	var _logger = _dereq_(50);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	//import Hex from '../utils/hex';
	
	var ID3 = function () {
	  function ID3(data) {
	    _classCallCheck(this, ID3);
	
	    this._hasTimeStamp = false;
	    var offset = 0,
	        byte1,
	        byte2,
	        byte3,
	        byte4,
	        tagSize,
	        endPos,
	        header,
	        len;
	    do {
	      header = this.readUTF(data, offset, 3);
	      offset += 3;
	      // first check for ID3 header
	      if (header === 'ID3') {
	        // skip 24 bits
	        offset += 3;
	        // retrieve tag(s) length
	        byte1 = data[offset++] & 0x7f;
	        byte2 = data[offset++] & 0x7f;
	        byte3 = data[offset++] & 0x7f;
	        byte4 = data[offset++] & 0x7f;
	        tagSize = (byte1 << 21) + (byte2 << 14) + (byte3 << 7) + byte4;
	        endPos = offset + tagSize;
	        //logger.log(`ID3 tag found, size/end: ${tagSize}/${endPos}`);
	
	        // read ID3 tags
	        this._parseID3Frames(data, offset, endPos);
	        offset = endPos;
	      } else if (header === '3DI') {
	        // http://id3.org/id3v2.4.0-structure chapter 3.4.   ID3v2 footer
	        offset += 7;
	        _logger.logger.log('3DI footer found, end: ' + offset);
	      } else {
	        offset -= 3;
	        len = offset;
	        if (len) {
	          //logger.log(`ID3 len: ${len}`);
	          if (!this.hasTimeStamp) {
	            _logger.logger.warn('ID3 tag found, but no timestamp');
	          }
	          this._length = len;
	          this._payload = data.subarray(0, len);
	        }
	        return;
	      }
	    } while (true);
	  }
	
	  _createClass(ID3, [{
	    key: 'readUTF',
	    value: function readUTF(data, start, len) {
	
	      var result = '',
	          offset = start,
	          end = start + len;
	      do {
	        result += String.fromCharCode(data[offset++]);
	      } while (offset < end);
	      return result;
	    }
	  }, {
	    key: '_parseID3Frames',
	    value: function _parseID3Frames(data, offset, endPos) {
	      var tagId, tagLen, tagStart, tagFlags, timestamp;
	      while (offset + 8 <= endPos) {
	        tagId = this.readUTF(data, offset, 4);
	        offset += 4;
	
	        tagLen = data[offset++] << 24 + data[offset++] << 16 + data[offset++] << 8 + data[offset++];
	
	        tagFlags = data[offset++] << 8 + data[offset++];
	
	        tagStart = offset;
	        //logger.log("ID3 tag id:" + tagId);
	        switch (tagId) {
	          case 'PRIV':
	            //logger.log('parse frame:' + Hex.hexDump(data.subarray(offset,endPos)));
	            // owner should be "com.apple.streaming.transportStreamTimestamp"
	            if (this.readUTF(data, offset, 44) === 'com.apple.streaming.transportStreamTimestamp') {
	              offset += 44;
	              // smelling even better ! we found the right descriptor
	              // skip null character (string end) + 3 first bytes
	              offset += 4;
	
	              // timestamp is 33 bit expressed as a big-endian eight-octet number, with the upper 31 bits set to zero.
	              var pts33Bit = data[offset++] & 0x1;
	              this._hasTimeStamp = true;
	
	              timestamp = ((data[offset++] << 23) + (data[offset++] << 15) + (data[offset++] << 7) + data[offset++]) / 45;
	
	              if (pts33Bit) {
	                timestamp += 47721858.84; // 2^32 / 90
	              }
	              timestamp = Math.round(timestamp);
	              _logger.logger.trace('ID3 timestamp found: ' + timestamp);
	              this._timeStamp = timestamp;
	            }
	            break;
	          default:
	            break;
	        }
	      }
	    }
	  }, {
	    key: 'hasTimeStamp',
	    get: function get() {
	      return this._hasTimeStamp;
	    }
	  }, {
	    key: 'timeStamp',
	    get: function get() {
	      return this._timeStamp;
	    }
	  }, {
	    key: 'length',
	    get: function get() {
	      return this._length;
	    }
	  }, {
	    key: 'payload',
	    get: function get() {
	      return this._payload;
	    }
	  }]);
	
	  return ID3;
	}();
	
	exports.default = ID3;
	
	},{"50":50}],27:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	demuxer
	
	//import {logger} from '../utils/logger';
	
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var MP4Demuxer = function () {
	  function MP4Demuxer(observer, remuxer) {
	    _classCallCheck(this, MP4Demuxer);
	
	    this.observer = observer;
	    this.remuxer = remuxer;
	  }
	
	  _createClass(MP4Demuxer, [{
	    key: 'resetTimeStamp',
	    value: function resetTimeStamp() {}
	  }, {
	    key: 'resetInitSegment',
	    value: function resetInitSegment(initSegment, audioCodec, videoCodec, duration) {
	      //jshint unused:false
	      var initData = this.initData = MP4Demuxer.parseInitSegment(initSegment);
	      var tracks = {};
	      if (initData.audio) {
	        tracks.audio = { container: 'audio/mp4', codec: audioCodec, initSegment: initSegment };
	      }
	      if (initData.video) {
	        tracks.video = { container: 'video/mp4', codec: videoCodec, initSegment: initSegment };
	      }
	      this.observer.trigger(_events2.default.FRAG_PARSING_INIT_SEGMENT, { tracks: tracks });
	    }
	  }, {
	    key: 'append',
	
	
	    // feed incoming data to the front of the parsing pipeline
	    value: function append(data, timeOffset, contiguous, accurateTimeOffset) {
	      var initData = this.initData;
	      var startDTS = MP4Demuxer.startDTS(initData, data);
	      this.remuxer.remux(initData.audio, initData.video, null, null, startDTS, contiguous, accurateTimeOffset, data);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {}
	  }], [{
	    key: 'probe',
	    value: function probe(data) {
	      if (data.length >= 8) {
	        var dataType = MP4Demuxer.bin2str(data.subarray(4, 8));
	        return ['moof', 'ftyp', 'styp'].indexOf(dataType) >= 0;
	      }
	      return false;
	    }
	  }, {
	    key: 'bin2str',
	    value: function bin2str(buffer) {
	      return String.fromCharCode.apply(null, buffer);
	    }
	
	    // Find the data for a box specified by its path
	
	  }, {
	    key: 'findBox',
	    value: function findBox(data, path) {
	      var results = [],
	          i,
	          size,
	          type,
	          end,
	          subresults;
	
	      if (!path.length) {
	        // short-circuit the search for empty paths
	        return null;
	      }
	
	      for (i = 0; i < data.byteLength;) {
	        size = data[i] << 24;
	        size |= data[i + 1] << 16;
	        size |= data[i + 2] << 8;
	        size |= data[i + 3];
	
	        type = MP4Demuxer.bin2str(data.subarray(i + 4, i + 8));
	
	        end = size > 1 ? i + size : data.byteLength;
	
	        if (type === path[0]) {
	          if (path.length === 1) {
	            // this is the end of the path and we've found the box we were
	            // looking for
	            results.push(data.subarray(i + 8, end));
	          } else {
	            // recursively search for the next box along the path
	            subresults = MP4Demuxer.findBox(data.subarray(i + 8, end), path.slice(1));
	            if (subresults.length) {
	              results = results.concat(subresults);
	            }
	          }
	        }
	        i = end;
	      }
	
	      // we've finished searching all of data
	      return results;
	    }
	
	    /**
	     * Parses an MP4 initialization segment and extracts stream type and
	     * timescale values for any declared tracks. Timescale values indicate the
	     * number of clock ticks per second to assume for time-based values
	     * elsewhere in the MP4.
	     *
	     * To determine the start time of an MP4, you need two pieces of
	     * information: the timescale unit and the earliest base media decode
	     * time. Multiple timescales can be specified within an MP4 but the
	     * base media decode time is always expressed in the timescale from
	     * the media header box for the track:
	     * ```
	     * moov > trak > mdia > mdhd.timescale
	     * moov > trak > mdia > hdlr
	     * ```
	     * @param init {Uint8Array} the bytes of the init segment
	     * @return {object} a hash of track type to timescale values or null if
	     * the init segment is malformed.
	     */
	
	  }, {
	    key: 'parseInitSegment',
	    value: function parseInitSegment(initSegment) {
	      var result = [];
	      var traks = MP4Demuxer.findBox(initSegment, ['moov', 'trak']);
	
	      traks.forEach(function (trak) {
	        var tkhd = MP4Demuxer.findBox(trak, ['tkhd'])[0];
	        if (tkhd) {
	          var version = tkhd[0];
	          var index = version === 0 ? 12 : 20;
	          var trackId = tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3];
	
	          trackId = trackId < 0 ? 4294967296 + trackId : trackId;
	
	          var mdhd = MP4Demuxer.findBox(trak, ['mdia', 'mdhd'])[0];
	          if (mdhd) {
	            version = mdhd[0];
	            index = version === 0 ? 12 : 20;
	            var timescale = mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3];
	
	            var hdlr = MP4Demuxer.findBox(trak, ['mdia', 'hdlr'])[0];
	            if (hdlr) {
	              var hdlrType = MP4Demuxer.bin2str(hdlr.subarray(8, 12));
	              var type = { 'soun': 'audio', 'vide': 'video' }[hdlrType];
	              if (type) {
	                result[trackId] = { timescale: timescale, type: type };
	                result[type] = { timescale: timescale, id: trackId };
	              }
	            }
	          }
	        }
	      });
	      return result;
	    }
	
	    /**
	     * Determine the base media decode start time, in seconds, for an MP4
	     * fragment. If multiple fragments are specified, the earliest time is
	     * returned.
	     *
	     * The base media decode time can be parsed from track fragment
	     * metadata:
	     * ```
	     * moof > traf > tfdt.baseMediaDecodeTime
	     * ```
	     * It requires the timescale value from the mdhd to interpret.
	     *
	     * @param timescale {object} a hash of track ids to timescale values.
	     * @return {number} the earliest base media decode start time for the
	     * fragment, in seconds
	     */
	
	  }, {
	    key: 'startDTS',
	    value: function startDTS(initData, fragment) {
	      var trafs, baseTimes, result;
	
	      // we need info from two childrend of each track fragment box
	      trafs = MP4Demuxer.findBox(fragment, ['moof', 'traf']);
	
	      // determine the start times for each track
	      baseTimes = [].concat.apply([], trafs.map(function (traf) {
	        return MP4Demuxer.findBox(traf, ['tfhd']).map(function (tfhd) {
	          var id, scale, baseTime;
	
	          // get the track id from the tfhd
	          id = tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7];
	          // assume a 90kHz clock if no timescale was specified
	          scale = initData[id].timescale || 90e3;
	
	          // get the base media decode time from the tfdt
	          baseTime = MP4Demuxer.findBox(traf, ['tfdt']).map(function (tfdt) {
	            var version, result;
	
	            version = tfdt[0];
	            result = tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7];
	            if (version === 1) {
	              result *= Math.pow(2, 32);
	              result += tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11];
	            }
	            return result;
	          })[0];
	          baseTime = baseTime || Infinity;
	
	          // convert base time to seconds
	          return baseTime / scale;
	        });
	      }));
	
	      // return the minimum
	      result = Math.min.apply(null, baseTimes);
	      return isFinite(result) ? result : 0;
	    }
	  }]);
	
	  return MP4Demuxer;
	}();
	
	exports.default = MP4Demuxer;
	
	},{"32":32}],28:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	decrypter
	
	
	var _decrypter = _dereq_(18);
	
	var _decrypter2 = _interopRequireDefault(_decrypter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var SampleAesDecrypter = function () {
	  function SampleAesDecrypter(observer, config, decryptdata, discardEPB) {
	    _classCallCheck(this, SampleAesDecrypter);
	
	    this.decryptdata = decryptdata;
	    this.discardEPB = discardEPB;
	    this.decrypter = new _decrypter2.default(observer, config);
	  }
	
	  _createClass(SampleAesDecrypter, [{
	    key: 'decryptBuffer',
	    value: function decryptBuffer(encryptedData, callback) {
	      this.decrypter.decrypt(encryptedData, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, callback);
	    }
	
	    // AAC - encrypt all full 16 bytes blocks starting from offset 16
	
	  }, {
	    key: 'decryptAacSample',
	    value: function decryptAacSample(samples, sampleIndex, callback, sync) {
	      var curUnit = samples[sampleIndex].unit;
	      var encryptedData = curUnit.subarray(16, curUnit.length - curUnit.length % 16);
	      var encryptedBuffer = encryptedData.buffer.slice(encryptedData.byteOffset, encryptedData.byteOffset + encryptedData.length);
	
	      var localthis = this;
	      this.decryptBuffer(encryptedBuffer, function (decryptedData) {
	        decryptedData = new Uint8Array(decryptedData);
	        curUnit.set(decryptedData, 16);
	
	        if (!sync) {
	          localthis.decryptAacSamples(samples, sampleIndex + 1, callback);
	        }
	      });
	    }
	  }, {
	    key: 'decryptAacSamples',
	    value: function decryptAacSamples(samples, sampleIndex, callback) {
	      for (;; sampleIndex++) {
	        if (sampleIndex >= samples.length) {
	          callback();
	          return;
	        }
	
	        if (samples[sampleIndex].unit.length < 32) {
	          continue;
	        }
	
	        var sync = this.decrypter.isSync();
	
	        this.decryptAacSample(samples, sampleIndex, callback, sync);
	
	        if (!sync) {
	          return;
	        }
	      }
	    }
	
	    // AVC - encrypt one 16 bytes block out of ten, starting from offset 32
	
	  }, {
	    key: 'getAvcEncryptedData',
	    value: function getAvcEncryptedData(decodedData) {
	      var encryptedDataLen = Math.floor((decodedData.length - 48) / 160) * 16 + 16;
	      var encryptedData = new Int8Array(encryptedDataLen);
	      var outputPos = 0;
	      for (var inputPos = 32; inputPos <= decodedData.length - 16; inputPos += 160, outputPos += 16) {
	        encryptedData.set(decodedData.subarray(inputPos, inputPos + 16), outputPos);
	      }
	      return encryptedData;
	    }
	  }, {
	    key: 'getAvcDecryptedUnit',
	    value: function getAvcDecryptedUnit(decodedData, decryptedData) {
	      decryptedData = new Uint8Array(decryptedData);
	      var inputPos = 0;
	      for (var outputPos = 32; outputPos <= decodedData.length - 16; outputPos += 160, inputPos += 16) {
	        decodedData.set(decryptedData.subarray(inputPos, inputPos + 16), outputPos);
	      }
	      return decodedData;
	    }
	  }, {
	    key: 'decryptAvcSample',
	    value: function decryptAvcSample(samples, sampleIndex, unitIndex, callback, curUnit, sync) {
	      var decodedData = this.discardEPB(curUnit.data);
	      var encryptedData = this.getAvcEncryptedData(decodedData);
	      var localthis = this;
	
	      this.decryptBuffer(encryptedData.buffer, function (decryptedData) {
	        curUnit.data = localthis.getAvcDecryptedUnit(decodedData, decryptedData);
	
	        if (!sync) {
	          localthis.decryptAvcSamples(samples, sampleIndex, unitIndex + 1, callback);
	        }
	      });
	    }
	  }, {
	    key: 'decryptAvcSamples',
	    value: function decryptAvcSamples(samples, sampleIndex, unitIndex, callback) {
	      for (;; sampleIndex++, unitIndex = 0) {
	        if (sampleIndex >= samples.length) {
	          callback();
	          return;
	        }
	
	        var curUnits = samples[sampleIndex].units;
	        for (;; unitIndex++) {
	          if (unitIndex >= curUnits.length) {
	            break;
	          }
	
	          var curUnit = curUnits[unitIndex];
	          if (curUnit.length <= 48 || curUnit.type !== 1 && curUnit.type !== 5) {
	            continue;
	          }
	
	          var sync = this.decrypter.isSync();
	
	          this.decryptAvcSample(samples, sampleIndex, unitIndex, callback, curUnit, sync);
	
	          if (!sync) {
	            return;
	          }
	        }
	      }
	    }
	  }]);
	
	  return SampleAesDecrypter;
	}();
	
	exports.default = SampleAesDecrypter;
	
	},{"18":18}],29:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	highly optimized TS demuxer:
	parse PAT, PMT
	extract PES packet from audio and video PIDs
	extract AVC/H264 NAL units and AAC/ADTS samples from PES packet
	trigger the remuxer upon parsing completion
	it also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.
	it also controls the remuxing process :
	upon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.
	
	
	// import Hex from '../utils/hex';
	
	
	var _adts = _dereq_(21);
	
	var _adts2 = _interopRequireDefault(_adts);
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _expGolomb = _dereq_(25);
	
	var _expGolomb2 = _interopRequireDefault(_expGolomb);
	
	var _sampleAes = _dereq_(28);
	
	var _sampleAes2 = _interopRequireDefault(_sampleAes);
	
	var _logger = _dereq_(50);
	
	var _errors = _dereq_(30);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var TSDemuxer = function () {
	  function TSDemuxer(observer, remuxer, config, typeSupported) {
	    _classCallCheck(this, TSDemuxer);
	
	    this.observer = observer;
	    this.config = config;
	    this.typeSupported = typeSupported;
	    this.remuxer = remuxer;
	    this.sampleAes = null;
	  }
	
	  _createClass(TSDemuxer, [{
	    key: 'setDecryptData',
	    value: function setDecryptData(decryptdata) {
	      if (decryptdata != null && decryptdata.key != null && decryptdata.method === 'SAMPLE-AES') {
	        this.sampleAes = new _sampleAes2.default(this.observer, this.config, decryptdata, this.discardEPB);
	      } else {
	        this.sampleAes = null;
	      }
	    }
	  }, {
	    key: 'resetInitSegment',
	    value: function resetInitSegment(initSegment, audioCodec, videoCodec, duration) {
	      this.pmtParsed = false;
	      this._pmtId = -1;
	      this._avcTrack = { container: 'video/mp2t', type: 'video', id: -1, inputTimeScale: 90000, sequenceNumber: 0, samples: [], len: 0, dropped: 0 };
	      this._audioTrack = { container: 'video/mp2t', type: 'audio', id: -1, inputTimeScale: 90000, sequenceNumber: 0, samples: [], len: 0, isAAC: true };
	      this._id3Track = { type: 'id3', id: -1, inputTimeScale: 90000, sequenceNumber: 0, samples: [], len: 0 };
	      this._txtTrack = { type: 'text', id: -1, inputTimeScale: 90000, sequenceNumber: 0, samples: [], len: 0 };
	      // flush any partial content
	      this.aacOverFlow = null;
	      this.aacLastPTS = null;
	      this.avcSample = null;
	      this.audioCodec = audioCodec;
	      this.videoCodec = videoCodec;
	      this._duration = duration;
	    }
	  }, {
	    key: 'resetTimeStamp',
	    value: function resetTimeStamp() {}
	
	    // feed incoming data to the front of the parsing pipeline
	
	  }, {
	    key: 'append',
	    value: function append(data, timeOffset, contiguous, accurateTimeOffset) {
	      var start,
	          len = data.length,
	          stt,
	          pid,
	          atf,
	          offset,
	          pes,
	          unknownPIDs = false;
	      this.contiguous = contiguous;
	      var pmtParsed = this.pmtParsed,
	          avcTrack = this._avcTrack,
	          audioTrack = this._audioTrack,
	          id3Track = this._id3Track,
	          avcId = avcTrack.id,
	          audioId = audioTrack.id,
	          id3Id = id3Track.id,
	          pmtId = this._pmtId,
	          avcData = avcTrack.pesData,
	          audioData = audioTrack.pesData,
	          id3Data = id3Track.pesData,
	          parsePAT = this._parsePAT,
	          parsePMT = this._parsePMT,
	          parsePES = this._parsePES,
	          parseAVCPES = this._parseAVCPES.bind(this),
	          parseAACPES = this._parseAACPES.bind(this),
	          parseMPEGPES = this._parseMPEGPES.bind(this),
	          parseID3PES = this._parseID3PES.bind(this);
	
	      // don't parse last TS packet if incomplete
	      len -= len % 188;
	      // loop through TS packets
	      for (start = 0; start < len; start += 188) {
	        if (data[start] === 0x47) {
	          stt = !!(data[start + 1] & 0x40);
	          // pid is a 13-bit field starting at the last bit of TS[1]
	          pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2];
	          atf = (data[start + 3] & 0x30) >> 4;
	          // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.
	          if (atf > 1) {
	            offset = start + 5 + data[start + 4];
	            // continue if there is only adaptation field
	            if (offset === start + 188) {
	              continue;
	            }
	          } else {
	            offset = start + 4;
	          }
	          switch (pid) {
	            case avcId:
	              if (stt) {
	                if (avcData && (pes = parsePES(avcData))) {
	                  parseAVCPES(pes, false);
	                }
	                avcData = { data: [], size: 0 };
	              }
	              if (avcData) {
	                avcData.data.push(data.subarray(offset, start + 188));
	                avcData.size += start + 188 - offset;
	              }
	              break;
	            case audioId:
	              if (stt) {
	                if (audioData && (pes = parsePES(audioData))) {
	                  if (audioTrack.isAAC) {
	                    parseAACPES(pes);
	                  } else {
	                    parseMPEGPES(pes);
	                  }
	                }
	                audioData = { data: [], size: 0 };
	              }
	              if (audioData) {
	                audioData.data.push(data.subarray(offset, start + 188));
	                audioData.size += start + 188 - offset;
	              }
	              break;
	            case id3Id:
	              if (stt) {
	                if (id3Data && (pes = parsePES(id3Data))) {
	                  parseID3PES(pes);
	                }
	                id3Data = { data: [], size: 0 };
	              }
	              if (id3Data) {
	                id3Data.data.push(data.subarray(offset, start + 188));
	                id3Data.size += start + 188 - offset;
	              }
	              break;
	            case 0:
	              if (stt) {
	                offset += data[offset] + 1;
	              }
	              pmtId = this._pmtId = parsePAT(data, offset);
	              break;
	            case pmtId:
	              if (stt) {
	                offset += data[offset] + 1;
	              }
	              var parsedPIDs = parsePMT(data, offset, this.typeSupported.mpeg === true || this.typeSupported.mp3 === true, this.sampleAes != null);
	
	              // only update track id if track PID found while parsing PMT
	              // this is to avoid resetting the PID to -1 in case
	              // track PID transiently disappears from the stream
	              // this could happen in case of transient missing audio samples for example
	              avcId = parsedPIDs.avc;
	              if (avcId > 0) {
	                avcTrack.id = avcId;
	              }
	              audioId = parsedPIDs.audio;
	              if (audioId > 0) {
	                audioTrack.id = audioId;
	                audioTrack.isAAC = parsedPIDs.isAAC;
	              }
	              id3Id = parsedPIDs.id3;
	              if (id3Id > 0) {
	                id3Track.id = id3Id;
	              }
	              if (unknownPIDs && !pmtParsed) {
	                _logger.logger.log('reparse from beginning');
	                unknownPIDs = false;
	                // we set it to -188, the += 188 in the for loop will reset start to 0
	                start = -188;
	              }
	              pmtParsed = this.pmtParsed = true;
	              break;
	            case 17:
	            case 0x1fff:
	              break;
	            default:
	              unknownPIDs = true;
	              break;
	          }
	        } else {
	          this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'TS packet did not start with 0x47' });
	        }
	      }
	      // try to parse last PES packets
	      if (avcData && (pes = parsePES(avcData))) {
	        parseAVCPES(pes, true);
	        avcTrack.pesData = null;
	      } else {
	        // either avcData null or PES truncated, keep it for next frag parsing
	        avcTrack.pesData = avcData;
	      }
	
	      if (audioData && (pes = parsePES(audioData))) {
	        if (audioTrack.isAAC) {
	          parseAACPES(pes);
	        } else {
	          parseMPEGPES(pes);
	        }
	        audioTrack.pesData = null;
	      } else {
	        if (audioData && audioData.size) {
	          _logger.logger.log('last AAC PES packet truncated,might overlap between fragments');
	        }
	        // either audioData null or PES truncated, keep it for next frag parsing
	        audioTrack.pesData = audioData;
	      }
	
	      if (id3Data && (pes = parsePES(id3Data))) {
	        parseID3PES(pes);
	        id3Track.pesData = null;
	      } else {
	        // either id3Data null or PES truncated, keep it for next frag parsing
	        id3Track.pesData = id3Data;
	      }
	
	      if (this.sampleAes == null) {
	        this.remuxer.remux(audioTrack, avcTrack, id3Track, this._txtTrack, timeOffset, contiguous, accurateTimeOffset);
	      } else {
	        this.decryptAndRemux(audioTrack, avcTrack, id3Track, this._txtTrack, timeOffset, contiguous, accurateTimeOffset);
	      }
	    }
	  }, {
	    key: 'decryptAndRemux',
	    value: function decryptAndRemux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset) {
	      if (audioTrack.samples && audioTrack.isAAC) {
	        var localthis = this;
	        this.sampleAes.decryptAacSamples(audioTrack.samples, 0, function () {
	          localthis.decryptAndRemuxAvc(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);
	        });
	      } else {
	        this.decryptAndRemuxAvc(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);
	      }
	    }
	  }, {
	    key: 'decryptAndRemuxAvc',
	    value: function decryptAndRemuxAvc(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset) {
	      if (videoTrack.samples) {
	        var localthis = this;
	        this.sampleAes.decryptAvcSamples(videoTrack.samples, 0, 0, function () {
	          localthis.remuxer.remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);
	        });
	      } else {
	        this.remuxer.remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);
	      }
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      this._initPTS = this._initDTS = undefined;
	      this._duration = 0;
	    }
	  }, {
	    key: '_parsePAT',
	    value: function _parsePAT(data, offset) {
	      // skip the PSI header and parse the first PMT entry
	      return (data[offset + 10] & 0x1F) << 8 | data[offset + 11];
	      //logger.log('PMT PID:'  + this._pmtId);
	    }
	  }, {
	    key: '_parsePMT',
	    value: function _parsePMT(data, offset, mpegSupported, isSampleAes) {
	      var sectionLength,
	          tableEnd,
	          programInfoLength,
	          pid,
	          result = { audio: -1, avc: -1, id3: -1, isAAC: true };
	      sectionLength = (data[offset + 1] & 0x0f) << 8 | data[offset + 2];
	      tableEnd = offset + 3 + sectionLength - 4;
	      // to determine where the table is, we have to figure out how
	      // long the program info descriptors are
	      programInfoLength = (data[offset + 10] & 0x0f) << 8 | data[offset + 11];
	      // advance the offset to the first entry in the mapping table
	      offset += 12 + programInfoLength;
	      while (offset < tableEnd) {
	        pid = (data[offset + 1] & 0x1F) << 8 | data[offset + 2];
	        switch (data[offset]) {
	          case 0xcf:
	            // SAMPLE-AES AAC
	            if (!isSampleAes) {
	              _logger.logger.log('unkown stream type:' + data[offset]);
	              break;
	            }
	          /* falls through */
	
	          // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)
	          case 0x0f:
	            //logger.log('AAC PID:'  + pid);
	            if (result.audio === -1) {
	              result.audio = pid;
	            }
	            break;
	
	          // Packetized metadata (ID3)
	          case 0x15:
	            //logger.log('ID3 PID:'  + pid);
	            if (result.id3 === -1) {
	              result.id3 = pid;
	            }
	            break;
	
	          case 0xdb:
	            // SAMPLE-AES AVC
	            if (!isSampleAes) {
	              _logger.logger.log('unkown stream type:' + data[offset]);
	              break;
	            }
	          /* falls through */
	
	          // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)
	          case 0x1b:
	            //logger.log('AVC PID:'  + pid);
	            if (result.avc === -1) {
	              result.avc = pid;
	            }
	            break;
	
	          // ISO/IEC 11172-3 (MPEG-1 audio)
	          // or ISO/IEC 13818-3 (MPEG-2 halved sample rate audio)
	          case 0x03:
	          case 0x04:
	            //logger.log('MPEG PID:'  + pid);
	            if (!mpegSupported) {
	              _logger.logger.log('MPEG audio found, not supported in this browser for now');
	            } else if (result.audio === -1) {
	              result.audio = pid;
	              result.isAAC = false;
	            }
	            break;
	
	          case 0x24:
	            _logger.logger.warn('HEVC stream type found, not supported for now');
	            break;
	
	          default:
	            _logger.logger.log('unkown stream type:' + data[offset]);
	            break;
	        }
	        // move to the next table entry
	        // skip past the elementary stream descriptors, if present
	        offset += ((data[offset + 3] & 0x0F) << 8 | data[offset + 4]) + 5;
	      }
	      return result;
	    }
	  }, {
	    key: '_parsePES',
	    value: function _parsePES(stream) {
	      var i = 0,
	          frag,
	          pesFlags,
	          pesPrefix,
	          pesLen,
	          pesHdrLen,
	          pesData,
	          pesPts,
	          pesDts,
	          payloadStartOffset,
	          data = stream.data;
	      // safety check
	      if (!stream || stream.size === 0) {
	        return null;
	      }
	
	      // we might need up to 19 bytes to read PES header
	      // if first chunk of data is less than 19 bytes, let's merge it with following ones until we get 19 bytes
	      // usually only one merge is needed (and this is rare ...)
	      while (data[0].length < 19 && data.length > 1) {
	        var newData = new Uint8Array(data[0].length + data[1].length);
	        newData.set(data[0]);
	        newData.set(data[1], data[0].length);
	        data[0] = newData;
	        data.splice(1, 1);
	      }
	      //retrieve PTS/DTS from first fragment
	      frag = data[0];
	      pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];
	      if (pesPrefix === 1) {
	        pesLen = (frag[4] << 8) + frag[5];
	        // if PES parsed length is not zero and greater than total received length, stop parsing. PES might be truncated
	        // minus 6 : PES header size
	        if (pesLen && pesLen > stream.size - 6) {
	          return null;
	        }
	        pesFlags = frag[7];
	        if (pesFlags & 0xC0) {
	          /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html
	              as PTS / DTS is 33 bit we cannot use bitwise operator in JS,
	              as Bitwise operators treat their operands as a sequence of 32 bits */
	          pesPts = (frag[9] & 0x0E) * 536870912 + // 1 << 29
	          (frag[10] & 0xFF) * 4194304 + // 1 << 22
	          (frag[11] & 0xFE) * 16384 + // 1 << 14
	          (frag[12] & 0xFF) * 128 + // 1 << 7
	          (frag[13] & 0xFE) / 2;
	          // check if greater than 2^32 -1
	          if (pesPts > 4294967295) {
	            // decrement 2^33
	            pesPts -= 8589934592;
	          }
	          if (pesFlags & 0x40) {
	            pesDts = (frag[14] & 0x0E) * 536870912 + // 1 << 29
	            (frag[15] & 0xFF) * 4194304 + // 1 << 22
	            (frag[16] & 0xFE) * 16384 + // 1 << 14
	            (frag[17] & 0xFF) * 128 + // 1 << 7
	            (frag[18] & 0xFE) / 2;
	            // check if greater than 2^32 -1
	            if (pesDts > 4294967295) {
	              // decrement 2^33
	              pesDts -= 8589934592;
	            }
	            if (pesPts - pesDts > 60 * 90000) {
	              _logger.logger.warn(Math.round((pesPts - pesDts) / 90000) + 's delta between PTS and DTS, align them');
	              pesPts = pesDts;
	            }
	          } else {
	            pesDts = pesPts;
	          }
	        }
	        pesHdrLen = frag[8];
	        // 9 bytes : 6 bytes for PES header + 3 bytes for PES extension
	        payloadStartOffset = pesHdrLen + 9;
	
	        stream.size -= payloadStartOffset;
	        //reassemble PES packet
	        pesData = new Uint8Array(stream.size);
	        for (var j = 0, dataLen = data.length; j < dataLen; j++) {
	          frag = data[j];
	          var len = frag.byteLength;
	          if (payloadStartOffset) {
	            if (payloadStartOffset > len) {
	              // trim full frag if PES header bigger than frag
	              payloadStartOffset -= len;
	              continue;
	            } else {
	              // trim partial frag if PES header smaller than frag
	              frag = frag.subarray(payloadStartOffset);
	              len -= payloadStartOffset;
	              payloadStartOffset = 0;
	            }
	          }
	          pesData.set(frag, i);
	          i += len;
	        }
	        if (pesLen) {
	          // payload size : remove PES header + PES extension
	          pesLen -= pesHdrLen + 3;
	        }
	        return { data: pesData, pts: pesPts, dts: pesDts, len: pesLen };
	      } else {
	        return null;
	      }
	    }
	  }, {
	    key: 'pushAccesUnit',
	    value: function pushAccesUnit(avcSample, avcTrack) {
	      if (avcSample.units.length && avcSample.frame) {
	        var samples = avcTrack.samples;
	        var nbSamples = samples.length;
	        // only push AVC sample if starting with a keyframe is not mandatory OR
	        //    if keyframe already found in this fragment OR
	        //       keyframe found in last fragment (track.sps) AND
	        //          samples already appended (we already found a keyframe in this fragment) OR fragment is contiguous
	        if (!this.config.forceKeyFrameOnDiscontinuity || avcSample.key === true || avcTrack.sps && (nbSamples || this.contiguous)) {
	          avcSample.id = nbSamples;
	          samples.push(avcSample);
	        } else {
	          // dropped samples, track it
	          avcTrack.dropped++;
	        }
	      }
	      if (avcSample.debug.length) {
	        _logger.logger.log(avcSample.pts + '/' + avcSample.dts + ':' + avcSample.debug);
	      }
	    }
	  }, {
	    key: '_parseAVCPES',
	    value: function _parseAVCPES(pes, last) {
	      var _this = this;
	
	      //logger.log('parse new PES');
	      var track = this._avcTrack,
	          units = this._parseAVCNALu(pes.data),
	          debug = false,
	          expGolombDecoder,
	          avcSample = this.avcSample,
	          push,
	          i;
	      //free pes.data to save up some memory
	      pes.data = null;
	
	      units.forEach(function (unit) {
	        switch (unit.type) {
	          //NDR
	          case 1:
	            push = true;
	            if (debug && avcSample) {
	              avcSample.debug += 'NDR ';
	            }
	            avcSample.frame = true;
	            // retrieve slice type by parsing beginning of NAL unit (follow H264 spec, slice_header definition) to detect keyframe embedded in NDR
	            var data = unit.data;
	            if (data.length > 4) {
	              var sliceType = new _expGolomb2.default(data).readSliceType();
	              // 2 : I slice, 4 : SI slice, 7 : I slice, 9: SI slice
	              // SI slice : A slice that is coded using intra prediction only and using quantisation of the prediction samples.
	              // An SI slice can be coded such that its decoded samples can be constructed identically to an SP slice.
	              // I slice: A slice that is not an SI slice that is decoded using intra prediction only.
	              //if (sliceType === 2 || sliceType === 7) {
	              if (sliceType === 2 || sliceType === 4 || sliceType === 7 || sliceType === 9) {
	                avcSample.key = true;
	              }
	            }
	            break;
	          //IDR
	          case 5:
	            push = true;
	            // handle PES not starting with AUD
	            if (!avcSample) {
	              avcSample = _this.avcSample = _this._createAVCSample(true, pes.pts, pes.dts, '');
	            }
	            if (debug) {
	              avcSample.debug += 'IDR ';
	            }
	            avcSample.key = true;
	            avcSample.frame = true;
	            break;
	          //SEI
	          case 6:
	            push = true;
	            if (debug && avcSample) {
	              avcSample.debug += 'SEI ';
	            }
	            expGolombDecoder = new _expGolomb2.default(_this.discardEPB(unit.data));
	
	            // skip frameType
	            expGolombDecoder.readUByte();
	
	            var payloadType = 0;
	            var payloadSize = 0;
	            var endOfCaptions = false;
	            var b = 0;
	
	            while (!endOfCaptions && expGolombDecoder.bytesAvailable > 1) {
	              payloadType = 0;
	              do {
	                b = expGolombDecoder.readUByte();
	                payloadType += b;
	              } while (b === 0xFF);
	
	              // Parse payload size.
	              payloadSize = 0;
	              do {
	                b = expGolombDecoder.readUByte();
	                payloadSize += b;
	              } while (b === 0xFF);
	
	              // TODO: there can be more than one payload in an SEI packet...
	              // TODO: need to read type and size in a while loop to get them all
	              if (payloadType === 4 && expGolombDecoder.bytesAvailable !== 0) {
	
	                endOfCaptions = true;
	
	                var countryCode = expGolombDecoder.readUByte();
	
	                if (countryCode === 181) {
	                  var providerCode = expGolombDecoder.readUShort();
	
	                  if (providerCode === 49) {
	                    var userStructure = expGolombDecoder.readUInt();
	
	                    if (userStructure === 0x47413934) {
	                      var userDataType = expGolombDecoder.readUByte();
	
	                      // Raw CEA-608 bytes wrapped in CEA-708 packet
	                      if (userDataType === 3) {
	                        var firstByte = expGolombDecoder.readUByte();
	                        var secondByte = expGolombDecoder.readUByte();
	
	                        var totalCCs = 31 & firstByte;
	                        var byteArray = [firstByte, secondByte];
	
	                        for (i = 0; i < totalCCs; i++) {
	                          // 3 bytes per CC
	                          byteArray.push(expGolombDecoder.readUByte());
	                          byteArray.push(expGolombDecoder.readUByte());
	                          byteArray.push(expGolombDecoder.readUByte());
	                        }
	
	                        _this._insertSampleInOrder(_this._txtTrack.samples, { type: 3, pts: pes.pts, bytes: byteArray });
	                      }
	                    }
	                  }
	                }
	              } else if (payloadSize < expGolombDecoder.bytesAvailable) {
	                for (i = 0; i < payloadSize; i++) {
	                  expGolombDecoder.readUByte();
	                }
	              }
	            }
	            break;
	          //SPS
	          case 7:
	            push = true;
	            if (debug && avcSample) {
	              avcSample.debug += 'SPS ';
	            }
	            if (!track.sps) {
	              expGolombDecoder = new _expGolomb2.default(unit.data);
	              var config = expGolombDecoder.readSPS();
	              track.width = config.width;
	              track.height = config.height;
	              track.pixelRatio = config.pixelRatio;
	              track.sps = [unit.data];
	              track.duration = _this._duration;
	              var codecarray = unit.data.subarray(1, 4);
	              var codecstring = 'avc1.';
	              for (i = 0; i < 3; i++) {
	                var h = codecarray[i].toString(16);
	                if (h.length < 2) {
	                  h = '0' + h;
	                }
	                codecstring += h;
	              }
	              track.codec = codecstring;
	            }
	            break;
	          //PPS
	          case 8:
	            push = true;
	            if (debug && avcSample) {
	              avcSample.debug += 'PPS ';
	            }
	            if (!track.pps) {
	              track.pps = [unit.data];
	            }
	            break;
	          // AUD
	          case 9:
	            push = false;
	            if (avcSample) {
	              _this.pushAccesUnit(avcSample, track);
	            }
	            avcSample = _this.avcSample = _this._createAVCSample(false, pes.pts, pes.dts, debug ? 'AUD ' : '');
	            break;
	          // Filler Data
	          case 12:
	            push = false;
	            break;
	          default:
	            push = false;
	            if (avcSample) {
	              avcSample.debug += 'unknown NAL ' + unit.type + ' ';
	            }
	            break;
	        }
	        if (avcSample && push) {
	          var _units = avcSample.units;
	          _units.push(unit);
	        }
	      });
	      // if last PES packet, push samples
	      if (last && avcSample) {
	        this.pushAccesUnit(avcSample, track);
	        this.avcSample = null;
	      }
	    }
	  }, {
	    key: '_createAVCSample',
	    value: function _createAVCSample(key, pts, dts, debug) {
	      return { key: key, pts: pts, dts: dts, units: [], debug: debug };
	    }
	  }, {
	    key: '_insertSampleInOrder',
	    value: function _insertSampleInOrder(arr, data) {
	      var len = arr.length;
	      if (len > 0) {
	        if (data.pts >= arr[len - 1].pts) {
	          arr.push(data);
	        } else {
	          for (var pos = len - 1; pos >= 0; pos--) {
	            if (data.pts < arr[pos].pts) {
	              arr.splice(pos, 0, data);
	              break;
	            }
	          }
	        }
	      } else {
	        arr.push(data);
	      }
	    }
	  }, {
	    key: '_getLastNalUnit',
	    value: function _getLastNalUnit() {
	      var avcSample = this.avcSample,
	          lastUnit = void 0;
	      // try to fallback to previous sample if current one is empty
	      if (!avcSample || avcSample.units.length === 0) {
	        var track = this._avcTrack,
	            samples = track.samples;
	        avcSample = samples[samples.length - 1];
	      }
	      if (avcSample) {
	        var units = avcSample.units;
	        lastUnit = units[units.length - 1];
	      }
	      return lastUnit;
	    }
	  }, {
	    key: '_parseAVCNALu',
	    value: function _parseAVCNALu(array) {
	      var i = 0,
	          len = array.byteLength,
	          value,
	          overflow,
	          track = this._avcTrack,
	          state = track.naluState || 0,
	          lastState = state;
	      var units = [],
	          unit,
	          unitType,
	          lastUnitStart = -1,
	          lastUnitType;
	      //logger.log('PES:' + Hex.hexDump(array));
	
	      if (state === -1) {
	        // special use case where we found 3 or 4-byte start codes exactly at the end of previous PES packet
	        lastUnitStart = 0;
	        // NALu type is value read from offset 0
	        lastUnitType = array[0] & 0x1f;
	        state = 0;
	        i = 1;
	      }
	
	      while (i < len) {
	        value = array[i++];
	        // optimization. state 0 and 1 are the predominant case. let's handle them outside of the switch/case
	        if (!state) {
	          state = value ? 0 : 1;
	          continue;
	        }
	        if (state === 1) {
	          state = value ? 0 : 2;
	          continue;
	        }
	        // here we have state either equal to 2 or 3
	        if (!value) {
	          state = 3;
	        } else if (value === 1) {
	          if (lastUnitStart >= 0) {
	            unit = { data: array.subarray(lastUnitStart, i - state - 1), type: lastUnitType };
	            //logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);
	            units.push(unit);
	          } else {
	            // lastUnitStart is undefined => this is the first start code found in this PES packet
	            // first check if start code delimiter is overlapping between 2 PES packets,
	            // ie it started in last packet (lastState not zero)
	            // and ended at the beginning of this PES packet (i <= 4 - lastState)
	            var lastUnit = this._getLastNalUnit();
	            if (lastUnit) {
	              if (lastState && i <= 4 - lastState) {
	                // start delimiter overlapping between PES packets
	                // strip start delimiter bytes from the end of last NAL unit
	                // check if lastUnit had a state different from zero
	                if (lastUnit.state) {
	                  // strip last bytes
	                  lastUnit.data = lastUnit.data.subarray(0, lastUnit.data.byteLength - lastState);
	                }
	              }
	              // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.
	              overflow = i - state - 1;
	              if (overflow > 0) {
	                //logger.log('first NALU found with overflow:' + overflow);
	                var tmp = new Uint8Array(lastUnit.data.byteLength + overflow);
	                tmp.set(lastUnit.data, 0);
	                tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);
	                lastUnit.data = tmp;
	              }
	            }
	          }
	          // check if we can read unit type
	          if (i < len) {
	            unitType = array[i] & 0x1f;
	            //logger.log('find NALU @ offset:' + i + ',type:' + unitType);
	            lastUnitStart = i;
	            lastUnitType = unitType;
	            state = 0;
	          } else {
	            // not enough byte to read unit type. let's read it on next PES parsing
	            state = -1;
	          }
	        } else {
	          state = 0;
	        }
	      }
	      if (lastUnitStart >= 0 && state >= 0) {
	        unit = { data: array.subarray(lastUnitStart, len), type: lastUnitType, state: state };
	        units.push(unit);
	        //logger.log('pushing NALU, type/size/state:' + unit.type + '/' + unit.data.byteLength + '/' + state);
	      }
	      // no NALu found
	      if (units.length === 0) {
	        // append pes.data to previous NAL unit
	        var _lastUnit = this._getLastNalUnit();
	        if (_lastUnit) {
	          var _tmp = new Uint8Array(_lastUnit.data.byteLength + array.byteLength);
	          _tmp.set(_lastUnit.data, 0);
	          _tmp.set(array, _lastUnit.data.byteLength);
	          _lastUnit.data = _tmp;
	        }
	      }
	      track.naluState = state;
	      return units;
	    }
	
	    /**
	     * remove Emulation Prevention bytes from a RBSP
	     */
	
	  }, {
	    key: 'discardEPB',
	    value: function discardEPB(data) {
	      var length = data.byteLength,
	          EPBPositions = [],
	          i = 1,
	          newLength,
	          newData;
	
	      // Find all `Emulation Prevention Bytes`
	      while (i < length - 2) {
	        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {
	          EPBPositions.push(i + 2);
	          i += 2;
	        } else {
	          i++;
	        }
	      }
	
	      // If no Emulation Prevention Bytes were found just return the original
	      // array
	      if (EPBPositions.length === 0) {
	        return data;
	      }
	
	      // Create a new array to hold the NAL unit data
	      newLength = length - EPBPositions.length;
	      newData = new Uint8Array(newLength);
	      var sourceIndex = 0;
	
	      for (i = 0; i < newLength; sourceIndex++, i++) {
	        if (sourceIndex === EPBPositions[0]) {
	          // Skip this byte
	          sourceIndex++;
	          // Remove this position index
	          EPBPositions.shift();
	        }
	        newData[i] = data[sourceIndex];
	      }
	      return newData;
	    }
	  }, {
	    key: '_parseAACPES',
	    value: function _parseAACPES(pes) {
	      var track = this._audioTrack,
	          data = pes.data,
	          pts = pes.pts,
	          startOffset = 0,
	          aacOverFlow = this.aacOverFlow,
	          aacLastPTS = this.aacLastPTS,
	          config,
	          frameLength,
	          frameDuration,
	          frameIndex,
	          offset,
	          headerLength,
	          stamp,
	          len,
	          aacSample;
	      if (aacOverFlow) {
	        var tmp = new Uint8Array(aacOverFlow.byteLength + data.byteLength);
	        tmp.set(aacOverFlow, 0);
	        tmp.set(data, aacOverFlow.byteLength);
	        //logger.log(`AAC: append overflowing ${aacOverFlow.byteLength} bytes to beginning of new PES`);
	        data = tmp;
	      }
	      // look for ADTS header (0xFFFx)
	      for (offset = startOffset, len = data.length; offset < len - 1; offset++) {
	        if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {
	          break;
	        }
	      }
	      // if ADTS header does not start straight from the beginning of the PES payload, raise an error
	      if (offset) {
	        var reason, fatal;
	        if (offset < len - 1) {
	          reason = 'AAC PES did not start with ADTS header,offset:' + offset;
	          fatal = false;
	        } else {
	          reason = 'no ADTS header found in AAC PES';
	          fatal = true;
	        }
	        _logger.logger.warn('parsing error:' + reason);
	        this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: fatal, reason: reason });
	        if (fatal) {
	          return;
	        }
	      }
	      if (!track.samplerate) {
	        var audioCodec = this.audioCodec;
	        config = _adts2.default.getAudioConfig(this.observer, data, offset, audioCodec);
	        track.config = config.config;
	        track.samplerate = config.samplerate;
	        track.channelCount = config.channelCount;
	        track.codec = config.codec;
	        track.manifestCodec = config.manifestCodec;
	        track.duration = this._duration;
	        _logger.logger.log('parsed codec:' + track.codec + ',rate:' + config.samplerate + ',nb channel:' + config.channelCount);
	      }
	      frameIndex = 0;
	      frameDuration = 1024 * 90000 / track.samplerate;
	
	      // if last AAC frame is overflowing, we should ensure timestamps are contiguous:
	      // first sample PTS should be equal to last sample PTS + frameDuration
	      if (aacOverFlow && aacLastPTS) {
	        var newPTS = aacLastPTS + frameDuration;
	        if (Math.abs(newPTS - pts) > 1) {
	          _logger.logger.log('AAC: align PTS for overlapping frames by ' + Math.round((newPTS - pts) / 90));
	          pts = newPTS;
	        }
	      }
	
	      while (offset + 5 < len) {
	        // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header
	        headerLength = !!(data[offset + 1] & 0x01) ? 7 : 9;
	        // retrieve frame size
	        frameLength = (data[offset + 3] & 0x03) << 11 | data[offset + 4] << 3 | (data[offset + 5] & 0xE0) >>> 5;
	        frameLength -= headerLength;
	        //stamp = pes.pts;
	
	        if (frameLength > 0 && offset + headerLength + frameLength <= len) {
	          stamp = pts + frameIndex * frameDuration;
	          //logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);
	          aacSample = { unit: data.subarray(offset + headerLength, offset + headerLength + frameLength), pts: stamp, dts: stamp };
	          track.samples.push(aacSample);
	          track.len += frameLength;
	          offset += frameLength + headerLength;
	          frameIndex++;
	          // look for ADTS header (0xFFFx)
	          for (; offset < len - 1; offset++) {
	            if (data[offset] === 0xff && (data[offset + 1] & 0xf0) === 0xf0) {
	              break;
	            }
	          }
	        } else {
	          break;
	        }
	      }
	      if (offset < len) {
	        aacOverFlow = data.subarray(offset, len);
	        //logger.log(`AAC: overflow detected:${len-offset}`);
	      } else {
	        aacOverFlow = null;
	      }
	      this.aacOverFlow = aacOverFlow;
	      this.aacLastPTS = stamp;
	    }
	  }, {
	    key: '_parseMPEGPES',
	    value: function _parseMPEGPES(pes) {
	      var data = pes.data;
	      var pts = pes.pts;
	      var length = data.length;
	      var frameIndex = 0;
	      var offset = 0;
	      var parsed;
	
	      while (offset < length && (parsed = this._parseMpeg(data, offset, length, frameIndex++, pts)) > 0) {
	        offset += parsed;
	      }
	    }
	  }, {
	    key: '_onMpegFrame',
	    value: function _onMpegFrame(data, bitRate, sampleRate, channelCount, frameIndex, pts) {
	      var frameDuration = 1152 / sampleRate * 1000;
	      var stamp = pts + frameIndex * frameDuration;
	      var track = this._audioTrack;
	
	      track.config = [];
	      track.channelCount = channelCount;
	      track.samplerate = sampleRate;
	      track.duration = this._duration;
	      track.samples.push({ unit: data, pts: stamp, dts: stamp });
	      track.len += data.length;
	    }
	  }, {
	    key: '_onMpegNoise',
	    value: function _onMpegNoise(data) {
	      _logger.logger.warn('mpeg audio has noise: ' + data.length + ' bytes');
	    }
	  }, {
	    key: '_parseMpeg',
	    value: function _parseMpeg(data, start, end, frameIndex, pts) {
	      var BitratesMap = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160];
	      var SamplingRateMap = [44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000];
	
	      if (start + 2 > end) {
	        return -1; // we need at least 2 bytes to detect sync pattern
	      }
	      if (data[start] === 0xFF || (data[start + 1] & 0xE0) === 0xE0) {
	        // Using http://www.datavoyage.com/mpgscript/mpeghdr.htm as a reference
	        if (start + 24 > end) {
	          return -1;
	        }
	        var headerB = data[start + 1] >> 3 & 3;
	        var headerC = data[start + 1] >> 1 & 3;
	        var headerE = data[start + 2] >> 4 & 15;
	        var headerF = data[start + 2] >> 2 & 3;
	        var headerG = !!(data[start + 2] & 2);
	        if (headerB !== 1 && headerE !== 0 && headerE !== 15 && headerF !== 3) {
	          var columnInBitrates = headerB === 3 ? 3 - headerC : headerC === 3 ? 3 : 4;
	          var bitRate = BitratesMap[columnInBitrates * 14 + headerE - 1] * 1000;
	          var columnInSampleRates = headerB === 3 ? 0 : headerB === 2 ? 1 : 2;
	          var sampleRate = SamplingRateMap[columnInSampleRates * 3 + headerF];
	          var padding = headerG ? 1 : 0;
	          var channelCount = data[start + 3] >> 6 === 3 ? 1 : 2; // If bits of channel mode are `11` then it is a single channel (Mono)
	          var frameLength = headerC === 3 ? (headerB === 3 ? 12 : 6) * bitRate / sampleRate + padding << 2 : (headerB === 3 ? 144 : 72) * bitRate / sampleRate + padding | 0;
	          if (start + frameLength > end) {
	            return -1;
	          }
	          if (this._onMpegFrame) {
	            this._onMpegFrame(data.subarray(start, start + frameLength), bitRate, sampleRate, channelCount, frameIndex, pts);
	          }
	          return frameLength;
	        }
	      }
	      // noise or ID3, trying to skip
	      var offset = start + 2;
	      while (offset < end) {
	        if (data[offset - 1] === 0xFF && (data[offset] & 0xE0) === 0xE0) {
	          // sync pattern is found
	          if (this._onMpegNoise) {
	            this._onMpegNoise(data.subarray(start, offset - 1));
	          }
	          return offset - start - 1;
	        }
	        offset++;
	      }
	      return -1;
	    }
	  }, {
	    key: '_parseID3PES',
	    value: function _parseID3PES(pes) {
	      this._id3Track.samples.push(pes);
	    }
	  }], [{
	    key: 'probe',
	    value: function probe(data) {
	      // a TS fragment should contain at least 3 TS packets, a PAT, a PMT, and one PID, each starting with 0x47
	      if (data.length >= 3 * 188 && data[0] === 0x47 && data[188] === 0x47 && data[2 * 188] === 0x47) {
	        return true;
	      } else {
	        return false;
	      }
	    }
	  }]);
	
	  return TSDemuxer;
	}();
	
	exports.default = TSDemuxer;
	
	},{"21":21,"25":25,"28":28,"30":30,"32":32,"50":50}],30:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var ErrorTypes = exports.ErrorTypes = {
	  // Identifier for a network error (loading error / timeout ...)
	  NETWORK_ERROR: 'networkError',
	  // Identifier for a media Error (video/parsing/mediasource error)
	  MEDIA_ERROR: 'mediaError',
	  // Identifier for a mux Error (demuxing/remuxing)
	  MUX_ERROR: 'muxError',
	  // Identifier for all other errors
	  OTHER_ERROR: 'otherError'
	};
	
	var ErrorDetails = exports.ErrorDetails = {
	  // Identifier for a manifest load error - data: { url : faulty URL, response : { code: error code, text: error text }}
	  MANIFEST_LOAD_ERROR: 'manifestLoadError',
	  // Identifier for a manifest load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}
	  MANIFEST_LOAD_TIMEOUT: 'manifestLoadTimeOut',
	  // Identifier for a manifest parsing error - data: { url : faulty URL, reason : error reason}
	  MANIFEST_PARSING_ERROR: 'manifestParsingError',
	  // Identifier for a manifest with only incompatible codecs error - data: { url : faulty URL, reason : error reason}
	  MANIFEST_INCOMPATIBLE_CODECS_ERROR: 'manifestIncompatibleCodecsError',
	  // Identifier for a level load error - data: { url : faulty URL, response : { code: error code, text: error text }}
	  LEVEL_LOAD_ERROR: 'levelLoadError',
	  // Identifier for a level load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}
	  LEVEL_LOAD_TIMEOUT: 'levelLoadTimeOut',
	  // Identifier for a level switch error - data: { level : faulty level Id, event : error description}
	  LEVEL_SWITCH_ERROR: 'levelSwitchError',
	  // Identifier for an audio track load error - data: { url : faulty URL, response : { code: error code, text: error text }}
	  AUDIO_TRACK_LOAD_ERROR: 'audioTrackLoadError',
	  // Identifier for an audio track load timeout - data: { url : faulty URL, response : { code: error code, text: error text }}
	  AUDIO_TRACK_LOAD_TIMEOUT: 'audioTrackLoadTimeOut',
	  // Identifier for fragment load error - data: { frag : fragment object, response : { code: error code, text: error text }}
	  FRAG_LOAD_ERROR: 'fragLoadError',
	  // Identifier for fragment loop loading error - data: { frag : fragment object}
	  FRAG_LOOP_LOADING_ERROR: 'fragLoopLoadingError',
	  // Identifier for fragment load timeout error - data: { frag : fragment object}
	  FRAG_LOAD_TIMEOUT: 'fragLoadTimeOut',
	  // Identifier for a fragment decryption error event - data: {id : demuxer Id,frag: fragment object, reason : parsing error description }
	  FRAG_DECRYPT_ERROR: 'fragDecryptError',
	  // Identifier for a fragment parsing error event - data: { id : demuxer Id, reason : parsing error description }
	  // will be renamed DEMUX_PARSING_ERROR and switched to MUX_ERROR in the next major release
	  FRAG_PARSING_ERROR: 'fragParsingError',
	  // Identifier for a remux alloc error event - data: { id : demuxer Id, frag : fragment object, bytes : nb of bytes on which allocation failed , reason : error text }
	  REMUX_ALLOC_ERROR: 'remuxAllocError',
	  // Identifier for decrypt key load error - data: { frag : fragment object, response : { code: error code, text: error text }}
	  KEY_LOAD_ERROR: 'keyLoadError',
	  // Identifier for decrypt key load timeout error - data: { frag : fragment object}
	  KEY_LOAD_TIMEOUT: 'keyLoadTimeOut',
	  // Triggered when an exception occurs while adding a sourceBuffer to MediaSource - data : {  err : exception , mimeType : mimeType }
	  BUFFER_ADD_CODEC_ERROR: 'bufferAddCodecError',
	  // Identifier for a buffer append error - data: append error description
	  BUFFER_APPEND_ERROR: 'bufferAppendError',
	  // Identifier for a buffer appending error event - data: appending error description
	  BUFFER_APPENDING_ERROR: 'bufferAppendingError',
	  // Identifier for a buffer stalled error event
	  BUFFER_STALLED_ERROR: 'bufferStalledError',
	  // Identifier for a buffer full event
	  BUFFER_FULL_ERROR: 'bufferFullError',
	  // Identifier for a buffer seek over hole event
	  BUFFER_SEEK_OVER_HOLE: 'bufferSeekOverHole',
	  // Identifier for a buffer nudge on stall (playback is stuck although currentTime is in a buffered area)
	  BUFFER_NUDGE_ON_STALL: 'bufferNudgeOnStall',
	  // Identifier for an internal exception happening inside hls.js while handling an event
	  INTERNAL_EXCEPTION: 'internalException',
	  // Malformed WebVTT contents
	  WEBVTT_EXCEPTION: 'webVTTException'
	};
	
	},{}],31:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
	
	ll objects in the event handling chain should inherit from this class
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     *
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     */
	
	var _logger = _dereq_(50);
	
	var _errors = _dereq_(30);
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var EventHandler = function () {
	  function EventHandler(hls) {
	    _classCallCheck(this, EventHandler);
	
	    this.hls = hls;
	    this.onEvent = this.onEvent.bind(this);
	
	    for (var _len = arguments.length, events = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      events[_key - 1] = arguments[_key];
	    }
	
	    this.handledEvents = events;
	    this.useGenericHandler = true;
	
	    this.registerListeners();
	  }
	
	  _createClass(EventHandler, [{
	    key: 'destroy',
	    value: function destroy() {
	      this.unregisterListeners();
	    }
	  }, {
	    key: 'isEventHandler',
	    value: function isEventHandler() {
	      return _typeof(this.handledEvents) === 'object' && this.handledEvents.length && typeof this.onEvent === 'function';
	    }
	  }, {
	    key: 'registerListeners',
	    value: function registerListeners() {
	      if (this.isEventHandler()) {
	        this.handledEvents.forEach(function (event) {
	          if (event === 'hlsEventGeneric') {
	            throw new Error('Forbidden event name: ' + event);
	          }
	          this.hls.on(event, this.onEvent);
	        }.bind(this));
	      }
	    }
	  }, {
	    key: 'unregisterListeners',
	    value: function unregisterListeners() {
	      if (this.isEventHandler()) {
	        this.handledEvents.forEach(function (event) {
	          this.hls.off(event, this.onEvent);
	        }.bind(this));
	      }
	    }
	
	    /**
	     * arguments: event (string), data (any)
	     */
	
	  }, {
	    key: 'onEvent',
	    value: function onEvent(event, data) {
	      this.onEventGeneric(event, data);
	    }
	  }, {
	    key: 'onEventGeneric',
	    value: function onEventGeneric(event, data) {
	      var eventToFunction = function eventToFunction(event, data) {
	        var funcName = 'on' + event.replace('hls', '');
	        if (typeof this[funcName] !== 'function') {
	          throw new Error('Event ' + event + ' has no generic handler in this ' + this.constructor.name + ' class (tried ' + funcName + ')');
	        }
	        return this[funcName].bind(this, data);
	      };
	      try {
	        eventToFunction.call(this, event, data).call();
	      } catch (err) {
	        _logger.logger.error('internal error happened while processing ' + event + ':' + err.message);
	        this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.OTHER_ERROR, details: _errors.ErrorDetails.INTERNAL_EXCEPTION, fatal: false, event: event, err: err });
	      }
	    }
	  }]);
	
	  return EventHandler;
	}();
	
	exports.default = EventHandler;
	
	},{"30":30,"32":32,"50":50}],32:[function(_dereq_,module,exports){
	'use strict';
	
	module.exports = {
	  // fired before MediaSource is attaching to media element - data: { media }
	  MEDIA_ATTACHING: 'hlsMediaAttaching',
	  // fired when MediaSource has been succesfully attached to media element - data: { }
	  MEDIA_ATTACHED: 'hlsMediaAttached',
	  // fired before detaching MediaSource from media element - data: { }
	  MEDIA_DETACHING: 'hlsMediaDetaching',
	  // fired when MediaSource has been detached from media element - data: { }
	  MEDIA_DETACHED: 'hlsMediaDetached',
	  // fired when we buffer is going to be resetted
	  BUFFER_RESET: 'hlsBufferReset',
	  // fired when we know about the codecs that we need buffers for to push into - data: {tracks : { container, codec, levelCodec, initSegment, metadata }}
	  BUFFER_CODECS: 'hlsBufferCodecs',
	  // fired when sourcebuffers have been created data: { tracks : tracks}
	  BUFFER_CREATED: 'hlsBufferCreated',
	  // fired when we append a segment to the buffer - data: { segment: segment object }
	  BUFFER_APPENDING: 'hlsBufferAppending',
	  // fired when we are done with appending a media segment to the buffer data : { parent : segment parent that triggered BUFFER_APPENDING , pending : nb of segments waiting for appending for this segment parent}
	  BUFFER_APPENDED: 'hlsBufferAppended',
	  // fired when the stream is finished and we want to notify the media buffer that there will be no more data
	  BUFFER_EOS: 'hlsBufferEos',
	  // fired when the media buffer should be flushed - data {startOffset, endOffset}
	  BUFFER_FLUSHING: 'hlsBufferFlushing',
	  // fired when the media has been flushed
	  BUFFER_FLUSHED: 'hlsBufferFlushed',
	  // fired to signal that a manifest loading starts - data: { url : manifestURL}
	  MANIFEST_LOADING: 'hlsManifestLoading',
	  // fired after manifest has been loaded - data: { levels : [available quality levels] , audioTracks : [ available audio tracks], url : manifestURL, stats : { trequest, tfirst, tload, mtime}}
	  MANIFEST_LOADED: 'hlsManifestLoaded',
	  // fired after manifest has been parsed - data: { levels : [available quality levels] , firstLevel : index of first quality level appearing in Manifest}
	  MANIFEST_PARSED: 'hlsManifestParsed',
	  // fired when a level switch is requested - data: { level : id of new level } // deprecated in favor LEVEL_SWITCHING
	  LEVEL_SWITCH: 'hlsLevelSwitch',
	  // fired when a level switch is requested - data: { level : id of new level }
	  LEVEL_SWITCHING: 'hlsLevelSwitching',
	  // fired when a level switch is effective - data: { level : id of new level }
	  LEVEL_SWITCHED: 'hlsLevelSwitched',
	  // fired when a level playlist loading starts - data: { url : level URL  level : id of level being loaded}
	  LEVEL_LOADING: 'hlsLevelLoading',
	  // fired when a level playlist loading finishes - data: { details : levelDetails object, level : id of loaded level, stats : { trequest, tfirst, tload, mtime} }
	  LEVEL_LOADED: 'hlsLevelLoaded',
	  // fired when a level's details have been updated based on previous details, after it has been loaded. - data: { details : levelDetails object, level : id of updated level }
	  LEVEL_UPDATED: 'hlsLevelUpdated',
	  // fired when a level's PTS information has been updated after parsing a fragment - data: { details : levelDetails object, level : id of updated level, drift: PTS drift observed when parsing last fragment }
	  LEVEL_PTS_UPDATED: 'hlsLevelPtsUpdated',
	  // fired to notify that audio track lists has been updated data: { audioTracks : audioTracks}
	  AUDIO_TRACKS_UPDATED: 'hlsAudioTracksUpdated',
	  // fired when an audio track switch occurs - data: {  id : audio track id} // deprecated in favor AUDIO_TRACK_SWITCHING
	  AUDIO_TRACK_SWITCH: 'hlsAudioTrackSwitch',
	  // fired when an audio track switching is requested - data: {  id : audio track id}
	  AUDIO_TRACK_SWITCHING: 'hlsAudioTrackSwitching',
	  // fired when an audio track switch actually occurs - data: {  id : audio track id}
	  AUDIO_TRACK_SWITCHED: 'hlsAudioTrackSwitched',
	  // fired when an audio track loading starts - data: { url : audio track URL  id : audio track id}
	  AUDIO_TRACK_LOADING: 'hlsAudioTrackLoading',
	  // fired when an audio track loading  finishes - data: { details : levelDetails object, id : audio track id, stats : { trequest, tfirst, tload, mtime} }
	  AUDIO_TRACK_LOADED: 'hlsAudioTrackLoaded',
	  // fired to notify that subtitle track lists has been updated data: { subtitleTracks : subtitleTracks}
	  SUBTITLE_TRACKS_UPDATED: 'hlsSubtitleTracksUpdated',
	  // fired when an subtitle track switch occurs - data: {  id : subtitle track id}
	  SUBTITLE_TRACK_SWITCH: 'hlsSubtitleTrackSwitch',
	  // fired when an subtitle track loading starts - data: { url : subtitle track URL  id : subtitle track id}
	  SUBTITLE_TRACK_LOADING: 'hlsSubtitleTrackLoading',
	  // fired when an subtitle track loading  finishes - data: { details : levelDetails object, id : subtitle track id, stats : { trequest, tfirst, tload, mtime} }
	  SUBTITLE_TRACK_LOADED: 'hlsSubtitleTrackLoaded',
	  // fired when a subtitle fragment has been processed - data: { success : boolean, frag : the processed frag}
	  SUBTITLE_FRAG_PROCESSED: 'hlsSubtitleFragProcessed',
	  // fired when the first timestamp is found. - data: { id : demuxer id, initPTS: initPTS , frag : fragment object}
	  INIT_PTS_FOUND: 'hlsInitPtsFound',
	  // fired when a fragment loading starts - data: { frag : fragment object}
	  FRAG_LOADING: 'hlsFragLoading',
	  // fired when a fragment loading is progressing - data: { frag : fragment object, { trequest, tfirst, loaded}}
	  FRAG_LOAD_PROGRESS: 'hlsFragLoadProgress',
	  // Identifier for fragment load aborting for emergency switch down - data: {frag : fragment object}
	  FRAG_LOAD_EMERGENCY_ABORTED: 'hlsFragLoadEmergencyAborted',
	  // fired when a fragment loading is completed - data: { frag : fragment object, payload : fragment payload, stats : { trequest, tfirst, tload, length}}
	  FRAG_LOADED: 'hlsFragLoaded',
	  // fired when a fragment has finished decrypting - data: { id : demuxer id, frag: fragment object, stats : {tstart,tdecrypt} }
	  FRAG_DECRYPTED: 'hlsFragDecrypted',
	  // fired when Init Segment has been extracted from fragment - data: { id : demuxer id, frag: fragment object, moov : moov MP4 box, codecs : codecs found while parsing fragment}
	  FRAG_PARSING_INIT_SEGMENT: 'hlsFragParsingInitSegment',
	  // fired when parsing sei text is completed - data: { id : demuxer id, , frag: fragment object, samples : [ sei samples pes ] }
	  FRAG_PARSING_USERDATA: 'hlsFragParsingUserdata',
	  // fired when parsing id3 is completed - data: { id : demuxer id, frag: fragment object, samples : [ id3 samples pes ] }
	  FRAG_PARSING_METADATA: 'hlsFragParsingMetadata',
	  // fired when data have been extracted from fragment - data: { id : demuxer id, frag: fragment object, data1 : moof MP4 box or TS fragments, data2 : mdat MP4 box or null}
	  FRAG_PARSING_DATA: 'hlsFragParsingData',
	  // fired when fragment parsing is completed - data: { id : demuxer id,frag: fragment object }
	  FRAG_PARSED: 'hlsFragParsed',
	  // fired when fragment remuxed MP4 boxes have all been appended into SourceBuffer - data: { id : demuxer id,frag : fragment object, stats : { trequest, tfirst, tload, tparsed, tbuffered, length} }
	  FRAG_BUFFERED: 'hlsFragBuffered',
	  // fired when fragment matching with current media position is changing - data : { id : demuxer id, frag : fragment object }
	  FRAG_CHANGED: 'hlsFragChanged',
	  // Identifier for a FPS drop event - data: {curentDropped, currentDecoded, totalDroppedFrames}
	  FPS_DROP: 'hlsFpsDrop',
	  //triggered when FPS drop triggers auto level capping - data: {level, droppedlevel}
	  FPS_DROP_LEVEL_CAPPING: 'hlsFpsDropLevelCapping',
	  // Identifier for an error event - data: { type : error type, details : error details, fatal : if true, hls.js cannot/will not try to recover, if false, hls.js will try to recover,other error specific data}
	  ERROR: 'hlsError',
	  // fired when hls.js instance starts destroying. Different from MEDIA_DETACHED as one could want to detach and reattach a media to the instance of hls.js to handle mid-rolls for example
	  DESTROYING: 'hlsDestroying',
	  // fired when a decrypt key loading starts - data: { frag : fragment object}
	  KEY_LOADING: 'hlsKeyLoading',
	  // fired when a decrypt key loading is completed - data: { frag : fragment object, payload : key payload, stats : { trequest, tfirst, tload, length}}
	  KEY_LOADED: 'hlsKeyLoaded',
	  // fired upon stream controller state transitions - data: {previousState, nextState}
	  STREAM_STATE_TRANSITION: 'hlsStreamStateTransition'
	};
	
	},{}],33:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 *  AAC helper
	 */
	
	var AAC = function () {
	  function AAC() {
	    _classCallCheck(this, AAC);
	  }
	
	  _createClass(AAC, null, [{
	    key: 'getSilentFrame',
	    value: function getSilentFrame(codec, channelCount) {
	      switch (codec) {
	        case 'mp4a.40.2':
	          if (channelCount === 1) {
	            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);
	          } else if (channelCount === 2) {
	            return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);
	          } else if (channelCount === 3) {
	            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);
	          } else if (channelCount === 4) {
	            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);
	          } else if (channelCount === 5) {
	            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);
	          } else if (channelCount === 6) {
	            return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);
	          }
	          break;
	        // handle HE-AAC below (mp4a.40.5 / mp4a.40.29)
	        default:
	          if (channelCount === 1) {
	            // ffmpeg -y -f lavfi -i "aevalsrc=0:d=0.05" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
	            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
	          } else if (channelCount === 2) {
	            // ffmpeg -y -f lavfi -i "aevalsrc=0|0:d=0.05" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
	            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
	          } else if (channelCount === 3) {
	            // ffmpeg -y -f lavfi -i "aevalsrc=0|0|0:d=0.05" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
	            return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
	          }
	          break;
	      }
	      return null;
	    }
	  }]);
	
	  return AAC;
	}();
	
	exports.default = AAC;
	
	},{}],34:[function(_dereq_,module,exports){
	"use strict";
	
	/**
	 * Buffer Helper utils, providing methods dealing buffer length retrieval
	*/
	
	var BufferHelper = {
	  isBuffered: function isBuffered(media, position) {
	    if (media) {
	      var buffered = media.buffered;
	      for (var i = 0; i < buffered.length; i++) {
	        if (position >= buffered.start(i) && position <= buffered.end(i)) {
	          return true;
	        }
	      }
	    }
	    return false;
	  },
	
	  bufferInfo: function bufferInfo(media, pos, maxHoleDuration) {
	    if (media) {
	      var vbuffered = media.buffered,
	          buffered = [],
	          i;
	      for (i = 0; i < vbuffered.length; i++) {
	        buffered.push({ start: vbuffered.start(i), end: vbuffered.end(i) });
	      }
	      return this.bufferedInfo(buffered, pos, maxHoleDuration);
	    } else {
	      return { len: 0, start: pos, end: pos, nextStart: undefined };
	    }
	  },
	
	  bufferedInfo: function bufferedInfo(buffered, pos, maxHoleDuration) {
	    var buffered2 = [],
	
	    // bufferStart and bufferEnd are buffer boundaries around current video position
	    bufferLen,
	        bufferStart,
	        bufferEnd,
	        bufferStartNext,
	        i;
	    // sort on buffer.start/smaller end (IE does not always return sorted buffered range)
	    buffered.sort(function (a, b) {
	      var diff = a.start - b.start;
	      if (diff) {
	        return diff;
	      } else {
	        return b.end - a.end;
	      }
	    });
	    // there might be some small holes between buffer time range
	    // consider that holes smaller than maxHoleDuration are irrelevant and build another
	    // buffer time range representations that discards those holes
	    for (i = 0; i < buffered.length; i++) {
	      var buf2len = buffered2.length;
	      if (buf2len) {
	        var buf2end = buffered2[buf2len - 1].end;
	        // if small hole (value between 0 or maxHoleDuration ) or overlapping (negative)
	        if (buffered[i].start - buf2end < maxHoleDuration) {
	          // merge overlapping time ranges
	          // update lastRange.end only if smaller than item.end
	          // e.g.  [ 1, 15] with  [ 2,8] => [ 1,15] (no need to modify lastRange.end)
	          // whereas [ 1, 8] with  [ 2,15] => [ 1,15] ( lastRange should switch from [1,8] to [1,15])
	          if (buffered[i].end > buf2end) {
	            buffered2[buf2len - 1].end = buffered[i].end;
	          }
	        } else {
	          // big hole
	          buffered2.push(buffered[i]);
	        }
	      } else {
	        // first value
	        buffered2.push(buffered[i]);
	      }
	    }
	    for (i = 0, bufferLen = 0, bufferStart = bufferEnd = pos; i < buffered2.length; i++) {
	      var start = buffered2[i].start,
	          end = buffered2[i].end;
	      //logger.log('buf start/end:' + buffered.start(i) + '/' + buffered.end(i));
	      if (pos + maxHoleDuration >= start && pos < end) {
	        // play position is inside this buffer TimeRange, retrieve end of buffer position and buffer length
	        bufferStart = start;
	        bufferEnd = end;
	        bufferLen = bufferEnd - pos;
	      } else if (pos + maxHoleDuration < start) {
	        bufferStartNext = start;
	        break;
	      }
	    }
	    return { len: bufferLen, start: bufferStart, end: bufferEnd, nextStart: bufferStartNext };
	  }
	};
	
	module.exports = BufferHelper;
	
	},{}],35:[function(_dereq_,module,exports){
	'use strict';
	
	var _logger = _dereq_(50);
	
	var LevelHelper = {
	
	  mergeDetails: function mergeDetails(oldDetails, newDetails) {
	    var start = Math.max(oldDetails.startSN, newDetails.startSN) - newDetails.startSN,
	        end = Math.min(oldDetails.endSN, newDetails.endSN) - newDetails.startSN,
	        delta = newDetails.startSN - oldDetails.startSN,
	        oldfragments = oldDetails.fragments,
	        newfragments = newDetails.fragments,
	        ccOffset = 0,
	        PTSFrag;
	
	    // check if old/new playlists have fragments in common
	    if (end < start) {
	      newDetails.PTSKnown = false;
	      return;
	    }
	    // loop through overlapping SN and update startPTS , cc, and duration if any found
	    for (var i = start; i <= end; i++) {
	      var oldFrag = oldfragments[delta + i],
	          newFrag = newfragments[i];
	      if (newFrag && oldFrag) {
	        ccOffset = oldFrag.cc - newFrag.cc;
	        if (!isNaN(oldFrag.startPTS)) {
	          newFrag.start = newFrag.startPTS = oldFrag.startPTS;
	          newFrag.endPTS = oldFrag.endPTS;
	          newFrag.duration = oldFrag.duration;
	          PTSFrag = newFrag;
	        }
	      }
	    }
	
	    if (ccOffset) {
	      _logger.logger.log('discontinuity sliding from playlist, take drift into account');
	      for (i = 0; i < newfragments.length; i++) {
	        newfragments[i].cc += ccOffset;
	      }
	    }
	
	    // if at least one fragment contains PTS info, recompute PTS information for all fragments
	    if (PTSFrag) {
	      LevelHelper.updateFragPTSDTS(newDetails, PTSFrag.sn, PTSFrag.startPTS, PTSFrag.endPTS, PTSFrag.startDTS, PTSFrag.endDTS);
	    } else {
	      // ensure that delta is within oldfragments range
	      // also adjust sliding in case delta is 0 (we could have old=[50-60] and new=old=[50-61])
	      // in that case we also need to adjust start offset of all fragments
	      if (delta >= 0 && delta < oldfragments.length) {
	        // adjust start by sliding offset
	        var sliding = oldfragments[delta].start;
	        for (i = 0; i < newfragments.length; i++) {
	          newfragments[i].start += sliding;
	        }
	      }
	    }
	    // if we are here, it means we have fragments overlapping between
	    // old and new level. reliable PTS info is thus relying on old level
	    newDetails.PTSKnown = oldDetails.PTSKnown;
	    return;
	  },
	
	  updateFragPTSDTS: function updateFragPTSDTS(details, sn, startPTS, endPTS, startDTS, endDTS) {
	    var fragIdx, fragments, frag, i;
	    // exit if sn out of range
	    if (!details || sn < details.startSN || sn > details.endSN) {
	      return 0;
	    }
	    fragIdx = sn - details.startSN;
	    fragments = details.fragments;
	    frag = fragments[fragIdx];
	    if (!isNaN(frag.startPTS)) {
	      // delta PTS between audio and video
	      var deltaPTS = Math.abs(frag.startPTS - startPTS);
	      if (isNaN(frag.deltaPTS)) {
	        frag.deltaPTS = deltaPTS;
	      } else {
	        frag.deltaPTS = Math.max(deltaPTS, frag.deltaPTS);
	      }
	      startPTS = Math.min(startPTS, frag.startPTS);
	      endPTS = Math.max(endPTS, frag.endPTS);
	      startDTS = Math.min(startDTS, frag.startDTS);
	      endDTS = Math.max(endDTS, frag.endDTS);
	    }
	
	    var drift = startPTS - frag.start;
	
	    frag.start = frag.startPTS = startPTS;
	    frag.endPTS = endPTS;
	    frag.startDTS = startDTS;
	    frag.endDTS = endDTS;
	    frag.duration = endPTS - startPTS;
	    // adjust fragment PTS/duration from seqnum-1 to frag 0
	    for (i = fragIdx; i > 0; i--) {
	      LevelHelper.updatePTS(fragments, i, i - 1);
	    }
	
	    // adjust fragment PTS/duration from seqnum to last frag
	    for (i = fragIdx; i < fragments.length - 1; i++) {
	      LevelHelper.updatePTS(fragments, i, i + 1);
	    }
	    details.PTSKnown = true;
	    //logger.log(`                                            frag start/end:${startPTS.toFixed(3)}/${endPTS.toFixed(3)}`);
	
	    return drift;
	  },
	
	  updatePTS: function updatePTS(fragments, fromIdx, toIdx) {
	    var fragFrom = fragments[fromIdx],
	        fragTo = fragments[toIdx],
	        fragToPTS = fragTo.startPTS;
	    // if we know startPTS[toIdx]
	    if (!isNaN(fragToPTS)) {
	      // update fragment duration.
	      // it helps to fix drifts between playlist reported duration and fragment real duration
	      if (toIdx > fromIdx) {
	        fragFrom.duration = fragToPTS - fragFrom.start;
	        if (fragFrom.duration < 0) {
	          _logger.logger.warn('negative duration computed for frag ' + fragFrom.sn + ',level ' + fragFrom.level + ', there should be some duration drift between playlist and fragment!');
	        }
	      } else {
	        fragTo.duration = fragFrom.start - fragToPTS;
	        if (fragTo.duration < 0) {
	          _logger.logger.warn('negative duration computed for frag ' + fragTo.sn + ',level ' + fragTo.level + ', there should be some duration drift between playlist and fragment!');
	        }
	      }
	    } else {
	      // we dont know startPTS[toIdx]
	      if (toIdx > fromIdx) {
	        fragTo.start = fragFrom.start + fragFrom.duration;
	      } else {
	        fragTo.start = fragFrom.start - fragTo.duration;
	      }
	    }
	  }
	}; /**
	    * Level Helper class, providing methods dealing with playlist sliding and drift
	   */
	
	module.exports = LevelHelper;
	
	},{"50":50}],36:[function(_dereq_,module,exports){
	/**
	 * HLS interface
	 */
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _urlToolkit = _dereq_(2);
	
	var _urlToolkit2 = _interopRequireDefault(_urlToolkit);
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _errors = _dereq_(30);
	
	var _playlistLoader = _dereq_(40);
	
	var _playlistLoader2 = _interopRequireDefault(_playlistLoader);
	
	var _fragmentLoader = _dereq_(38);
	
	var _fragmentLoader2 = _interopRequireDefault(_fragmentLoader);
	
	var _keyLoader = _dereq_(39);
	
	var _keyLoader2 = _interopRequireDefault(_keyLoader);
	
	var _streamController = _dereq_(12);
	
	var _streamController2 = _interopRequireDefault(_streamController);
	
	var _levelController = _dereq_(11);
	
	var _levelController2 = _interopRequireDefault(_levelController);
	
	var _logger = _dereq_(50);
	
	var _events3 = _dereq_(1);
	
	var _events4 = _interopRequireDefault(_events3);
	
	var _config = _dereq_(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Hls = function () {
	  _createClass(Hls, null, [{
	    key: 'isSupported',
	    value: function isSupported() {
	      window.MediaSource = window.MediaSource || window.WebKitMediaSource;
	      return window.MediaSource && typeof window.MediaSource.isTypeSupported === 'function' && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"');
	    }
	  }, {
	    key: 'version',
	    get: function get() {
	      // replaced with browserify-versionify transform
	      return '0.7.5';
	    }
	  }, {
	    key: 'Events',
	    get: function get() {
	      return _events2.default;
	    }
	  }, {
	    key: 'ErrorTypes',
	    get: function get() {
	      return _errors.ErrorTypes;
	    }
	  }, {
	    key: 'ErrorDetails',
	    get: function get() {
	      return _errors.ErrorDetails;
	    }
	  }, {
	    key: 'DefaultConfig',
	    get: function get() {
	      if (!Hls.defaultConfig) {
	        return _config.hlsDefaultConfig;
	      }
	      return Hls.defaultConfig;
	    },
	    set: function set(defaultConfig) {
	      Hls.defaultConfig = defaultConfig;
	    }
	  }]);
	
	  function Hls() {
	    var _this = this;
	
	    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    _classCallCheck(this, Hls);
	
	    var defaultConfig = Hls.DefaultConfig;
	
	    if ((config.liveSyncDurationCount || config.liveMaxLatencyDurationCount) && (config.liveSyncDuration || config.liveMaxLatencyDuration)) {
	      throw new Error('Illegal hls.js config: don\'t mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration');
	    }
	
	    for (var prop in defaultConfig) {
	      if (prop in config) {
	        continue;
	      }
	      config[prop] = defaultConfig[prop];
	    }
	
	    if (config.liveMaxLatencyDurationCount !== undefined && config.liveMaxLatencyDurationCount <= config.liveSyncDurationCount) {
	      throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
	    }
	
	    if (config.liveMaxLatencyDuration !== undefined && (config.liveMaxLatencyDuration <= config.liveSyncDuration || config.liveSyncDuration === undefined)) {
	      throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
	    }
	
	    (0, _logger.enableLogs)(config.debug);
	    this.config = config;
	    this._autoLevelCapping = -1;
	    // observer setup
	    var observer = this.observer = new _events4.default();
	    observer.trigger = function trigger(event) {
	      for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        data[_key - 1] = arguments[_key];
	      }
	
	      observer.emit.apply(observer, [event, event].concat(data));
	    };
	
	    observer.off = function off(event) {
	      for (var _len2 = arguments.length, data = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	        data[_key2 - 1] = arguments[_key2];
	      }
	
	      observer.removeListener.apply(observer, [event].concat(data));
	    };
	    this.on = observer.on.bind(observer);
	    this.off = observer.off.bind(observer);
	    this.trigger = observer.trigger.bind(observer);
	
	    // core controllers and network loaders
	    var abrController = this.abrController = new config.abrController(this);
	    var bufferController = new config.bufferController(this);
	    var capLevelController = new config.capLevelController(this);
	    var fpsController = new config.fpsController(this);
	    var playListLoader = new _playlistLoader2.default(this);
	    var fragmentLoader = new _fragmentLoader2.default(this);
	    var keyLoader = new _keyLoader2.default(this);
	
	    // network controllers
	    var levelController = this.levelController = new _levelController2.default(this);
	    var streamController = this.streamController = new _streamController2.default(this);
	    var networkControllers = [levelController, streamController];
	
	    // optional audio stream controller
	    var Controller = config.audioStreamController;
	    if (Controller) {
	      networkControllers.push(new Controller(this));
	    }
	    this.networkControllers = networkControllers;
	
	    var coreComponents = [playListLoader, fragmentLoader, keyLoader, abrController, bufferController, capLevelController, fpsController];
	
	    // optional audio track and subtitle controller
	    Controller = config.audioTrackController;
	    if (Controller) {
	      var audioTrackController = new Controller(this);
	      this.audioTrackController = audioTrackController;
	      coreComponents.push(audioTrackController);
	    }
	
	    Controller = config.subtitleTrackController;
	    if (Controller) {
	      var subtitleTrackController = new Controller(this);
	      this.subtitleTrackController = subtitleTrackController;
	      coreComponents.push(subtitleTrackController);
	    }
	
	    // optional subtitle controller
	    [config.subtitleStreamController, config.timelineController].forEach(function (Controller) {
	      if (Controller) {
	        coreComponents.push(new Controller(_this));
	      }
	    });
	    this.coreComponents = coreComponents;
	  }
	
	  _createClass(Hls, [{
	    key: 'destroy',
	    value: function destroy() {
	      _logger.logger.log('destroy');
	      this.trigger(_events2.default.DESTROYING);
	      this.detachMedia();
	      this.coreComponents.concat(this.networkControllers).forEach(function (component) {
	        component.destroy();
	      });
	      this.url = null;
	      this.observer.removeAllListeners();
	      this._autoLevelCapping = -1;
	    }
	  }, {
	    key: 'attachMedia',
	    value: function attachMedia(media) {
	      _logger.logger.log('attachMedia');
	      this.media = media;
	      this.trigger(_events2.default.MEDIA_ATTACHING, { media: media });
	    }
	  }, {
	    key: 'detachMedia',
	    value: function detachMedia() {
	      _logger.logger.log('detachMedia');
	      this.trigger(_events2.default.MEDIA_DETACHING);
	      this.media = null;
	    }
	  }, {
	    key: 'loadSource',
	    value: function loadSource(url) {
	      url = _urlToolkit2.default.buildAbsoluteURL(window.location.href, url, { alwaysNormalize: true });
	      _logger.logger.log('loadSource:' + url);
	      this.url = url;
	      // when attaching to a source URL, trigger a playlist load
	      this.trigger(_events2.default.MANIFEST_LOADING, { url: url });
	    }
	  }, {
	    key: 'startLoad',
	    value: function startLoad() {
	      var startPosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
	
	      _logger.logger.log('startLoad(' + startPosition + ')');
	      this.networkControllers.forEach(function (controller) {
	        controller.startLoad(startPosition);
	      });
	    }
	  }, {
	    key: 'stopLoad',
	    value: function stopLoad() {
	      _logger.logger.log('stopLoad');
	      this.networkControllers.forEach(function (controller) {
	        controller.stopLoad();
	      });
	    }
	  }, {
	    key: 'swapAudioCodec',
	    value: function swapAudioCodec() {
	      _logger.logger.log('swapAudioCodec');
	      this.streamController.swapAudioCodec();
	    }
	  }, {
	    key: 'recoverMediaError',
	    value: function recoverMediaError() {
	      _logger.logger.log('recoverMediaError');
	      var media = this.media;
	      this.detachMedia();
	      this.attachMedia(media);
	    }
	
	    /** Return all quality levels **/
	
	  }, {
	    key: 'levels',
	    get: function get() {
	      return this.levelController.levels;
	    }
	
	    /** Return current playback quality level **/
	
	  }, {
	    key: 'currentLevel',
	    get: function get() {
	      return this.streamController.currentLevel;
	    }
	
	    /* set quality level immediately (-1 for automatic level selection) */
	    ,
	    set: function set(newLevel) {
	      _logger.logger.log('set currentLevel:' + newLevel);
	      this.loadLevel = newLevel;
	      this.streamController.immediateLevelSwitch();
	    }
	
	    /** Return next playback quality level (quality level of next fragment) **/
	
	  }, {
	    key: 'nextLevel',
	    get: function get() {
	      return this.streamController.nextLevel;
	    }
	
	    /* set quality level for next fragment (-1 for automatic level selection) */
	    ,
	    set: function set(newLevel) {
	      _logger.logger.log('set nextLevel:' + newLevel);
	      this.levelController.manualLevel = newLevel;
	      this.streamController.nextLevelSwitch();
	    }
	
	    /** Return the quality level of current/last loaded fragment **/
	
	  }, {
	    key: 'loadLevel',
	    get: function get() {
	      return this.levelController.level;
	    }
	
	    /* set quality level for current/next loaded fragment (-1 for automatic level selection) */
	    ,
	    set: function set(newLevel) {
	      _logger.logger.log('set loadLevel:' + newLevel);
	      this.levelController.manualLevel = newLevel;
	    }
	
	    /** Return the quality level of next loaded fragment **/
	
	  }, {
	    key: 'nextLoadLevel',
	    get: function get() {
	      return this.levelController.nextLoadLevel;
	    }
	
	    /** set quality level of next loaded fragment **/
	    ,
	    set: function set(level) {
	      this.levelController.nextLoadLevel = level;
	    }
	
	    /** Return first level (index of first level referenced in manifest)
	    **/
	
	  }, {
	    key: 'firstLevel',
	    get: function get() {
	      return Math.max(this.levelController.firstLevel, this.minAutoLevel);
	    }
	
	    /** set first level (index of first level referenced in manifest)
	    **/
	    ,
	    set: function set(newLevel) {
	      _logger.logger.log('set firstLevel:' + newLevel);
	      this.levelController.firstLevel = newLevel;
	    }
	
	    /** Return start level (level of first fragment that will be played back)
	        if not overrided by user, first level appearing in manifest will be used as start level
	        if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)
	    **/
	
	  }, {
	    key: 'startLevel',
	    get: function get() {
	      return this.levelController.startLevel;
	    }
	
	    /** set  start level (level of first fragment that will be played back)
	        if not overrided by user, first level appearing in manifest will be used as start level
	        if -1 : automatic start level selection, playback will start from level matching download bandwidth (determined from download of first segment)
	    **/
	    ,
	    set: function set(newLevel) {
	      _logger.logger.log('set startLevel:' + newLevel);
	      var hls = this;
	      // if not in automatic start level detection, ensure startLevel is greater than minAutoLevel
	      if (newLevel !== -1) {
	        newLevel = Math.max(newLevel, hls.minAutoLevel);
	      }
	      hls.levelController.startLevel = newLevel;
	    }
	
	    /** Return the capping/max level value that could be used by automatic level selection algorithm **/
	
	  }, {
	    key: 'autoLevelCapping',
	    get: function get() {
	      return this._autoLevelCapping;
	    }
	
	    /** set the capping/max level value that could be used by automatic level selection algorithm **/
	    ,
	    set: function set(newLevel) {
	      _logger.logger.log('set autoLevelCapping:' + newLevel);
	      this._autoLevelCapping = newLevel;
	    }
	
	    /* check if we are in automatic level selection mode */
	
	  }, {
	    key: 'autoLevelEnabled',
	    get: function get() {
	      return this.levelController.manualLevel === -1;
	    }
	
	    /* return manual level */
	
	  }, {
	    key: 'manualLevel',
	    get: function get() {
	      return this.levelController.manualLevel;
	    }
	
	    /* return min level selectable in auto mode according to config.minAutoBitrate */
	
	  }, {
	    key: 'minAutoLevel',
	    get: function get() {
	      var hls = this,
	          levels = hls.levels,
	          minAutoBitrate = hls.config.minAutoBitrate,
	          len = levels ? levels.length : 0;
	      for (var i = 0; i < len; i++) {
	        var levelNextBitrate = levels[i].realBitrate ? Math.max(levels[i].realBitrate, levels[i].bitrate) : levels[i].bitrate;
	        if (levelNextBitrate > minAutoBitrate) {
	          return i;
	        }
	      }
	      return 0;
	    }
	
	    /* return max level selectable in auto mode according to autoLevelCapping */
	
	  }, {
	    key: 'maxAutoLevel',
	    get: function get() {
	      var hls = this;
	      var levels = hls.levels;
	      var autoLevelCapping = hls.autoLevelCapping;
	      var maxAutoLevel = void 0;
	      if (autoLevelCapping === -1 && levels && levels.length) {
	        maxAutoLevel = levels.length - 1;
	      } else {
	        maxAutoLevel = autoLevelCapping;
	      }
	      return maxAutoLevel;
	    }
	
	    // return next auto level
	
	  }, {
	    key: 'nextAutoLevel',
	    get: function get() {
	      var hls = this;
	      // ensure next auto level is between  min and max auto level
	      return Math.min(Math.max(hls.abrController.nextAutoLevel, hls.minAutoLevel), hls.maxAutoLevel);
	    }
	
	    // this setter is used to force next auto level
	    // this is useful to force a switch down in auto mode : in case of load error on level N, hls.js can set nextAutoLevel to N-1 for example)
	    // forced value is valid for one fragment. upon succesful frag loading at forced level, this value will be resetted to -1 by ABR controller
	    ,
	    set: function set(nextLevel) {
	      var hls = this;
	      hls.abrController.nextAutoLevel = Math.max(hls.minAutoLevel, nextLevel);
	    }
	
	    /** get alternate audio tracks list from playlist **/
	
	  }, {
	    key: 'audioTracks',
	    get: function get() {
	      var audioTrackController = this.audioTrackController;
	      return audioTrackController ? audioTrackController.audioTracks : [];
	    }
	
	    /** get index of the selected audio track (index in audio track lists) **/
	
	  }, {
	    key: 'audioTrack',
	    get: function get() {
	      var audioTrackController = this.audioTrackController;
	      return audioTrackController ? audioTrackController.audioTrack : -1;
	    }
	
	    /** select an audio track, based on its index in audio track lists**/
	    ,
	    set: function set(audioTrackId) {
	      var audioTrackController = this.audioTrackController;
	      if (audioTrackController) {
	        audioTrackController.audioTrack = audioTrackId;
	      }
	    }
	  }, {
	    key: 'liveSyncPosition',
	    get: function get() {
	      return this.streamController.liveSyncPosition;
	    }
	
	    /** get alternate subtitle tracks list from playlist **/
	
	  }, {
	    key: 'subtitleTracks',
	    get: function get() {
	      var subtitleTrackController = this.subtitleTrackController;
	      return subtitleTrackController ? subtitleTrackController.subtitleTracks : [];
	    }
	
	    /** get index of the selected subtitle track (index in subtitle track lists) **/
	
	  }, {
	    key: 'subtitleTrack',
	    get: function get() {
	      var subtitleTrackController = this.subtitleTrackController;
	      return subtitleTrackController ? subtitleTrackController.subtitleTrack : -1;
	    }
	
	    /** select an subtitle track, based on its index in subtitle track lists**/
	    ,
	    set: function set(subtitleTrackId) {
	      var subtitleTrackController = this.subtitleTrackController;
	      if (subtitleTrackController) {
	        subtitleTrackController.subtitleTrack = subtitleTrackId;
	      }
	    }
	  }]);
	
	  return Hls;
	}();
	
	exports.default = Hls;
	
	},{"1":1,"11":11,"12":12,"2":2,"30":30,"32":32,"38":38,"39":39,"4":4,"40":40,"50":50}],37:[function(_dereq_,module,exports){
	'use strict';
	
	// This is mostly for support of the es6 module export
	// syntax with the babel compiler, it looks like it doesnt support
	// function exports like we are used to in node/commonjs
	module.exports = _dereq_(36).default;
	
	},{"36":36}],38:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _errors = _dereq_(30);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Fragment Loader
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var FragmentLoader = function (_EventHandler) {
	  _inherits(FragmentLoader, _EventHandler);
	
	  function FragmentLoader(hls) {
	    _classCallCheck(this, FragmentLoader);
	
	    var _this = _possibleConstructorReturn(this, (FragmentLoader.__proto__ || Object.getPrototypeOf(FragmentLoader)).call(this, hls, _events2.default.FRAG_LOADING));
	
	    _this.loaders = {};
	    return _this;
	  }
	
	  _createClass(FragmentLoader, [{
	    key: 'destroy',
	    value: function destroy() {
	      var loaders = this.loaders;
	      for (var loaderName in loaders) {
	        var loader = loaders[loaderName];
	        if (loader) {
	          loader.destroy();
	        }
	      }
	      this.loaders = {};
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	  }, {
	    key: 'onFragLoading',
	    value: function onFragLoading(data) {
	      var frag = data.frag,
	          type = frag.type,
	          loader = this.loaders[type],
	          config = this.hls.config;
	
	      frag.loaded = 0;
	      if (loader) {
	        _logger.logger.warn('abort previous fragment loader for type:' + type);
	        loader.abort();
	      }
	      loader = this.loaders[type] = frag.loader = typeof config.fLoader !== 'undefined' ? new config.fLoader(config) : new config.loader(config);
	
	      var loaderContext = void 0,
	          loaderConfig = void 0,
	          loaderCallbacks = void 0;
	      loaderContext = { url: frag.url, frag: frag, responseType: 'arraybuffer', progressData: false };
	      var start = frag.byteRangeStartOffset,
	          end = frag.byteRangeEndOffset;
	      if (!isNaN(start) && !isNaN(end)) {
	        loaderContext.rangeStart = start;
	        loaderContext.rangeEnd = end;
	      }
	      loaderConfig = { timeout: config.fragLoadingTimeOut, maxRetry: 0, retryDelay: 0, maxRetryDelay: config.fragLoadingMaxRetryTimeout };
	      loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this), onProgress: this.loadprogress.bind(this) };
	      loader.load(loaderContext, loaderConfig, loaderCallbacks);
	    }
	  }, {
	    key: 'loadsuccess',
	    value: function loadsuccess(response, stats, context) {
	      var payload = response.data,
	          frag = context.frag;
	      // detach fragment loader on load success
	      frag.loader = undefined;
	      this.loaders[frag.type] = undefined;
	      this.hls.trigger(_events2.default.FRAG_LOADED, { payload: payload, frag: frag, stats: stats });
	    }
	  }, {
	    key: 'loaderror',
	    value: function loaderror(response, context) {
	      var loader = context.loader;
	      if (loader) {
	        loader.abort();
	      }
	      this.loaders[context.type] = undefined;
	      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.FRAG_LOAD_ERROR, fatal: false, frag: context.frag, response: response });
	    }
	  }, {
	    key: 'loadtimeout',
	    value: function loadtimeout(stats, context) {
	      var loader = context.loader;
	      if (loader) {
	        loader.abort();
	      }
	      this.loaders[context.type] = undefined;
	      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.FRAG_LOAD_TIMEOUT, fatal: false, frag: context.frag });
	    }
	
	    // data will be used for progressive parsing
	
	  }, {
	    key: 'loadprogress',
	    value: function loadprogress(stats, context, data) {
	      // jshint ignore:line
	      var frag = context.frag;
	      frag.loaded = stats.loaded;
	      this.hls.trigger(_events2.default.FRAG_LOAD_PROGRESS, { frag: frag, stats: stats });
	    }
	  }]);
	
	  return FragmentLoader;
	}(_eventHandler2.default);
	
	exports.default = FragmentLoader;
	
	},{"30":30,"31":31,"32":32,"50":50}],39:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _errors = _dereq_(30);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Decrypt key Loader
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */
	
	var KeyLoader = function (_EventHandler) {
	  _inherits(KeyLoader, _EventHandler);
	
	  function KeyLoader(hls) {
	    _classCallCheck(this, KeyLoader);
	
	    var _this = _possibleConstructorReturn(this, (KeyLoader.__proto__ || Object.getPrototypeOf(KeyLoader)).call(this, hls, _events2.default.KEY_LOADING));
	
	    _this.loaders = {};
	    _this.decryptkey = null;
	    _this.decrypturl = null;
	    return _this;
	  }
	
	  _createClass(KeyLoader, [{
	    key: 'destroy',
	    value: function destroy() {
	      for (var loaderName in this.loaders) {
	        var loader = this.loaders[loaderName];
	        if (loader) {
	          loader.destroy();
	        }
	      }
	      this.loaders = {};
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	  }, {
	    key: 'onKeyLoading',
	    value: function onKeyLoading(data) {
	      var frag = data.frag,
	          type = frag.type,
	          loader = this.loaders[type],
	          decryptdata = frag.decryptdata,
	          uri = decryptdata.uri;
	      // if uri is different from previous one or if decrypt key not retrieved yet
	      if (uri !== this.decrypturl || this.decryptkey === null) {
	        var config = this.hls.config;
	
	        if (loader) {
	          _logger.logger.warn('abort previous key loader for type:' + type);
	          loader.abort();
	        }
	        frag.loader = this.loaders[type] = new config.loader(config);
	        this.decrypturl = uri;
	        this.decryptkey = null;
	
	        var loaderContext = void 0,
	            loaderConfig = void 0,
	            loaderCallbacks = void 0;
	        loaderContext = { url: uri, frag: frag, responseType: 'arraybuffer' };
	        loaderConfig = { timeout: config.fragLoadingTimeOut, maxRetry: config.fragLoadingMaxRetry, retryDelay: config.fragLoadingRetryDelay, maxRetryDelay: config.fragLoadingMaxRetryTimeout };
	        loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this) };
	        frag.loader.load(loaderContext, loaderConfig, loaderCallbacks);
	      } else if (this.decryptkey) {
	        // we already loaded this key, return it
	        decryptdata.key = this.decryptkey;
	        this.hls.trigger(_events2.default.KEY_LOADED, { frag: frag });
	      }
	    }
	  }, {
	    key: 'loadsuccess',
	    value: function loadsuccess(response, stats, context) {
	      var frag = context.frag;
	      this.decryptkey = frag.decryptdata.key = new Uint8Array(response.data);
	      // detach fragment loader on load success
	      frag.loader = undefined;
	      this.loaders[frag.type] = undefined;
	      this.hls.trigger(_events2.default.KEY_LOADED, { frag: frag });
	    }
	  }, {
	    key: 'loaderror',
	    value: function loaderror(response, context) {
	      var frag = context.frag,
	          loader = frag.loader;
	      if (loader) {
	        loader.abort();
	      }
	      this.loaders[context.type] = undefined;
	      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.KEY_LOAD_ERROR, fatal: false, frag: frag, response: response });
	    }
	  }, {
	    key: 'loadtimeout',
	    value: function loadtimeout(stats, context) {
	      var frag = context.frag,
	          loader = frag.loader;
	      if (loader) {
	        loader.abort();
	      }
	      this.loaders[context.type] = undefined;
	      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.KEY_LOAD_TIMEOUT, fatal: false, frag: frag });
	    }
	  }]);
	
	  return KeyLoader;
	}(_eventHandler2.default);
	
	exports.default = KeyLoader;
	
	},{"30":30,"31":31,"32":32,"50":50}],40:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	laylist Loader
	
	
	var _urlToolkit = _dereq_(2);
	
	var _urlToolkit2 = _interopRequireDefault(_urlToolkit);
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _eventHandler = _dereq_(31);
	
	var _eventHandler2 = _interopRequireDefault(_eventHandler);
	
	var _errors = _dereq_(30);
	
	var _attrList = _dereq_(44);
	
	var _attrList2 = _interopRequireDefault(_attrList);
	
	var _logger = _dereq_(50);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	// https://regex101.com is your friend
	var MASTER_PLAYLIST_REGEX = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g;
	var MASTER_PLAYLIST_MEDIA_REGEX = /#EXT-X-MEDIA:(.*)/g;
	var LEVEL_PLAYLIST_REGEX_FAST = /#EXTINF:(\d*(?:\.\d+)?)(?:,(.*))?|(?!#)(\S.+)|#EXT-X-BYTERANGE: *(.+)|#EXT-X-PROGRAM-DATE-TIME:(.+)|#.*/g;
	var LEVEL_PLAYLIST_REGEX_SLOW = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)(.*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/;
	
	var LevelKey = function () {
	  function LevelKey() {
	    _classCallCheck(this, LevelKey);
	
	    this.method = null;
	    this.key = null;
	    this.iv = null;
	    this._uri = null;
	  }
	
	  _createClass(LevelKey, [{
	    key: 'uri',
	    get: function get() {
	      if (!this._uri && this.reluri) {
	        this._uri = _urlToolkit2.default.buildAbsoluteURL(this.baseuri, this.reluri, { alwaysNormalize: true });
	      }
	      return this._uri;
	    }
	  }]);
	
	  return LevelKey;
	}();
	
	var Fragment = function () {
	  function Fragment() {
	    _classCallCheck(this, Fragment);
	
	    this._url = null;
	    this._byteRange = null;
	    this._decryptdata = null;
	    this.tagList = [];
	  }
	
	  _createClass(Fragment, [{
	    key: 'createInitializationVector',
	
	
	    /**
	     * Utility method for parseLevelPlaylist to create an initialization vector for a given segment
	     * @returns {Uint8Array}
	     */
	    value: function createInitializationVector(segmentNumber) {
	      var uint8View = new Uint8Array(16);
	
	      for (var i = 12; i < 16; i++) {
	        uint8View[i] = segmentNumber >> 8 * (15 - i) & 0xff;
	      }
	
	      return uint8View;
	    }
	
	    /**
	     * Utility method for parseLevelPlaylist to get a fragment's decryption data from the currently parsed encryption key data
	     * @param levelkey - a playlist's encryption info
	     * @param segmentNumber - the fragment's segment number
	     * @returns {*} - an object to be applied as a fragment's decryptdata
	     */
	
	  }, {
	    key: 'fragmentDecryptdataFromLevelkey',
	    value: function fragmentDecryptdataFromLevelkey(levelkey, segmentNumber) {
	      var decryptdata = levelkey;
	
	      if (levelkey && levelkey.method && levelkey.uri && !levelkey.iv) {
	        decryptdata = new LevelKey();
	        decryptdata.method = levelkey.method;
	        decryptdata.baseuri = levelkey.baseuri;
	        decryptdata.reluri = levelkey.reluri;
	        decryptdata.iv = this.createInitializationVector(segmentNumber);
	      }
	
	      return decryptdata;
	    }
	  }, {
	    key: 'cloneObj',
	    value: function cloneObj(obj) {
	      return JSON.parse(JSON.stringify(obj));
	    }
	  }, {
	    key: 'url',
	    get: function get() {
	      if (!this._url && this.relurl) {
	        this._url = _urlToolkit2.default.buildAbsoluteURL(this.baseurl, this.relurl, { alwaysNormalize: true });
	      }
	      return this._url;
	    },
	    set: function set(value) {
	      this._url = value;
	    }
	  }, {
	    key: 'programDateTime',
	    get: function get() {
	      if (!this._programDateTime && this.rawProgramDateTime) {
	        this._programDateTime = new Date(Date.parse(this.rawProgramDateTime));
	      }
	      return this._programDateTime;
	    }
	  }, {
	    key: 'byteRange',
	    get: function get() {
	      if (!this._byteRange) {
	        var byteRange = this._byteRange = [];
	        if (this.rawByteRange) {
	          var params = this.rawByteRange.split('@', 2);
	          if (params.length === 1) {
	            var lastByteRangeEndOffset = this.lastByteRangeEndOffset;
	            byteRange[0] = lastByteRangeEndOffset ? lastByteRangeEndOffset : 0;
	          } else {
	            byteRange[0] = parseInt(params[1]);
	          }
	          byteRange[1] = parseInt(params[0]) + byteRange[0];
	        }
	      }
	      return this._byteRange;
	    }
	  }, {
	    key: 'byteRangeStartOffset',
	    get: function get() {
	      return this.byteRange[0];
	    }
	  }, {
	    key: 'byteRangeEndOffset',
	    get: function get() {
	      return this.byteRange[1];
	    }
	  }, {
	    key: 'decryptdata',
	    get: function get() {
	      if (!this._decryptdata) {
	        this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn);
	      }
	      return this._decryptdata;
	    }
	  }]);
	
	  return Fragment;
	}();
	
	var PlaylistLoader = function (_EventHandler) {
	  _inherits(PlaylistLoader, _EventHandler);
	
	  function PlaylistLoader(hls) {
	    _classCallCheck(this, PlaylistLoader);
	
	    var _this = _possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this, hls, _events2.default.MANIFEST_LOADING, _events2.default.LEVEL_LOADING, _events2.default.AUDIO_TRACK_LOADING, _events2.default.SUBTITLE_TRACK_LOADING));
	
	    _this.loaders = {};
	    return _this;
	  }
	
	  _createClass(PlaylistLoader, [{
	    key: 'destroy',
	    value: function destroy() {
	      for (var loaderName in this.loaders) {
	        var loader = this.loaders[loaderName];
	        if (loader) {
	          loader.destroy();
	        }
	      }
	      this.loaders = {};
	      _eventHandler2.default.prototype.destroy.call(this);
	    }
	  }, {
	    key: 'onManifestLoading',
	    value: function onManifestLoading(data) {
	      this.load(data.url, { type: 'manifest' });
	    }
	  }, {
	    key: 'onLevelLoading',
	    value: function onLevelLoading(data) {
	      this.load(data.url, { type: 'level', level: data.level, id: data.id });
	    }
	  }, {
	    key: 'onAudioTrackLoading',
	    value: function onAudioTrackLoading(data) {
	      this.load(data.url, { type: 'audioTrack', id: data.id });
	    }
	  }, {
	    key: 'onSubtitleTrackLoading',
	    value: function onSubtitleTrackLoading(data) {
	      this.load(data.url, { type: 'subtitleTrack', id: data.id });
	    }
	  }, {
	    key: 'load',
	    value: function load(url, context) {
	      var loader = this.loaders[context.type];
	      if (loader) {
	        var loaderContext = loader.context;
	        if (loaderContext && loaderContext.url === url) {
	          _logger.logger.trace('playlist request ongoing');
	          return;
	        } else {
	          _logger.logger.warn('abort previous loader for type:' + context.type);
	          loader.abort();
	        }
	      }
	      var config = this.hls.config,
	          retry = void 0,
	          timeout = void 0,
	          retryDelay = void 0,
	          maxRetryDelay = void 0;
	      if (context.type === 'manifest') {
	        retry = config.manifestLoadingMaxRetry;
	        timeout = config.manifestLoadingTimeOut;
	        retryDelay = config.manifestLoadingRetryDelay;
	        maxRetryDelay = config.manifestLoadingMaxRetryTimeout;
	      } else {
	        retry = config.levelLoadingMaxRetry;
	        timeout = config.levelLoadingTimeOut;
	        retryDelay = config.levelLoadingRetryDelay;
	        maxRetryDelay = config.levelLoadingMaxRetryTimeout;
	        _logger.logger.log('loading playlist for ' + context.type + ' ' + (context.level || context.id));
	      }
	      loader = this.loaders[context.type] = context.loader = typeof config.pLoader !== 'undefined' ? new config.pLoader(config) : new config.loader(config);
	      context.url = url;
	      context.responseType = '';
	
	      var loaderConfig = void 0,
	          loaderCallbacks = void 0;
	      loaderConfig = { timeout: timeout, maxRetry: retry, retryDelay: retryDelay, maxRetryDelay: maxRetryDelay };
	      loaderCallbacks = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this) };
	      loader.load(context, loaderConfig, loaderCallbacks);
	    }
	  }, {
	    key: 'resolve',
	    value: function resolve(url, baseUrl) {
	      return _urlToolkit2.default.buildAbsoluteURL(baseUrl, url, { alwaysNormalize: true });
	    }
	  }, {
	    key: 'parseMasterPlaylist',
	    value: function parseMasterPlaylist(string, baseurl) {
	      var levels = [],
	          result = void 0;
	      MASTER_PLAYLIST_REGEX.lastIndex = 0;
	      while ((result = MASTER_PLAYLIST_REGEX.exec(string)) != null) {
	        var level = {};
	
	        var attrs = level.attrs = new _attrList2.default(result[1]);
	        level.url = this.resolve(result[2], baseurl);
	
	        var resolution = attrs.decimalResolution('RESOLUTION');
	        if (resolution) {
	          level.width = resolution.width;
	          level.height = resolution.height;
	        }
	        level.bitrate = attrs.decimalInteger('AVERAGE-BANDWIDTH') || attrs.decimalInteger('BANDWIDTH');
	        level.name = attrs.NAME;
	
	        var codecs = attrs.CODECS;
	        if (codecs) {
	          codecs = codecs.split(/[ ,]+/);
	          for (var i = 0; i < codecs.length; i++) {
	            var codec = codecs[i];
	            if (codec.indexOf('avc1') !== -1) {
	              level.videoCodec = this.avc1toavcoti(codec);
	            } else {
	              level.audioCodec = codec;
	            }
	          }
	        }
	
	        levels.push(level);
	      }
	      return levels;
	    }
	  }, {
	    key: 'parseMasterPlaylistMedia',
	    value: function parseMasterPlaylistMedia(string, baseurl, type) {
	      var result = void 0,
	          medias = [],
	          id = 0;
	      MASTER_PLAYLIST_MEDIA_REGEX.lastIndex = 0;
	      while ((result = MASTER_PLAYLIST_MEDIA_REGEX.exec(string)) != null) {
	        var media = {};
	        var attrs = new _attrList2.default(result[1]);
	        if (attrs.TYPE === type) {
	          media.groupId = attrs['GROUP-ID'];
	          media.name = attrs.NAME;
	          media.type = type;
	          media.default = attrs.DEFAULT === 'YES';
	          media.autoselect = attrs.AUTOSELECT === 'YES';
	          media.forced = attrs.FORCED === 'YES';
	          if (attrs.URI) {
	            media.url = this.resolve(attrs.URI, baseurl);
	          }
	          media.lang = attrs.LANGUAGE;
	          if (!media.name) {
	            media.name = media.lang;
	          }
	          media.id = id++;
	          medias.push(media);
	        }
	      }
	      return medias;
	    }
	  }, {
	    key: 'avc1toavcoti',
	    value: function avc1toavcoti(codec) {
	      var result,
	          avcdata = codec.split('.');
	      if (avcdata.length > 2) {
	        result = avcdata.shift() + '.';
	        result += parseInt(avcdata.shift()).toString(16);
	        result += ('000' + parseInt(avcdata.shift()).toString(16)).substr(-4);
	      } else {
	        result = codec;
	      }
	      return result;
	    }
	  }, {
	    key: 'parseLevelPlaylist',
	    value: function parseLevelPlaylist(string, baseurl, id, type) {
	      var currentSN = 0,
	          totalduration = 0,
	          level = { type: null, version: null, url: baseurl, fragments: [], live: true, startSN: 0 },
	          levelkey = new LevelKey(),
	          cc = 0,
	          prevFrag = null,
	          frag = new Fragment(),
	          result,
	          i;
	
	      LEVEL_PLAYLIST_REGEX_FAST.lastIndex = 0;
	
	      while ((result = LEVEL_PLAYLIST_REGEX_FAST.exec(string)) !== null) {
	        var duration = result[1];
	        if (duration) {
	          // INF
	          frag.duration = parseFloat(duration);
	          // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939
	          var title = (' ' + result[2]).slice(1);
	          frag.title = title ? title : null;
	          frag.tagList.push(title ? ['INF', duration, title] : ['INF', duration]);
	        } else if (result[3]) {
	          // url
	          if (!isNaN(frag.duration)) {
	            var sn = currentSN++;
	            frag.type = type;
	            frag.start = totalduration;
	            frag.levelkey = levelkey;
	            frag.sn = sn;
	            frag.level = id;
	            frag.cc = cc;
	            frag.baseurl = baseurl;
	            // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939
	            frag.relurl = (' ' + result[3]).slice(1);
	
	            level.fragments.push(frag);
	            prevFrag = frag;
	            totalduration += frag.duration;
	
	            frag = new Fragment();
	          }
	        } else if (result[4]) {
	          // X-BYTERANGE
	          frag.rawByteRange = (' ' + result[4]).slice(1);
	          if (prevFrag) {
	            var lastByteRangeEndOffset = prevFrag.byteRangeEndOffset;
	            if (lastByteRangeEndOffset) {
	              frag.lastByteRangeEndOffset = lastByteRangeEndOffset;
	            }
	          }
	        } else if (result[5]) {
	          // PROGRAM-DATE-TIME
	          // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939
	          frag.rawProgramDateTime = (' ' + result[5]).slice(1);
	          frag.tagList.push(['PROGRAM-DATE-TIME', frag.rawProgramDateTime]);
	        } else {
	          result = result[0].match(LEVEL_PLAYLIST_REGEX_SLOW);
	          for (i = 1; i < result.length; i++) {
	            if (result[i] !== undefined) {
	              break;
	            }
	          }
	
	          // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939
	          var value1 = (' ' + result[i + 1]).slice(1);
	          var value2 = (' ' + result[i + 2]).slice(1);
	
	          switch (result[i]) {
	            case '#':
	              frag.tagList.push(value2 ? [value1, value2] : [value1]);
	              break;
	            case 'PLAYLIST-TYPE':
	              level.type = value1.toUpperCase();
	              break;
	            case 'MEDIA-SEQUENCE':
	              currentSN = level.startSN = parseInt(value1);
	              break;
	            case 'TARGETDURATION':
	              level.targetduration = parseFloat(value1);
	              break;
	            case 'VERSION':
	              level.version = parseInt(value1);
	              break;
	            case 'EXTM3U':
	              break;
	            case 'ENDLIST':
	              level.live = false;
	              break;
	            case 'DIS':
	              cc++;
	              frag.tagList.push(['DIS']);
	              break;
	            case 'DISCONTINUITY-SEQ':
	              cc = parseInt(value1);
	              break;
	            case 'KEY':
	              // https://tools.ietf.org/html/draft-pantos-http-live-streaming-08#section-3.4.4
	              var decryptparams = value1;
	              var keyAttrs = new _attrList2.default(decryptparams);
	              var decryptmethod = keyAttrs.enumeratedString('METHOD'),
	                  decrypturi = keyAttrs.URI,
	                  decryptiv = keyAttrs.hexadecimalInteger('IV');
	              if (decryptmethod) {
	                levelkey = new LevelKey();
	                if (decrypturi && ['AES-128', 'SAMPLE-AES'].indexOf(decryptmethod) >= 0) {
	                  levelkey.method = decryptmethod;
	                  // URI to get the key
	                  levelkey.baseuri = baseurl;
	                  levelkey.reluri = decrypturi;
	                  levelkey.key = null;
	                  // Initialization Vector (IV)
	                  levelkey.iv = decryptiv;
	                }
	              }
	              break;
	            case 'START':
	              var startParams = value1;
	              var startAttrs = new _attrList2.default(startParams);
	              var startTimeOffset = startAttrs.decimalFloatingPoint('TIME-OFFSET');
	              //TIME-OFFSET can be 0
	              if (!isNaN(startTimeOffset)) {
	                level.startTimeOffset = startTimeOffset;
	              }
	              break;
	            case 'MAP':
	              var mapAttrs = new _attrList2.default(value1);
	              frag.relurl = mapAttrs.URI;
	              frag.rawByteRange = mapAttrs.BYTERANGE;
	              frag.baseurl = baseurl;
	              frag.level = id;
	              frag.type = type;
	              frag.sn = 'initSegment';
	              level.initSegment = frag;
	              frag = new Fragment();
	              break;
	            default:
	              _logger.logger.warn('line parsed but not handled: ' + result);
	              break;
	          }
	        }
	      }
	      frag = prevFrag;
	      //logger.log('found ' + level.fragments.length + ' fragments');
	      if (frag && !frag.relurl) {
	        level.fragments.pop();
	        totalduration -= frag.duration;
	      }
	      level.totalduration = totalduration;
	      level.averagetargetduration = totalduration / level.fragments.length;
	      level.endSN = currentSN - 1;
	      return level;
	    }
	  }, {
	    key: 'loadsuccess',
	    value: function loadsuccess(response, stats, context) {
	      var string = response.data,
	          url = response.url,
	          type = context.type,
	          id = context.id,
	          level = context.level,
	          hls = this.hls;
	
	      this.loaders[type] = undefined;
	      // responseURL not supported on some browsers (it is used to detect URL redirection)
	      // data-uri mode also not supported (but no need to detect redirection)
	      if (url === undefined || url.indexOf('data:') === 0) {
	        // fallback to initial URL
	        url = context.url;
	      }
	      stats.tload = performance.now();
	      //stats.mtime = new Date(target.getResponseHeader('Last-Modified'));
	      if (string.indexOf('#EXTM3U') === 0) {
	        if (string.indexOf('#EXTINF:') > 0) {
	          var isLevel = type !== 'audioTrack' && type !== 'subtitleTrack',
	              levelId = !isNaN(level) ? level : !isNaN(id) ? id : 0,
	              levelDetails = this.parseLevelPlaylist(string, url, levelId, type === 'audioTrack' ? 'audio' : type === 'subtitleTrack' ? 'subtitle' : 'main');
	          levelDetails.tload = stats.tload;
	          if (type === 'manifest') {
	            // first request, stream manifest (no master playlist), fire manifest loaded event with level details
	            hls.trigger(_events2.default.MANIFEST_LOADED, { levels: [{ url: url, details: levelDetails }], audioTracks: [], url: url, stats: stats });
	          }
	          stats.tparsed = performance.now();
	          if (levelDetails.targetduration) {
	            if (isLevel) {
	              hls.trigger(_events2.default.LEVEL_LOADED, { details: levelDetails, level: level || 0, id: id || 0, stats: stats });
	            } else {
	              if (type === 'audioTrack') {
	                hls.trigger(_events2.default.AUDIO_TRACK_LOADED, { details: levelDetails, id: id, stats: stats });
	              } else if (type === 'subtitleTrack') {
	                hls.trigger(_events2.default.SUBTITLE_TRACK_LOADED, { details: levelDetails, id: id, stats: stats });
	              }
	            }
	          } else {
	            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'invalid targetduration' });
	          }
	        } else {
	          var levels = this.parseMasterPlaylist(string, url);
	          // multi level playlist, parse level info
	          if (levels.length) {
	            var audioTracks = this.parseMasterPlaylistMedia(string, url, 'AUDIO');
	            var subtitles = this.parseMasterPlaylistMedia(string, url, 'SUBTITLES');
	            if (audioTracks.length) {
	              // check if we have found an audio track embedded in main playlist (audio track without URI attribute)
	              var embeddedAudioFound = false;
	              audioTracks.forEach(function (audioTrack) {
	                if (!audioTrack.url) {
	                  embeddedAudioFound = true;
	                }
	              });
	              // if no embedded audio track defined, but audio codec signaled in quality level, we need to signal this main audio track
	              // this could happen with playlists with alt audio rendition in which quality levels (main) contains both audio+video. but with mixed audio track not signaled
	              if (embeddedAudioFound === false && levels[0].audioCodec && !levels[0].attrs.AUDIO) {
	                _logger.logger.log('audio codec signaled in quality level, but no embedded audio track signaled, create one');
	                audioTracks.unshift({ type: 'main', name: 'main' });
	              }
	            }
	            hls.trigger(_events2.default.MANIFEST_LOADED, { levels: levels, audioTracks: audioTracks, subtitles: subtitles, url: url, stats: stats });
	          } else {
	            hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no level found in manifest' });
	          }
	        }
	      } else {
	        hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: _errors.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: true, url: url, reason: 'no EXTM3U delimiter' });
	      }
	    }
	  }, {
	    key: 'loaderror',
	    value: function loaderror(response, context) {
	      var details,
	          fatal,
	          loader = context.loader;
	      switch (context.type) {
	        case 'manifest':
	          details = _errors.ErrorDetails.MANIFEST_LOAD_ERROR;
	          fatal = true;
	          break;
	        case 'level':
	          details = _errors.ErrorDetails.LEVEL_LOAD_ERROR;
	          fatal = false;
	          break;
	        case 'audioTrack':
	          details = _errors.ErrorDetails.AUDIO_TRACK_LOAD_ERROR;
	          fatal = false;
	          break;
	      }
	      if (loader) {
	        loader.abort();
	        this.loaders[context.type] = undefined;
	      }
	      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: loader.url, loader: loader, response: response, context: context });
	    }
	  }, {
	    key: 'loadtimeout',
	    value: function loadtimeout(stats, context) {
	      var details,
	          fatal,
	          loader = context.loader;
	      switch (context.type) {
	        case 'manifest':
	          details = _errors.ErrorDetails.MANIFEST_LOAD_TIMEOUT;
	          fatal = true;
	          break;
	        case 'level':
	          details = _errors.ErrorDetails.LEVEL_LOAD_TIMEOUT;
	          fatal = false;
	          break;
	        case 'audioTrack':
	          details = _errors.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT;
	          fatal = false;
	          break;
	      }
	      if (loader) {
	        loader.abort();
	        this.loaders[context.type] = undefined;
	      }
	      this.hls.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.NETWORK_ERROR, details: details, fatal: fatal, url: loader.url, loader: loader, context: context });
	    }
	  }]);
	
	  return PlaylistLoader;
	}(_eventHandler2.default);
	
	exports.default = PlaylistLoader;
	
	},{"2":2,"30":30,"31":31,"32":32,"44":44,"50":50}],41:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Generate MP4 Box
	*/
	
	//import Hex from '../utils/hex';
	
	var UINT32_MAX = Math.pow(2, 32) - 1;
	
	var MP4 = function () {
	  function MP4() {
	    _classCallCheck(this, MP4);
	  }
	
	  _createClass(MP4, null, [{
	    key: 'init',
	    value: function init() {
	      MP4.types = {
	        avc1: [], // codingname
	        avcC: [],
	        btrt: [],
	        dinf: [],
	        dref: [],
	        esds: [],
	        ftyp: [],
	        hdlr: [],
	        mdat: [],
	        mdhd: [],
	        mdia: [],
	        mfhd: [],
	        minf: [],
	        moof: [],
	        moov: [],
	        mp4a: [],
	        '.mp3': [],
	        mvex: [],
	        mvhd: [],
	        pasp: [],
	        sdtp: [],
	        stbl: [],
	        stco: [],
	        stsc: [],
	        stsd: [],
	        stsz: [],
	        stts: [],
	        tfdt: [],
	        tfhd: [],
	        traf: [],
	        trak: [],
	        trun: [],
	        trex: [],
	        tkhd: [],
	        vmhd: [],
	        smhd: []
	      };
	
	      var i;
	      for (i in MP4.types) {
	        if (MP4.types.hasOwnProperty(i)) {
	          MP4.types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];
	        }
	      }
	
	      var videoHdlr = new Uint8Array([0x00, // version 0
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, 0x00, 0x00, // pre_defined
	      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'
	      ]);
	
	      var audioHdlr = new Uint8Array([0x00, // version 0
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, 0x00, 0x00, // pre_defined
	      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'
	      ]);
	
	      MP4.HDLR_TYPES = {
	        'video': videoHdlr,
	        'audio': audioHdlr
	      };
	
	      var dref = new Uint8Array([0x00, // version 0
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, 0x00, 0x01, // entry_count
	      0x00, 0x00, 0x00, 0x0c, // entry_size
	      0x75, 0x72, 0x6c, 0x20, // 'url' type
	      0x00, // version 0
	      0x00, 0x00, 0x01 // entry_flags
	      ]);
	
	      var stco = new Uint8Array([0x00, // version
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, 0x00, 0x00 // entry_count
	      ]);
	
	      MP4.STTS = MP4.STSC = MP4.STCO = stco;
	
	      MP4.STSZ = new Uint8Array([0x00, // version
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, 0x00, 0x00, // sample_size
	      0x00, 0x00, 0x00, 0x00]);
	      MP4.VMHD = new Uint8Array([0x00, // version
	      0x00, 0x00, 0x01, // flags
	      0x00, 0x00, // graphicsmode
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor
	      ]);
	      MP4.SMHD = new Uint8Array([0x00, // version
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, // balance
	      0x00, 0x00 // reserved
	      ]);
	
	      MP4.STSD = new Uint8Array([0x00, // version 0
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, 0x00, 0x01]); // entry_count
	
	      var majorBrand = new Uint8Array([105, 115, 111, 109]); // isom
	      var avc1Brand = new Uint8Array([97, 118, 99, 49]); // avc1
	      var minorVersion = new Uint8Array([0, 0, 0, 1]);
	
	      MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);
	      MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));
	    }
	  }, {
	    key: 'box',
	    value: function box(type) {
	      var payload = Array.prototype.slice.call(arguments, 1),
	          size = 8,
	          i = payload.length,
	          len = i,
	          result;
	      // calculate the total size we need to allocate
	      while (i--) {
	        size += payload[i].byteLength;
	      }
	      result = new Uint8Array(size);
	      result[0] = size >> 24 & 0xff;
	      result[1] = size >> 16 & 0xff;
	      result[2] = size >> 8 & 0xff;
	      result[3] = size & 0xff;
	      result.set(type, 4);
	      // copy the payload into the result
	      for (i = 0, size = 8; i < len; i++) {
	        // copy payload[i] array @ offset size
	        result.set(payload[i], size);
	        size += payload[i].byteLength;
	      }
	      return result;
	    }
	  }, {
	    key: 'hdlr',
	    value: function hdlr(type) {
	      return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);
	    }
	  }, {
	    key: 'mdat',
	    value: function mdat(data) {
	      return MP4.box(MP4.types.mdat, data);
	    }
	  }, {
	    key: 'mdhd',
	    value: function mdhd(timescale, duration) {
	      duration *= timescale;
	      var upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));
	      var lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));
	      return MP4.box(MP4.types.mdhd, new Uint8Array([0x01, // version 1
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time
	      timescale >> 24 & 0xFF, timescale >> 16 & 0xFF, timescale >> 8 & 0xFF, timescale & 0xFF, // timescale
	      upperWordDuration >> 24, upperWordDuration >> 16 & 0xFF, upperWordDuration >> 8 & 0xFF, upperWordDuration & 0xFF, lowerWordDuration >> 24, lowerWordDuration >> 16 & 0xFF, lowerWordDuration >> 8 & 0xFF, lowerWordDuration & 0xFF, 0x55, 0xc4, // 'und' language (undetermined)
	      0x00, 0x00]));
	    }
	  }, {
	    key: 'mdia',
	    value: function mdia(track) {
	      return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));
	    }
	  }, {
	    key: 'mfhd',
	    value: function mfhd(sequenceNumber) {
	      return MP4.box(MP4.types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags
	      sequenceNumber >> 24, sequenceNumber >> 16 & 0xFF, sequenceNumber >> 8 & 0xFF, sequenceNumber & 0xFF]));
	    }
	  }, {
	    key: 'minf',
	    value: function minf(track) {
	      if (track.type === 'audio') {
	        return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));
	      } else {
	        return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));
	      }
	    }
	  }, {
	    key: 'moof',
	    value: function moof(sn, baseMediaDecodeTime, track) {
	      return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track, baseMediaDecodeTime));
	    }
	    /**
	     * @param tracks... (optional) {array} the tracks associated with this movie
	     */
	
	  }, {
	    key: 'moov',
	    value: function moov(tracks) {
	      var i = tracks.length,
	          boxes = [];
	
	      while (i--) {
	        boxes[i] = MP4.trak(tracks[i]);
	      }
	
	      return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)].concat(boxes).concat(MP4.mvex(tracks)));
	    }
	  }, {
	    key: 'mvex',
	    value: function mvex(tracks) {
	      var i = tracks.length,
	          boxes = [];
	
	      while (i--) {
	        boxes[i] = MP4.trex(tracks[i]);
	      }
	      return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));
	    }
	  }, {
	    key: 'mvhd',
	    value: function mvhd(timescale, duration) {
	      duration *= timescale;
	      var upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));
	      var lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));
	      var bytes = new Uint8Array([0x01, // version 1
	      0x00, 0x00, 0x00, // flags
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time
	      timescale >> 24 & 0xFF, timescale >> 16 & 0xFF, timescale >> 8 & 0xFF, timescale & 0xFF, // timescale
	      upperWordDuration >> 24, upperWordDuration >> 16 & 0xFF, upperWordDuration >> 8 & 0xFF, upperWordDuration & 0xFF, lowerWordDuration >> 24, lowerWordDuration >> 16 & 0xFF, lowerWordDuration >> 8 & 0xFF, lowerWordDuration & 0xFF, 0x00, 0x01, 0x00, 0x00, // 1.0 rate
	      0x01, 0x00, // 1.0 volume
	      0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined
	      0xff, 0xff, 0xff, 0xff // next_track_ID
	      ]);
	      return MP4.box(MP4.types.mvhd, bytes);
	    }
	  }, {
	    key: 'sdtp',
	    value: function sdtp(track) {
	      var samples = track.samples || [],
	          bytes = new Uint8Array(4 + samples.length),
	          flags,
	          i;
	      // leave the full box header (4 bytes) all zero
	      // write the sample table
	      for (i = 0; i < samples.length; i++) {
	        flags = samples[i].flags;
	        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;
	      }
	
	      return MP4.box(MP4.types.sdtp, bytes);
	    }
	  }, {
	    key: 'stbl',
	    value: function stbl(track) {
	      return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));
	    }
	  }, {
	    key: 'avc1',
	    value: function avc1(track) {
	      var sps = [],
	          pps = [],
	          i,
	          data,
	          len;
	      // assemble the SPSs
	
	      for (i = 0; i < track.sps.length; i++) {
	        data = track.sps[i];
	        len = data.byteLength;
	        sps.push(len >>> 8 & 0xFF);
	        sps.push(len & 0xFF);
	        sps = sps.concat(Array.prototype.slice.call(data)); // SPS
	      }
	
	      // assemble the PPSs
	      for (i = 0; i < track.pps.length; i++) {
	        data = track.pps[i];
	        len = data.byteLength;
	        pps.push(len >>> 8 & 0xFF);
	        pps.push(len & 0xFF);
	        pps = pps.concat(Array.prototype.slice.call(data));
	      }
	
	      var avcc = MP4.box(MP4.types.avcC, new Uint8Array([0x01, // version
	      sps[3], // profile
	      sps[4], // profile compat
	      sps[5], // level
	      0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes
	      0xE0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets
	      ].concat(sps).concat([track.pps.length // numOfPictureParameterSets
	      ]).concat(pps))),
	          // "PPS"
	      width = track.width,
	          height = track.height,
	          hSpacing = track.pixelRatio[0],
	          vSpacing = track.pixelRatio[1];
	      //console.log('avcc:' + Hex.hexDump(avcc));
	      return MP4.box(MP4.types.avc1, new Uint8Array([0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, // reserved
	      0x00, 0x01, // data_reference_index
	      0x00, 0x00, // pre_defined
	      0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined
	      width >> 8 & 0xFF, width & 0xff, // width
	      height >> 8 & 0xFF, height & 0xff, // height
	      0x00, 0x48, 0x00, 0x00, // horizresolution
	      0x00, 0x48, 0x00, 0x00, // vertresolution
	      0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, 0x01, // frame_count
	      0x12, 0x64, 0x61, 0x69, 0x6C, //dailymotion/hls.js
	      0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname
	      0x00, 0x18, // depth = 24
	      0x11, 0x11]), // pre_defined = -1
	      avcc, MP4.box(MP4.types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB
	      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate
	      0x00, 0x2d, 0xc6, 0xc0])), // avgBitrate
	      MP4.box(MP4.types.pasp, new Uint8Array([hSpacing >> 24, // hSpacing
	      hSpacing >> 16 & 0xFF, hSpacing >> 8 & 0xFF, hSpacing & 0xFF, vSpacing >> 24, // vSpacing
	      vSpacing >> 16 & 0xFF, vSpacing >> 8 & 0xFF, vSpacing & 0xFF])));
	    }
	  }, {
	    key: 'esds',
	    value: function esds(track) {
	      var configlen = track.config.length;
	      return new Uint8Array([0x00, // version 0
	      0x00, 0x00, 0x00, // flags
	
	      0x03, // descriptor_type
	      0x17 + configlen, // length
	      0x00, 0x01, //es_id
	      0x00, // stream_priority
	
	      0x04, // descriptor_type
	      0x0f + configlen, // length
	      0x40, //codec : mpeg4_audio
	      0x15, // stream_type
	      0x00, 0x00, 0x00, // buffer_size
	      0x00, 0x00, 0x00, 0x00, // maxBitrate
	      0x00, 0x00, 0x00, 0x00, // avgBitrate
	
	      0x05 // descriptor_type
	      ].concat([configlen]).concat(track.config).concat([0x06, 0x01, 0x02])); // GASpecificConfig)); // length + audio config descriptor
	    }
	  }, {
	    key: 'mp4a',
	    value: function mp4a(track) {
	      var samplerate = track.samplerate;
	      return MP4.box(MP4.types.mp4a, new Uint8Array([0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, // reserved
	      0x00, 0x01, // data_reference_index
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, track.channelCount, // channelcount
	      0x00, 0x10, // sampleSize:16bits
	      0x00, 0x00, 0x00, 0x00, // reserved2
	      samplerate >> 8 & 0xFF, samplerate & 0xff, //
	      0x00, 0x00]), MP4.box(MP4.types.esds, MP4.esds(track)));
	    }
	  }, {
	    key: 'mp3',
	    value: function mp3(track) {
	      var samplerate = track.samplerate;
	      return MP4.box(MP4.types['.mp3'], new Uint8Array([0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, 0x00, // reserved
	      0x00, 0x01, // data_reference_index
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, track.channelCount, // channelcount
	      0x00, 0x10, // sampleSize:16bits
	      0x00, 0x00, 0x00, 0x00, // reserved2
	      samplerate >> 8 & 0xFF, samplerate & 0xff, //
	      0x00, 0x00]));
	    }
	  }, {
	    key: 'stsd',
	    value: function stsd(track) {
	      if (track.type === 'audio') {
	        if (!track.isAAC && track.codec === 'mp3') {
	          return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp3(track));
	        }
	        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));
	      } else {
	        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));
	      }
	    }
	  }, {
	    key: 'tkhd',
	    value: function tkhd(track) {
	      var id = track.id,
	          duration = track.duration * track.timescale,
	          width = track.width,
	          height = track.height,
	          upperWordDuration = Math.floor(duration / (UINT32_MAX + 1)),
	          lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));
	      return MP4.box(MP4.types.tkhd, new Uint8Array([0x01, // version 1
	      0x00, 0x00, 0x07, // flags
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time
	      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time
	      id >> 24 & 0xFF, id >> 16 & 0xFF, id >> 8 & 0xFF, id & 0xFF, // track_ID
	      0x00, 0x00, 0x00, 0x00, // reserved
	      upperWordDuration >> 24, upperWordDuration >> 16 & 0xFF, upperWordDuration >> 8 & 0xFF, upperWordDuration & 0xFF, lowerWordDuration >> 24, lowerWordDuration >> 16 & 0xFF, lowerWordDuration >> 8 & 0xFF, lowerWordDuration & 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved
	      0x00, 0x00, // layer
	      0x00, 0x00, // alternate_group
	      0x00, 0x00, // non-audio track volume
	      0x00, 0x00, // reserved
	      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix
	      width >> 8 & 0xFF, width & 0xFF, 0x00, 0x00, // width
	      height >> 8 & 0xFF, height & 0xFF, 0x00, 0x00 // height
	      ]));
	    }
	  }, {
	    key: 'traf',
	    value: function traf(track, baseMediaDecodeTime) {
	      var sampleDependencyTable = MP4.sdtp(track),
	          id = track.id,
	          upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1)),
	          lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1));
	      return MP4.box(MP4.types.traf, MP4.box(MP4.types.tfhd, new Uint8Array([0x00, // version 0
	      0x00, 0x00, 0x00, // flags
	      id >> 24, id >> 16 & 0XFF, id >> 8 & 0XFF, id & 0xFF])), MP4.box(MP4.types.tfdt, new Uint8Array([0x01, // version 1
	      0x00, 0x00, 0x00, // flags
	      upperWordBaseMediaDecodeTime >> 24, upperWordBaseMediaDecodeTime >> 16 & 0XFF, upperWordBaseMediaDecodeTime >> 8 & 0XFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >> 24, lowerWordBaseMediaDecodeTime >> 16 & 0XFF, lowerWordBaseMediaDecodeTime >> 8 & 0XFF, lowerWordBaseMediaDecodeTime & 0xFF])), MP4.trun(track, sampleDependencyTable.length + 16 + // tfhd
	      20 + // tfdt
	      8 + // traf header
	      16 + // mfhd
	      8 + // moof header
	      8), // mdat header
	      sampleDependencyTable);
	    }
	
	    /**
	     * Generate a track box.
	     * @param track {object} a track definition
	     * @return {Uint8Array} the track box
	     */
	
	  }, {
	    key: 'trak',
	    value: function trak(track) {
	      track.duration = track.duration || 0xffffffff;
	      return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));
	    }
	  }, {
	    key: 'trex',
	    value: function trex(track) {
	      var id = track.id;
	      return MP4.box(MP4.types.trex, new Uint8Array([0x00, // version 0
	      0x00, 0x00, 0x00, // flags
	      id >> 24, id >> 16 & 0XFF, id >> 8 & 0XFF, id & 0xFF, // track_ID
	      0x00, 0x00, 0x00, 0x01, // default_sample_description_index
	      0x00, 0x00, 0x00, 0x00, // default_sample_duration
	      0x00, 0x00, 0x00, 0x00, // default_sample_size
	      0x00, 0x01, 0x00, 0x01 // default_sample_flags
	      ]));
	    }
	  }, {
	    key: 'trun',
	    value: function trun(track, offset) {
	      var samples = track.samples || [],
	          len = samples.length,
	          arraylen = 12 + 16 * len,
	          array = new Uint8Array(arraylen),
	          i,
	          sample,
	          duration,
	          size,
	          flags,
	          cts;
	      offset += 8 + arraylen;
	      array.set([0x00, // version 0
	      0x00, 0x0f, 0x01, // flags
	      len >>> 24 & 0xFF, len >>> 16 & 0xFF, len >>> 8 & 0xFF, len & 0xFF, // sample_count
	      offset >>> 24 & 0xFF, offset >>> 16 & 0xFF, offset >>> 8 & 0xFF, offset & 0xFF // data_offset
	      ], 0);
	      for (i = 0; i < len; i++) {
	        sample = samples[i];
	        duration = sample.duration;
	        size = sample.size;
	        flags = sample.flags;
	        cts = sample.cts;
	        array.set([duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, // sample_duration
	        size >>> 24 & 0xFF, size >>> 16 & 0xFF, size >>> 8 & 0xFF, size & 0xFF, // sample_size
	        flags.isLeading << 2 | flags.dependsOn, flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.paddingValue << 1 | flags.isNonSync, flags.degradPrio & 0xF0 << 8, flags.degradPrio & 0x0F, // sample_flags
	        cts >>> 24 & 0xFF, cts >>> 16 & 0xFF, cts >>> 8 & 0xFF, cts & 0xFF // sample_composition_time_offset
	        ], 12 + 16 * i);
	      }
	      return MP4.box(MP4.types.trun, array);
	    }
	  }, {
	    key: 'initSegment',
	    value: function initSegment(tracks) {
	      if (!MP4.types) {
	        MP4.init();
	      }
	      var movie = MP4.moov(tracks),
	          result;
	      result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);
	      result.set(MP4.FTYP);
	      result.set(movie, MP4.FTYP.byteLength);
	      return result;
	    }
	  }]);
	
	  return MP4;
	}();
	
	exports.default = MP4;
	
	},{}],42:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	fMP4 remuxer
	
	
	var _aac = _dereq_(33);
	
	var _aac2 = _interopRequireDefault(_aac);
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	var _logger = _dereq_(50);
	
	var _mp4Generator = _dereq_(41);
	
	var _mp4Generator2 = _interopRequireDefault(_mp4Generator);
	
	var _errors = _dereq_(30);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var MP4Remuxer = function () {
	  function MP4Remuxer(observer, config, typeSupported, vendor) {
	    _classCallCheck(this, MP4Remuxer);
	
	    this.observer = observer;
	    this.config = config;
	    this.typeSupported = typeSupported;
	    var userAgent = navigator.userAgent;
	    this.isSafari = vendor && vendor.indexOf('Apple') > -1 && userAgent && !userAgent.match('CriOS');
	    this.ISGenerated = false;
	  }
	
	  _createClass(MP4Remuxer, [{
	    key: 'destroy',
	    value: function destroy() {}
	  }, {
	    key: 'resetTimeStamp',
	    value: function resetTimeStamp(defaultTimeStamp) {
	      this._initPTS = this._initDTS = defaultTimeStamp;
	    }
	  }, {
	    key: 'resetInitSegment',
	    value: function resetInitSegment() {
	      this.ISGenerated = false;
	    }
	  }, {
	    key: 'remux',
	    value: function remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset) {
	      // generate Init Segment if needed
	      if (!this.ISGenerated) {
	        this.generateIS(audioTrack, videoTrack, timeOffset);
	      }
	
	      if (this.ISGenerated) {
	        // Purposefully remuxing audio before video, so that remuxVideo can use nextAudioPts, which is
	        // calculated in remuxAudio.
	        //logger.log('nb AAC samples:' + audioTrack.samples.length);
	        if (audioTrack.samples.length) {
	          var audioData = this.remuxAudio(audioTrack, timeOffset, contiguous, accurateTimeOffset);
	          //logger.log('nb AVC samples:' + videoTrack.samples.length);
	          if (videoTrack.samples.length) {
	            var audioTrackLength = void 0;
	            if (audioData) {
	              audioTrackLength = audioData.endPTS - audioData.startPTS;
	            }
	            this.remuxVideo(videoTrack, timeOffset, contiguous, audioTrackLength);
	          }
	        } else {
	          var videoData = void 0;
	          //logger.log('nb AVC samples:' + videoTrack.samples.length);
	          if (videoTrack.samples.length) {
	            videoData = this.remuxVideo(videoTrack, timeOffset, contiguous);
	          }
	          if (videoData && audioTrack.codec) {
	            this.remuxEmptyAudio(audioTrack, timeOffset, contiguous, videoData);
	          }
	        }
	      }
	      //logger.log('nb ID3 samples:' + audioTrack.samples.length);
	      if (id3Track.samples.length) {
	        this.remuxID3(id3Track, timeOffset);
	      }
	      //logger.log('nb ID3 samples:' + audioTrack.samples.length);
	      if (textTrack.samples.length) {
	        this.remuxText(textTrack, timeOffset);
	      }
	      //notify end of parsing
	      this.observer.trigger(_events2.default.FRAG_PARSED);
	    }
	  }, {
	    key: 'generateIS',
	    value: function generateIS(audioTrack, videoTrack, timeOffset) {
	      var observer = this.observer,
	          audioSamples = audioTrack.samples,
	          videoSamples = videoTrack.samples,
	          typeSupported = this.typeSupported,
	          container = 'audio/mp4',
	          tracks = {},
	          data = { tracks: tracks },
	          computePTSDTS = this._initPTS === undefined,
	          initPTS,
	          initDTS;
	
	      if (computePTSDTS) {
	        initPTS = initDTS = Infinity;
	      }
	      if (audioTrack.config && audioSamples.length) {
	        // let's use audio sampling rate as MP4 time scale.
	        // rationale is that there is a integer nb of audio frames per audio sample (1024 for AAC)
	        // using audio sampling rate here helps having an integer MP4 frame duration
	        // this avoids potential rounding issue and AV sync issue
	        audioTrack.timescale = audioTrack.samplerate;
	        _logger.logger.log('audio sampling rate : ' + audioTrack.samplerate);
	        if (!audioTrack.isAAC) {
	          if (typeSupported.mpeg) {
	            // Chrome and Safari
	            container = 'audio/mpeg';
	            audioTrack.codec = '';
	          } else if (typeSupported.mp3) {
	            // Firefox
	            audioTrack.codec = 'mp3';
	          }
	        }
	        tracks.audio = {
	          container: container,
	          codec: audioTrack.codec,
	          initSegment: !audioTrack.isAAC && typeSupported.mpeg ? new Uint8Array() : _mp4Generator2.default.initSegment([audioTrack]),
	          metadata: {
	            channelCount: audioTrack.channelCount
	          }
	        };
	        if (computePTSDTS) {
	          // remember first PTS of this demuxing context. for audio, PTS = DTS
	          initPTS = initDTS = audioSamples[0].pts - audioTrack.inputTimeScale * timeOffset;
	        }
	      }
	
	      if (videoTrack.sps && videoTrack.pps && videoSamples.length) {
	        // let's use input time scale as MP4 video timescale
	        // we use input time scale straight away to avoid rounding issues on frame duration / cts computation
	        var inputTimeScale = videoTrack.inputTimeScale;
	        videoTrack.timescale = inputTimeScale;
	        tracks.video = {
	          container: 'video/mp4',
	          codec: videoTrack.codec,
	          initSegment: _mp4Generator2.default.initSegment([videoTrack]),
	          metadata: {
	            width: videoTrack.width,
	            height: videoTrack.height
	          }
	        };
	        if (computePTSDTS) {
	          initPTS = Math.min(initPTS, videoSamples[0].pts - inputTimeScale * timeOffset);
	          initDTS = Math.min(initDTS, videoSamples[0].dts - inputTimeScale * timeOffset);
	          this.observer.trigger(_events2.default.INIT_PTS_FOUND, { initPTS: initPTS });
	        }
	      }
	
	      if (Object.keys(tracks).length) {
	        observer.trigger(_events2.default.FRAG_PARSING_INIT_SEGMENT, data);
	        this.ISGenerated = true;
	        if (computePTSDTS) {
	          this._initPTS = initPTS;
	          this._initDTS = initDTS;
	        }
	      } else {
	        observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MEDIA_ERROR, details: _errors.ErrorDetails.FRAG_PARSING_ERROR, fatal: false, reason: 'no audio/video samples found' });
	      }
	    }
	  }, {
	    key: 'remuxVideo',
	    value: function remuxVideo(track, timeOffset, contiguous, audioTrackLength) {
	      var offset = 8,
	          timeScale = track.timescale,
	          mp4SampleDuration,
	          mdat,
	          moof,
	          firstPTS,
	          firstDTS,
	          nextDTS,
	          lastPTS,
	          lastDTS,
	          inputSamples = track.samples,
	          outputSamples = [],
	          nbSamples = inputSamples.length,
	          ptsNormalize = this._PTSNormalize,
	          initDTS = this._initDTS;
	
	      // for (let i = 0; i < track.samples.length; i++) {
	      //   let avcSample = track.samples[i];
	      //   let units = avcSample.units;
	      //   let unitsString = '';
	      //   for (let j = 0; j < units.length ; j++) {
	      //     unitsString += units[j].type + ',';
	      //     if (units[j].data.length < 500) {
	      //       unitsString += Hex.hexDump(units[j].data);
	      //     }
	      //   }
	      //   logger.log(avcSample.pts + '/' + avcSample.dts + ',' + unitsString + avcSample.units.length);
	      // }
	
	      // sort video samples by DTS then PTS then demux id order
	      inputSamples.sort(function (a, b) {
	        var deltadts = a.dts - b.dts;
	        var deltapts = a.pts - b.pts;
	        return deltadts ? deltadts : deltapts ? deltapts : a.id - b.id;
	      });
	
	      // handle broken streams with PTS < DTS, tolerance up 200ms (18000 in 90kHz timescale)
	      var PTSDTSshift = inputSamples.reduce(function (prev, curr) {
	        return Math.max(Math.min(prev, curr.pts - curr.dts), -18000);
	      }, 0);
	      if (PTSDTSshift < 0) {
	        _logger.logger.warn('PTS < DTS detected in video samples, shifting DTS by ' + Math.round(PTSDTSshift / 90) + ' ms to overcome this issue');
	        for (var i = 0; i < inputSamples.length; i++) {
	          inputSamples[i].dts += PTSDTSshift;
	        }
	      }
	
	      // PTS is coded on 33bits, and can loop from -2^32 to 2^32
	      // ptsNormalize will make PTS/DTS value monotonic, we use last known DTS value as reference value
	      var nextAvcDts = void 0;
	      // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)
	      if (contiguous) {
	        // if parsed fragment is contiguous with last one, let's use last DTS value as reference
	        nextAvcDts = this.nextAvcDts;
	      } else {
	        // if not contiguous, let's use target timeOffset
	        nextAvcDts = timeOffset * timeScale;
	      }
	
	      // compute first DTS and last DTS, normalize them against reference value
	      var sample = inputSamples[0];
	      firstDTS = Math.max(ptsNormalize(sample.dts - initDTS, nextAvcDts), 0);
	      firstPTS = Math.max(ptsNormalize(sample.pts - initDTS, nextAvcDts), 0);
	
	      // check timestamp continuity accross consecutive fragments (this is to remove inter-fragment gap/hole)
	      var delta = Math.round((firstDTS - nextAvcDts) / 90);
	      // if fragment are contiguous, detect hole/overlapping between fragments
	      if (contiguous) {
	        if (delta) {
	          if (delta > 1) {
	            _logger.logger.log('AVC:' + delta + ' ms hole between fragments detected,filling it');
	          } else if (delta < -1) {
	            _logger.logger.log('AVC:' + -delta + ' ms overlapping between fragments detected');
	          }
	          // remove hole/gap : set DTS to next expected DTS
	          firstDTS = nextAvcDts;
	          inputSamples[0].dts = firstDTS + initDTS;
	          // offset PTS as well, ensure that PTS is smaller or equal than new DTS
	          firstPTS = Math.max(firstPTS - delta, nextAvcDts);
	          inputSamples[0].pts = firstPTS + initDTS;
	          _logger.logger.log('Video/PTS/DTS adjusted: ' + Math.round(firstPTS / 90) + '/' + Math.round(firstDTS / 90) + ',delta:' + delta + ' ms');
	        }
	      }
	      nextDTS = firstDTS;
	
	      // compute lastPTS/lastDTS
	      sample = inputSamples[inputSamples.length - 1];
	      lastDTS = Math.max(ptsNormalize(sample.dts - initDTS, nextAvcDts), 0);
	      lastPTS = Math.max(ptsNormalize(sample.pts - initDTS, nextAvcDts), 0);
	      lastPTS = Math.max(lastPTS, lastDTS);
	
	      var isSafari = this.isSafari;
	      // on Safari let's signal the same sample duration for all samples
	      // sample duration (as expected by trun MP4 boxes), should be the delta between sample DTS
	      // set this constant duration as being the avg delta between consecutive DTS.
	      if (isSafari) {
	        mp4SampleDuration = Math.round((lastDTS - firstDTS) / (inputSamples.length - 1));
	      }
	
	      var nbNalu = 0,
	          naluLen = 0;
	      for (var _i = 0; _i < nbSamples; _i++) {
	        // compute total/avc sample length and nb of NAL units
	        var _sample = inputSamples[_i],
	            units = _sample.units,
	            nbUnits = units.length,
	            sampleLen = 0;
	        for (var j = 0; j < nbUnits; j++) {
	          sampleLen += units[j].data.length;
	        }
	        naluLen += sampleLen;
	        nbNalu += nbUnits;
	        _sample.length = sampleLen;
	
	        // normalize PTS/DTS
	        if (isSafari) {
	          // sample DTS is computed using a constant decoding offset (mp4SampleDuration) between samples
	          _sample.dts = firstDTS + _i * mp4SampleDuration;
	        } else {
	          // ensure sample monotonic DTS
	          _sample.dts = Math.max(ptsNormalize(_sample.dts - initDTS, nextAvcDts), firstDTS);
	        }
	        // we normalize PTS against nextAvcDts, we also substract initDTS (some streams don't start @ PTS O)
	        // and we ensure that computed value is greater or equal than sample DTS
	        _sample.pts = Math.max(ptsNormalize(_sample.pts - initDTS, nextAvcDts), _sample.dts);
	      }
	
	      /* concatenate the video data and construct the mdat in place
	        (need 8 more bytes to fill length and mpdat type) */
	      var mdatSize = naluLen + 4 * nbNalu + 8;
	      try {
	        mdat = new Uint8Array(mdatSize);
	      } catch (err) {
	        this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MUX_ERROR, details: _errors.ErrorDetails.REMUX_ALLOC_ERROR, fatal: false, bytes: mdatSize, reason: 'fail allocating video mdat ' + mdatSize });
	        return;
	      }
	      var view = new DataView(mdat.buffer);
	      view.setUint32(0, mdatSize);
	      mdat.set(_mp4Generator2.default.types.mdat, 4);
	
	      for (var _i2 = 0; _i2 < nbSamples; _i2++) {
	        var avcSample = inputSamples[_i2],
	            avcSampleUnits = avcSample.units,
	            mp4SampleLength = 0,
	            compositionTimeOffset = void 0;
	        // convert NALU bitstream to MP4 format (prepend NALU with size field)
	        for (var _j = 0, _nbUnits = avcSampleUnits.length; _j < _nbUnits; _j++) {
	          var unit = avcSampleUnits[_j],
	              unitData = unit.data,
	              unitDataLen = unit.data.byteLength;
	          view.setUint32(offset, unitDataLen);
	          offset += 4;
	          mdat.set(unitData, offset);
	          offset += unitDataLen;
	          mp4SampleLength += 4 + unitDataLen;
	        }
	
	        if (!isSafari) {
	          // expected sample duration is the Decoding Timestamp diff of consecutive samples
	          if (_i2 < nbSamples - 1) {
	            mp4SampleDuration = inputSamples[_i2 + 1].dts - avcSample.dts;
	          } else {
	            var config = this.config,
	                lastFrameDuration = avcSample.dts - inputSamples[_i2 > 0 ? _i2 - 1 : _i2].dts;
	            if (config.stretchShortVideoTrack) {
	              // In some cases, a segment's audio track duration may exceed the video track duration.
	              // Since we've already remuxed audio, and we know how long the audio track is, we look to
	              // see if the delta to the next segment is longer than the minimum of maxBufferHole and
	              // maxSeekHole. If so, playback would potentially get stuck, so we artificially inflate
	              // the duration of the last frame to minimize any potential gap between segments.
	              var maxBufferHole = config.maxBufferHole,
	                  maxSeekHole = config.maxSeekHole,
	                  gapTolerance = Math.floor(Math.min(maxBufferHole, maxSeekHole) * timeScale),
	                  deltaToFrameEnd = (audioTrackLength ? firstPTS + audioTrackLength * timeScale : this.nextAudioPts) - avcSample.pts;
	              if (deltaToFrameEnd > gapTolerance) {
	                // We subtract lastFrameDuration from deltaToFrameEnd to try to prevent any video
	                // frame overlap. maxBufferHole/maxSeekHole should be >> lastFrameDuration anyway.
	                mp4SampleDuration = deltaToFrameEnd - lastFrameDuration;
	                if (mp4SampleDuration < 0) {
	                  mp4SampleDuration = lastFrameDuration;
	                }
	                _logger.logger.log('It is approximately ' + deltaToFrameEnd / 90 + ' ms to the next segment; using duration ' + mp4SampleDuration / 90 + ' ms for the last video frame.');
	              } else {
	                mp4SampleDuration = lastFrameDuration;
	              }
	            } else {
	              mp4SampleDuration = lastFrameDuration;
	            }
	          }
	          compositionTimeOffset = Math.round(avcSample.pts - avcSample.dts);
	        } else {
	          compositionTimeOffset = Math.max(0, mp4SampleDuration * Math.round((avcSample.pts - avcSample.dts) / mp4SampleDuration));
	        }
	
	        //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${avcSample.pts}/${avcSample.dts}/${initDTS}/${ptsnorm}/${dtsnorm}/${(avcSample.pts/4294967296).toFixed(3)}');
	        outputSamples.push({
	          size: mp4SampleLength,
	          // constant duration
	          duration: mp4SampleDuration,
	          cts: compositionTimeOffset,
	          flags: {
	            isLeading: 0,
	            isDependedOn: 0,
	            hasRedundancy: 0,
	            degradPrio: 0,
	            dependsOn: avcSample.key ? 2 : 1,
	            isNonSync: avcSample.key ? 0 : 1
	          }
	        });
	      }
	      // next AVC sample DTS should be equal to last sample DTS + last sample duration (in PES timescale)
	      this.nextAvcDts = lastDTS + mp4SampleDuration;
	      var dropped = track.dropped;
	      track.len = 0;
	      track.nbNalu = 0;
	      track.dropped = 0;
	      if (outputSamples.length && navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {
	        var flags = outputSamples[0].flags;
	        // chrome workaround, mark first sample as being a Random Access Point to avoid sourcebuffer append issue
	        // https://code.google.com/p/chromium/issues/detail?id=229412
	        flags.dependsOn = 2;
	        flags.isNonSync = 0;
	      }
	      track.samples = outputSamples;
	      moof = _mp4Generator2.default.moof(track.sequenceNumber++, firstDTS, track);
	      track.samples = [];
	
	      var data = {
	        data1: moof,
	        data2: mdat,
	        startPTS: firstPTS / timeScale,
	        endPTS: (lastPTS + mp4SampleDuration) / timeScale,
	        startDTS: firstDTS / timeScale,
	        endDTS: this.nextAvcDts / timeScale,
	        type: 'video',
	        nb: outputSamples.length,
	        dropped: dropped
	      };
	      this.observer.trigger(_events2.default.FRAG_PARSING_DATA, data);
	      return data;
	    }
	  }, {
	    key: 'remuxAudio',
	    value: function remuxAudio(track, timeOffset, contiguous, accurateTimeOffset) {
	      var inputTimeScale = track.inputTimeScale,
	          mp4timeScale = track.timescale,
	          scaleFactor = inputTimeScale / mp4timeScale,
	          mp4SampleDuration = track.isAAC ? 1024 : 1152,
	          inputSampleDuration = mp4SampleDuration * scaleFactor,
	          ptsNormalize = this._PTSNormalize,
	          initDTS = this._initDTS,
	          rawMPEG = !track.isAAC && this.typeSupported.mpeg;
	
	      var view,
	          offset = rawMPEG ? 0 : 8,
	          audioSample,
	          mp4Sample,
	          unit,
	          mdat,
	          moof,
	          firstPTS,
	          firstDTS,
	          lastDTS,
	          pts,
	          dts,
	          ptsnorm,
	          dtsnorm,
	          outputSamples = [],
	          inputSamples = [],
	          fillFrame,
	          newStamp,
	          nextAudioPts;
	
	      track.samples.sort(function (a, b) {
	        return a.pts - b.pts;
	      });
	      inputSamples = track.samples;
	
	      // for audio samples, also consider consecutive fragments as being contiguous (even if a level switch occurs),
	      // for sake of clarity:
	      // consecutive fragments are frags with
	      //  - less than 100ms gaps between new time offset and next expected PTS OR
	      //  - less than 20 audio frames distance
	      // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)
	      // this helps ensuring audio continuity
	      // and this also avoids audio glitches/cut when switching quality, or reporting wrong duration on first audio frame
	
	      nextAudioPts = this.nextAudioPts;
	      contiguous |= inputSamples.length && nextAudioPts && (Math.abs(timeOffset - nextAudioPts / inputTimeScale) < 0.1 || Math.abs(inputSamples[0].pts - nextAudioPts - initDTS) < 20 * inputSampleDuration);
	
	      if (!contiguous) {
	        // if fragments are not contiguous, let's use timeOffset to compute next Audio PTS
	        nextAudioPts = timeOffset * inputTimeScale;
	      }
	      // If the audio track is missing samples, the frames seem to get "left-shifted" within the
	      // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.
	      // In an effort to prevent this from happening, we inject frames here where there are gaps.
	      // When possible, we inject a silent frame; when that's not possible, we duplicate the last
	      // frame.
	
	      // only inject/drop audio frames in case time offset is accurate
	      if (accurateTimeOffset && track.isAAC) {
	        for (var i = 0, nextPtsNorm = nextAudioPts; i < inputSamples.length;) {
	          // First, let's see how far off this frame is from where we expect it to be
	          var sample = inputSamples[i],
	              ptsNorm = ptsNormalize(sample.pts - initDTS, nextAudioPts),
	              delta = ptsNorm - nextPtsNorm;
	
	          // If we're overlapping by more than a duration, drop this sample
	          if (delta <= -inputSampleDuration) {
	            _logger.logger.warn('Dropping 1 audio frame @ ' + (nextPtsNorm / inputTimeScale).toFixed(3) + 's due to ' + Math.abs(1000 * delta / inputTimeScale) + ' ms overlap.');
	            inputSamples.splice(i, 1);
	            track.len -= sample.unit.length;
	            // Don't touch nextPtsNorm or i
	          }
	          // Otherwise, if we're more than a frame away from where we should be, insert missing frames
	          // also only inject silent audio frames if currentTime !== 0 (nextPtsNorm !== 0)
	          else if (delta >= inputSampleDuration && nextPtsNorm) {
	              var missing = Math.round(delta / inputSampleDuration);
	              _logger.logger.warn('Injecting ' + missing + ' audio frame @ ' + (nextPtsNorm / inputTimeScale).toFixed(3) + 's due to ' + 1000 * delta / inputTimeScale + ' ms gap.');
	              for (var j = 0; j < missing; j++) {
	                newStamp = nextPtsNorm + initDTS;
	                newStamp = Math.max(newStamp, initDTS);
	                fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);
	                if (!fillFrame) {
	                  _logger.logger.log('Unable to get silent frame for given audio codec; duplicating last frame instead.');
	                  fillFrame = sample.unit.subarray();
	                }
	                inputSamples.splice(i, 0, { unit: fillFrame, pts: newStamp, dts: newStamp });
	                track.len += fillFrame.length;
	                nextPtsNorm += inputSampleDuration;
	                i += 1;
	              }
	
	              // Adjust sample to next expected pts
	              sample.pts = sample.dts = nextPtsNorm + initDTS;
	              nextPtsNorm += inputSampleDuration;
	              i += 1;
	            }
	            // Otherwise, we're within half a frame duration, so just adjust pts
	            else {
	                if (Math.abs(delta) > 0.1 * inputSampleDuration) {
	                  //logger.log(`Invalid frame delta ${Math.round(ptsNorm - nextPtsNorm + inputSampleDuration)} at PTS ${Math.round(ptsNorm / 90)} (should be ${Math.round(inputSampleDuration)}).`);
	                }
	                nextPtsNorm += inputSampleDuration;
	                if (i === 0) {
	                  sample.pts = sample.dts = initDTS + nextAudioPts;
	                } else {
	                  sample.pts = sample.dts = inputSamples[i - 1].pts + inputSampleDuration;
	                }
	                i += 1;
	              }
	        }
	      }
	
	      for (var _j2 = 0, _nbSamples = inputSamples.length; _j2 < _nbSamples; _j2++) {
	        audioSample = inputSamples[_j2];
	        unit = audioSample.unit;
	        pts = audioSample.pts - initDTS;
	        dts = audioSample.dts - initDTS;
	        //logger.log(`Audio/PTS:${Math.round(pts/90)}`);
	        // if not first sample
	        if (lastDTS !== undefined) {
	          ptsnorm = ptsNormalize(pts, lastDTS);
	          dtsnorm = ptsNormalize(dts, lastDTS);
	          mp4Sample.duration = Math.round((dtsnorm - lastDTS) / scaleFactor);
	        } else {
	          ptsnorm = ptsNormalize(pts, nextAudioPts);
	          dtsnorm = ptsNormalize(dts, nextAudioPts);
	          var _delta = Math.round(1000 * (ptsnorm - nextAudioPts) / inputTimeScale),
	              numMissingFrames = 0;
	          // if fragment are contiguous, detect hole/overlapping between fragments
	          // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)
	          if (contiguous && track.isAAC) {
	            // log delta
	            if (_delta) {
	              if (_delta > 0) {
	                numMissingFrames = Math.round((ptsnorm - nextAudioPts) / inputSampleDuration);
	                _logger.logger.log(_delta + ' ms hole between AAC samples detected,filling it');
	                if (numMissingFrames > 0) {
	                  fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);
	                  if (!fillFrame) {
	                    fillFrame = unit.subarray();
	                  }
	                  track.len += numMissingFrames * fillFrame.length;
	                }
	                // if we have frame overlap, overlapping for more than half a frame duraion
	              } else if (_delta < -12) {
	                // drop overlapping audio frames... browser will deal with it
	                _logger.logger.log(-_delta + ' ms overlapping between AAC samples detected, drop frame');
	                track.len -= unit.byteLength;
	                continue;
	              }
	              // set PTS/DTS to expected PTS/DTS
	              ptsnorm = dtsnorm = nextAudioPts;
	            }
	          }
	          // remember first PTS of our audioSamples, ensure value is positive
	          firstPTS = Math.max(0, ptsnorm);
	          firstDTS = Math.max(0, dtsnorm);
	          if (track.len > 0) {
	            /* concatenate the audio data and construct the mdat in place
	              (need 8 more bytes to fill length and mdat type) */
	
	            var mdatSize = rawMPEG ? track.len : track.len + 8;
	            try {
	              mdat = new Uint8Array(mdatSize);
	            } catch (err) {
	              this.observer.trigger(_events2.default.ERROR, { type: _errors.ErrorTypes.MUX_ERROR, details: _errors.ErrorDetails.REMUX_ALLOC_ERROR, fatal: false, bytes: mdatSize, reason: 'fail allocating audio mdat ' + mdatSize });
	              return;
	            }
	            if (!rawMPEG) {
	              view = new DataView(mdat.buffer);
	              view.setUint32(0, mdatSize);
	              mdat.set(_mp4Generator2.default.types.mdat, 4);
	            }
	          } else {
	            // no audio samples
	            return;
	          }
	          for (var _i3 = 0; _i3 < numMissingFrames; _i3++) {
	            newStamp = ptsnorm - (numMissingFrames - _i3) * inputSampleDuration;
	            fillFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);
	            if (!fillFrame) {
	              _logger.logger.log('Unable to get silent frame for given audio codec; duplicating this frame instead.');
	              fillFrame = unit.subarray();
	            }
	            mdat.set(fillFrame, offset);
	            offset += fillFrame.byteLength;
	            mp4Sample = {
	              size: fillFrame.byteLength,
	              cts: 0,
	              duration: 1024,
	              flags: {
	                isLeading: 0,
	                isDependedOn: 0,
	                hasRedundancy: 0,
	                degradPrio: 0,
	                dependsOn: 1
	              }
	            };
	            outputSamples.push(mp4Sample);
	          }
	        }
	        mdat.set(unit, offset);
	        var unitLen = unit.byteLength;
	        offset += unitLen;
	        //console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${audioSample.pts}/${audioSample.dts}/${initDTS}/${ptsnorm}/${dtsnorm}/${(audioSample.pts/4294967296).toFixed(3)}');
	        mp4Sample = {
	          size: unitLen,
	          cts: 0,
	          duration: 0,
	          flags: {
	            isLeading: 0,
	            isDependedOn: 0,
	            hasRedundancy: 0,
	            degradPrio: 0,
	            dependsOn: 1
	          }
	        };
	        outputSamples.push(mp4Sample);
	        lastDTS = dtsnorm;
	      }
	      var lastSampleDuration = 0;
	      var nbSamples = outputSamples.length;
	      //set last sample duration as being identical to previous sample
	      if (nbSamples >= 2) {
	        lastSampleDuration = outputSamples[nbSamples - 2].duration;
	        mp4Sample.duration = lastSampleDuration;
	      }
	      if (nbSamples) {
	        // next audio sample PTS should be equal to last sample PTS + duration
	        this.nextAudioPts = ptsnorm + scaleFactor * lastSampleDuration;
	        //logger.log('Audio/PTS/PTSend:' + audioSample.pts.toFixed(0) + '/' + this.nextAacDts.toFixed(0));
	        track.len = 0;
	        track.samples = outputSamples;
	        if (rawMPEG) {
	          moof = new Uint8Array();
	        } else {
	          moof = _mp4Generator2.default.moof(track.sequenceNumber++, firstDTS / scaleFactor, track);
	        }
	        track.samples = [];
	        var audioData = {
	          data1: moof,
	          data2: mdat,
	          startPTS: firstPTS / inputTimeScale,
	          endPTS: this.nextAudioPts / inputTimeScale,
	          startDTS: firstDTS / inputTimeScale,
	          endDTS: (dtsnorm + scaleFactor * lastSampleDuration) / inputTimeScale,
	          type: 'audio',
	          nb: nbSamples
	        };
	        this.observer.trigger(_events2.default.FRAG_PARSING_DATA, audioData);
	        return audioData;
	      }
	      return null;
	    }
	  }, {
	    key: 'remuxEmptyAudio',
	    value: function remuxEmptyAudio(track, timeOffset, contiguous, videoData) {
	      var inputTimeScale = track.inputTimeScale,
	          mp4timeScale = track.samplerate ? track.samplerate : inputTimeScale,
	          scaleFactor = inputTimeScale / mp4timeScale,
	          nextAudioPts = this.nextAudioPts,
	
	
	      // sync with video's timestamp
	      startDTS = (nextAudioPts !== undefined ? nextAudioPts : videoData.startDTS * inputTimeScale) + this._initDTS,
	          endDTS = videoData.endDTS * inputTimeScale + this._initDTS,
	
	      // one sample's duration value
	      sampleDuration = 1024,
	          frameDuration = scaleFactor * sampleDuration,
	
	
	      // samples count of this segment's duration
	      nbSamples = Math.ceil((endDTS - startDTS) / frameDuration),
	
	
	      // silent frame
	      silentFrame = _aac2.default.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);
	
	      _logger.logger.warn('remux empty Audio');
	      // Can't remux if we can't generate a silent frame...
	      if (!silentFrame) {
	        _logger.logger.trace('Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!');
	        return;
	      }
	
	      var samples = [];
	      for (var i = 0; i < nbSamples; i++) {
	        var stamp = startDTS + i * frameDuration;
	        samples.push({ unit: silentFrame, pts: stamp, dts: stamp });
	        track.len += silentFrame.length;
	      }
	      track.samples = samples;
	
	      this.remuxAudio(track, timeOffset, contiguous);
	    }
	  }, {
	    key: 'remuxID3',
	    value: function remuxID3(track, timeOffset) {
	      var length = track.samples.length,
	          sample;
	      var inputTimeScale = track.inputTimeScale;
	      var initPTS = this._initPTS;
	      var initDTS = this._initDTS;
	      // consume samples
	      if (length) {
	        for (var index = 0; index < length; index++) {
	          sample = track.samples[index];
	          // setting id3 pts, dts to relative time
	          // using this._initPTS and this._initDTS to calculate relative time
	          sample.pts = (sample.pts - initPTS) / inputTimeScale;
	          sample.dts = (sample.dts - initDTS) / inputTimeScale;
	        }
	        this.observer.trigger(_events2.default.FRAG_PARSING_METADATA, {
	          samples: track.samples
	        });
	      }
	
	      track.samples = [];
	      timeOffset = timeOffset;
	    }
	  }, {
	    key: 'remuxText',
	    value: function remuxText(track, timeOffset) {
	      track.samples.sort(function (a, b) {
	        return a.pts - b.pts;
	      });
	
	      var length = track.samples.length,
	          sample;
	      var inputTimeScale = track.inputTimeScale;
	      var initPTS = this._initPTS;
	      // consume samples
	      if (length) {
	        for (var index = 0; index < length; index++) {
	          sample = track.samples[index];
	          // setting text pts, dts to relative time
	          // using this._initPTS and this._initDTS to calculate relative time
	          sample.pts = (sample.pts - initPTS) / inputTimeScale;
	        }
	        this.observer.trigger(_events2.default.FRAG_PARSING_USERDATA, {
	          samples: track.samples
	        });
	      }
	
	      track.samples = [];
	      timeOffset = timeOffset;
	    }
	  }, {
	    key: '_PTSNormalize',
	    value: function _PTSNormalize(value, reference) {
	      var offset;
	      if (reference === undefined) {
	        return value;
	      }
	      if (reference < value) {
	        // - 2^33
	        offset = -8589934592;
	      } else {
	        // + 2^33
	        offset = 8589934592;
	      }
	      /* PTS is 33bit (from 0 to 2^33 -1)
	        if diff between value and reference is bigger than half of the amplitude (2^32) then it means that
	        PTS looping occured. fill the gap */
	      while (Math.abs(value - reference) > 4294967296) {
	        value += offset;
	      }
	      return value;
	    }
	  }]);
	
	  return MP4Remuxer;
	}();
	
	exports.default = MP4Remuxer;
	
	},{"30":30,"32":32,"33":33,"41":41,"50":50}],43:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	passthrough remuxer
	
	
	
	var _events = _dereq_(32);
	
	var _events2 = _interopRequireDefault(_events);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PassThroughRemuxer = function () {
	  function PassThroughRemuxer(observer) {
	    _classCallCheck(this, PassThroughRemuxer);
	
	    this.observer = observer;
	  }
	
	  _createClass(PassThroughRemuxer, [{
	    key: 'destroy',
	    value: function destroy() {}
	  }, {
	    key: 'resetTimeStamp',
	    value: function resetTimeStamp() {}
	  }, {
	    key: 'resetInitSegment',
	    value: function resetInitSegment() {}
	  }, {
	    key: 'remux',
	    value: function remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset, rawData) {
	      var observer = this.observer;
	      var streamType = '';
	      if (audioTrack) {
	        streamType += 'audio';
	      }
	      if (videoTrack) {
	        streamType += 'video';
	      }
	      observer.trigger(_events2.default.FRAG_PARSING_DATA, {
	        data1: rawData,
	        startPTS: timeOffset,
	        startDTS: timeOffset,
	        type: streamType,
	        nb: 1,
	        dropped: 0
	      });
	      //notify end of parsing
	      observer.trigger(_events2.default.FRAG_PARSED);
	    }
	  }]);
	
	  return PassThroughRemuxer;
	}();
	
	exports.default = PassThroughRemuxer;
	
	},{"32":32}],44:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var DECIMAL_RESOLUTION_REGEX = /^(\d+)x(\d+)$/;
	var ATTR_LIST_REGEX = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g;
	
	// adapted from https://github.com/kanongil/node-m3u8parse/blob/master/attrlist.js
	
	var AttrList = function () {
	  function AttrList(attrs) {
	    _classCallCheck(this, AttrList);
	
	    if (typeof attrs === 'string') {
	      attrs = AttrList.parseAttrList(attrs);
	    }
	    for (var attr in attrs) {
	      if (attrs.hasOwnProperty(attr)) {
	        this[attr] = attrs[attr];
	      }
	    }
	  }
	
	  _createClass(AttrList, [{
	    key: 'decimalInteger',
	    value: function decimalInteger(attrName) {
	      var intValue = parseInt(this[attrName], 10);
	      if (intValue > Number.MAX_SAFE_INTEGER) {
	        return Infinity;
	      }
	      return intValue;
	    }
	  }, {
	    key: 'hexadecimalInteger',
	    value: function hexadecimalInteger(attrName) {
	      if (this[attrName]) {
	        var stringValue = (this[attrName] || '0x').slice(2);
	        stringValue = (stringValue.length & 1 ? '0' : '') + stringValue;
	
	        var value = new Uint8Array(stringValue.length / 2);
	        for (var i = 0; i < stringValue.length / 2; i++) {
	          value[i] = parseInt(stringValue.slice(i * 2, i * 2 + 2), 16);
	        }
	        return value;
	      } else {
	        return null;
	      }
	    }
	  }, {
	    key: 'hexadecimalIntegerAsNumber',
	    value: function hexadecimalIntegerAsNumber(attrName) {
	      var intValue = parseInt(this[attrName], 16);
	      if (intValue > Number.MAX_SAFE_INTEGER) {
	        return Infinity;
	      }
	      return intValue;
	    }
	  }, {
	    key: 'decimalFloatingPoint',
	    value: function decimalFloatingPoint(attrName) {
	      return parseFloat(this[attrName]);
	    }
	  }, {
	    key: 'enumeratedString',
	    value: function enumeratedString(attrName) {
	      return this[attrName];
	    }
	  }, {
	    key: 'decimalResolution',
	    value: function decimalResolution(attrName) {
	      var res = DECIMAL_RESOLUTION_REGEX.exec(this[attrName]);
	      if (res === null) {
	        return undefined;
	      }
	      return {
	        width: parseInt(res[1], 10),
	        height: parseInt(res[2], 10)
	      };
	    }
	  }], [{
	    key: 'parseAttrList',
	    value: function parseAttrList(input) {
	      var match,
	          attrs = {};
	      ATTR_LIST_REGEX.lastIndex = 0;
	      while ((match = ATTR_LIST_REGEX.exec(input)) !== null) {
	        var value = match[2],
	            quote = '"';
	
	        if (value.indexOf(quote) === 0 && value.lastIndexOf(quote) === value.length - 1) {
	          value = value.slice(1, -1);
	        }
	        attrs[match[1]] = value;
	      }
	      return attrs;
	    }
	  }]);
	
	  return AttrList;
	}();
	
	exports.default = AttrList;
	
	},{}],45:[function(_dereq_,module,exports){
	"use strict";
	
	var BinarySearch = {
	    /**
	     * Searches for an item in an array which matches a certain condition.
	     * This requires the condition to only match one item in the array,
	     * and for the array to be ordered.
	     *
	     * @param {Array} list The array to search.
	     * @param {Function} comparisonFunction
	     *      Called and provided a candidate item as the first argument.
	     *      Should return:
	     *          > -1 if the item should be located at a lower index than the provided item.
	     *          > 1 if the item should be located at a higher index than the provided item.
	     *          > 0 if the item is the item you're looking for.
	     *
	     * @return {*} The object if it is found or null otherwise.
	     */
	    search: function search(list, comparisonFunction) {
	        var minIndex = 0;
	        var maxIndex = list.length - 1;
	        var currentIndex = null;
	        var currentElement = null;
	
	        while (minIndex <= maxIndex) {
	            currentIndex = (minIndex + maxIndex) / 2 | 0;
	            currentElement = list[currentIndex];
	
	            var comparisonResult = comparisonFunction(currentElement);
	            if (comparisonResult > 0) {
	                minIndex = currentIndex + 1;
	            } else if (comparisonResult < 0) {
	                maxIndex = currentIndex - 1;
	            } else {
	                return currentElement;
	            }
	        }
	
	        return null;
	    }
	};
	
	module.exports = BinarySearch;
	
	},{}],46:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 *
	 * This code was ported from the dash.js project at:
	 *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js
	 *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2
	 *
	 * The original copyright appears below:
	 *
	 * The copyright in this software is being made available under the BSD License,
	 * included below. This software may be subject to other third party and contributor
	 * rights, including patent rights, and no such rights are granted under this license.
	 *
	 * Copyright (c) 2015-2016, DASH Industry Forum.
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *  1. Redistributions of source code must retain the above copyright notice, this
	 *  list of conditions and the following disclaimer.
	 *  * Redistributions in binary form must reproduce the above copyright notice,
	 *  this list of conditions and the following disclaimer in the documentation and/or
	 *  other materials provided with the distribution.
	 *  2. Neither the name of Dash Industry Forum nor the names of its
	 *  contributors may be used to endorse or promote products derived from this software
	 *  without specific prior written permission.
	 *
	 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
	 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
	 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
	 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
	 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
	 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
	 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
	 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	 *  POSSIBILITY OF SUCH DAMAGE.
	 */
	/**
	 *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes
	 */
	
	var specialCea608CharsCodes = {
	    0x2a: 0xe1, // lowercase a, acute accent
	    0x5c: 0xe9, // lowercase e, acute accent
	    0x5e: 0xed, // lowercase i, acute accent
	    0x5f: 0xf3, // lowercase o, acute accent
	    0x60: 0xfa, // lowercase u, acute accent
	    0x7b: 0xe7, // lowercase c with cedilla
	    0x7c: 0xf7, // division symbol
	    0x7d: 0xd1, // uppercase N tilde
	    0x7e: 0xf1, // lowercase n tilde
	    0x7f: 0x2588, // Full block
	    // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
	    // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F
	    // THIS MEANS THAT \x50 MUST BE ADDED TO THE VALUES
	    0x80: 0xae, // Registered symbol (R)
	    0x81: 0xb0, // degree sign
	    0x82: 0xbd, // 1/2 symbol
	    0x83: 0xbf, // Inverted (open) question mark
	    0x84: 0x2122, // Trademark symbol (TM)
	    0x85: 0xa2, // Cents symbol
	    0x86: 0xa3, // Pounds sterling
	    0x87: 0x266a, // Music 8'th note
	    0x88: 0xe0, // lowercase a, grave accent
	    0x89: 0x20, // transparent space (regular)
	    0x8a: 0xe8, // lowercase e, grave accent
	    0x8b: 0xe2, // lowercase a, circumflex accent
	    0x8c: 0xea, // lowercase e, circumflex accent
	    0x8d: 0xee, // lowercase i, circumflex accent
	    0x8e: 0xf4, // lowercase o, circumflex accent
	    0x8f: 0xfb, // lowercase u, circumflex accent
	    // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
	    // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F
	    0x90: 0xc1, // capital letter A with acute
	    0x91: 0xc9, // capital letter E with acute
	    0x92: 0xd3, // capital letter O with acute
	    0x93: 0xda, // capital letter U with acute
	    0x94: 0xdc, // capital letter U with diaresis
	    0x95: 0xfc, // lowercase letter U with diaeresis
	    0x96: 0x2018, // opening single quote
	    0x97: 0xa1, // inverted exclamation mark
	    0x98: 0x2a, // asterisk
	    0x99: 0x2019, // closing single quote
	    0x9a: 0x2501, // box drawings heavy horizontal
	    0x9b: 0xa9, // copyright sign
	    0x9c: 0x2120, // Service mark
	    0x9d: 0x2022, // (round) bullet
	    0x9e: 0x201c, // Left double quotation mark
	    0x9f: 0x201d, // Right double quotation mark
	    0xa0: 0xc0, // uppercase A, grave accent
	    0xa1: 0xc2, // uppercase A, circumflex
	    0xa2: 0xc7, // uppercase C with cedilla
	    0xa3: 0xc8, // uppercase E, grave accent
	    0xa4: 0xca, // uppercase E, circumflex
	    0xa5: 0xcb, // capital letter E with diaresis
	    0xa6: 0xeb, // lowercase letter e with diaresis
	    0xa7: 0xce, // uppercase I, circumflex
	    0xa8: 0xcf, // uppercase I, with diaresis
	    0xa9: 0xef, // lowercase i, with diaresis
	    0xaa: 0xd4, // uppercase O, circumflex
	    0xab: 0xd9, // uppercase U, grave accent
	    0xac: 0xf9, // lowercase u, grave accent
	    0xad: 0xdb, // uppercase U, circumflex
	    0xae: 0xab, // left-pointing double angle quotation mark
	    0xaf: 0xbb, // right-pointing double angle quotation mark
	    // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
	    // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F
	    0xb0: 0xc3, // Uppercase A, tilde
	    0xb1: 0xe3, // Lowercase a, tilde
	    0xb2: 0xcd, // Uppercase I, acute accent
	    0xb3: 0xcc, // Uppercase I, grave accent
	    0xb4: 0xec, // Lowercase i, grave accent
	    0xb5: 0xd2, // Uppercase O, grave accent
	    0xb6: 0xf2, // Lowercase o, grave accent
	    0xb7: 0xd5, // Uppercase O, tilde
	    0xb8: 0xf5, // Lowercase o, tilde
	    0xb9: 0x7b, // Open curly brace
	    0xba: 0x7d, // Closing curly brace
	    0xbb: 0x5c, // Backslash
	    0xbc: 0x5e, // Caret
	    0xbd: 0x5f, // Underscore
	    0xbe: 0x7c, // Pipe (vertical line)
	    0xbf: 0x223c, // Tilde operator
	    0xc0: 0xc4, // Uppercase A, umlaut
	    0xc1: 0xe4, // Lowercase A, umlaut
	    0xc2: 0xd6, // Uppercase O, umlaut
	    0xc3: 0xf6, // Lowercase o, umlaut
	    0xc4: 0xdf, // Esszett (sharp S)
	    0xc5: 0xa5, // Yen symbol
	    0xc6: 0xa4, // Generic currency sign
	    0xc7: 0x2503, // Box drawings heavy vertical
	    0xc8: 0xc5, // Uppercase A, ring
	    0xc9: 0xe5, // Lowercase A, ring
	    0xca: 0xd8, // Uppercase O, stroke
	    0xcb: 0xf8, // Lowercase o, strok
	    0xcc: 0x250f, // Box drawings heavy down and right
	    0xcd: 0x2513, // Box drawings heavy down and left
	    0xce: 0x2517, // Box drawings heavy up and right
	    0xcf: 0x251b // Box drawings heavy up and left
	};
	
	/**
	 * Utils
	 */
	var getCharForByte = function getCharForByte(byte) {
	    var charCode = byte;
	    if (specialCea608CharsCodes.hasOwnProperty(byte)) {
	        charCode = specialCea608CharsCodes[byte];
	    }
	    return String.fromCharCode(charCode);
	};
	
	var NR_ROWS = 15,
	    NR_COLS = 100;
	// Tables to look up row from PAC data
	var rowsLowCh1 = { 0x11: 1, 0x12: 3, 0x15: 5, 0x16: 7, 0x17: 9, 0x10: 11, 0x13: 12, 0x14: 14 };
	var rowsHighCh1 = { 0x11: 2, 0x12: 4, 0x15: 6, 0x16: 8, 0x17: 10, 0x13: 13, 0x14: 15 };
	var rowsLowCh2 = { 0x19: 1, 0x1A: 3, 0x1D: 5, 0x1E: 7, 0x1F: 9, 0x18: 11, 0x1B: 12, 0x1C: 14 };
	var rowsHighCh2 = { 0x19: 2, 0x1A: 4, 0x1D: 6, 0x1E: 8, 0x1F: 10, 0x1B: 13, 0x1C: 15 };
	
	var backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];
	
	/**
	 * Simple logger class to be able to write with time-stamps and filter on level.
	 */
	var logger = {
	    verboseFilter: { 'DATA': 3, 'DEBUG': 3, 'INFO': 2, 'WARNING': 2, 'TEXT': 1, 'ERROR': 0 },
	    time: null,
	    verboseLevel: 0, // Only write errors
	    setTime: function setTime(newTime) {
	        this.time = newTime;
	    },
	    log: function log(severity, msg) {
	        var minLevel = this.verboseFilter[severity];
	        if (this.verboseLevel >= minLevel) {
	            console.log(this.time + ' [' + severity + '] ' + msg);
	        }
	    }
	};
	
	var numArrayToHexArray = function numArrayToHexArray(numArray) {
	    var hexArray = [];
	    for (var j = 0; j < numArray.length; j++) {
	        hexArray.push(numArray[j].toString(16));
	    }
	    return hexArray;
	};
	
	var PenState = function () {
	    function PenState(foreground, underline, italics, background, flash) {
	        _classCallCheck(this, PenState);
	
	        this.foreground = foreground || 'white';
	        this.underline = underline || false;
	        this.italics = italics || false;
	        this.background = background || 'black';
	        this.flash = flash || false;
	    }
	
	    _createClass(PenState, [{
	        key: 'reset',
	        value: function reset() {
	            this.foreground = 'white';
	            this.underline = false;
	            this.italics = false;
	            this.background = 'black';
	            this.flash = false;
	        }
	    }, {
	        key: 'setStyles',
	        value: function setStyles(styles) {
	            var attribs = ['foreground', 'underline', 'italics', 'background', 'flash'];
	            for (var i = 0; i < attribs.length; i++) {
	                var style = attribs[i];
	                if (styles.hasOwnProperty(style)) {
	                    this[style] = styles[style];
	                }
	            }
	        }
	    }, {
	        key: 'isDefault',
	        value: function isDefault() {
	            return this.foreground === 'white' && !this.underline && !this.italics && this.background === 'black' && !this.flash;
	        }
	    }, {
	        key: 'equals',
	        value: function equals(other) {
	            return this.foreground === other.foreground && this.underline === other.underline && this.italics === other.italics && this.background === other.background && this.flash === other.flash;
	        }
	    }, {
	        key: 'copy',
	        value: function copy(newPenState) {
	            this.foreground = newPenState.foreground;
	            this.underline = newPenState.underline;
	            this.italics = newPenState.italics;
	            this.background = newPenState.background;
	            this.flash = newPenState.flash;
	        }
	    }, {
	        key: 'toString',
	        value: function toString() {
	            return 'color=' + this.foreground + ', underline=' + this.underline + ', italics=' + this.italics + ', background=' + this.background + ', flash=' + this.flash;
	        }
	    }]);
	
	    return PenState;
	}();
	
	/**
	 * Unicode character with styling and background.
	 * @constructor
	 */
	
	
	var StyledUnicodeChar = function () {
	    function StyledUnicodeChar(uchar, foreground, underline, italics, background, flash) {
	        _classCallCheck(this, StyledUnicodeChar);
	
	        this.uchar = uchar || ' '; // unicode character
	        this.penState = new PenState(foreground, underline, italics, background, flash);
	    }
	
	    _createClass(StyledUnicodeChar, [{
	        key: 'reset',
	        value: function reset() {
	            this.uchar = ' ';
	            this.penState.reset();
	        }
	    }, {
	        key: 'setChar',
	        value: function setChar(uchar, newPenState) {
	            this.uchar = uchar;
	            this.penState.copy(newPenState);
	        }
	    }, {
	        key: 'setPenState',
	        value: function setPenState(newPenState) {
	            this.penState.copy(newPenState);
	        }
	    }, {
	        key: 'equals',
	        value: function equals(other) {
	            return this.uchar === other.uchar && this.penState.equals(other.penState);
	        }
	    }, {
	        key: 'copy',
	        value: function copy(newChar) {
	            this.uchar = newChar.uchar;
	            this.penState.copy(newChar.penState);
	        }
	    }, {
	        key: 'isEmpty',
	        value: function isEmpty() {
	            return this.uchar === ' ' && this.penState.isDefault();
	        }
	    }]);
	
	    return StyledUnicodeChar;
	}();
	
	/**
	 * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.
	 * @constructor
	 */
	
	
	var Row = function () {
	    function Row() {
	        _classCallCheck(this, Row);
	
	        this.chars = [];
	        for (var i = 0; i < NR_COLS; i++) {
	            this.chars.push(new StyledUnicodeChar());
	        }
	        this.pos = 0;
	        this.currPenState = new PenState();
	    }
	
	    _createClass(Row, [{
	        key: 'equals',
	        value: function equals(other) {
	            var equal = true;
	            for (var i = 0; i < NR_COLS; i++) {
	                if (!this.chars[i].equals(other.chars[i])) {
	                    equal = false;
	                    break;
	                }
	            }
	            return equal;
	        }
	    }, {
	        key: 'copy',
	        value: function copy(other) {
	            for (var i = 0; i < NR_COLS; i++) {
	                this.chars[i].copy(other.chars[i]);
	            }
	        }
	    }, {
	        key: 'isEmpty',
	        value: function isEmpty() {
	            var empty = true;
	            for (var i = 0; i < NR_COLS; i++) {
	                if (!this.chars[i].isEmpty()) {
	                    empty = false;
	                    break;
	                }
	            }
	            return empty;
	        }
	
	        /**
	         *  Set the cursor to a valid column.
	         */
	
	    }, {
	        key: 'setCursor',
	        value: function setCursor(absPos) {
	            if (this.pos !== absPos) {
	                this.pos = absPos;
	            }
	            if (this.pos < 0) {
	                logger.log('ERROR', 'Negative cursor position ' + this.pos);
	                this.pos = 0;
	            } else if (this.pos > NR_COLS) {
	                logger.log('ERROR', 'Too large cursor position ' + this.pos);
	                this.pos = NR_COLS;
	            }
	        }
	
	        /**
	         * Move the cursor relative to current position.
	         */
	
	    }, {
	        key: 'moveCursor',
	        value: function moveCursor(relPos) {
	            var newPos = this.pos + relPos;
	            if (relPos > 1) {
	                for (var i = this.pos + 1; i < newPos + 1; i++) {
	                    this.chars[i].setPenState(this.currPenState);
	                }
	            }
	            this.setCursor(newPos);
	        }
	
	        /**
	         * Backspace, move one step back and clear character.
	         */
	
	    }, {
	        key: 'backSpace',
	        value: function backSpace() {
	            this.moveCursor(-1);
	            this.chars[this.pos].setChar(' ', this.currPenState);
	        }
	    }, {
	        key: 'insertChar',
	        value: function insertChar(byte) {
	            if (byte >= 0x90) {
	                //Extended char
	                this.backSpace();
	            }
	            var char = getCharForByte(byte);
	            if (this.pos >= NR_COLS) {
	                logger.log('ERROR', 'Cannot insert ' + byte.toString(16) + ' (' + char + ') at position ' + this.pos + '. Skipping it!');
	                return;
	            }
	            this.chars[this.pos].setChar(char, this.currPenState);
	            this.moveCursor(1);
	        }
	    }, {
	        key: 'clearFromPos',
	        value: function clearFromPos(startPos) {
	            var i;
	            for (i = startPos; i < NR_COLS; i++) {
	                this.chars[i].reset();
	            }
	        }
	    }, {
	        key: 'clear',
	        value: function clear() {
	            this.clearFromPos(0);
	            this.pos = 0;
	            this.currPenState.reset();
	        }
	    }, {
	        key: 'clearToEndOfRow',
	        value: function clearToEndOfRow() {
	            this.clearFromPos(this.pos);
	        }
	    }, {
	        key: 'getTextString',
	        value: function getTextString() {
	            var chars = [];
	            var empty = true;
	            for (var i = 0; i < NR_COLS; i++) {
	                var char = this.chars[i].uchar;
	                if (char !== ' ') {
	                    empty = false;
	                }
	                chars.push(char);
	            }
	            if (empty) {
	                return '';
	            } else {
	                return chars.join('');
	            }
	        }
	    }, {
	        key: 'setPenStyles',
	        value: function setPenStyles(styles) {
	            this.currPenState.setStyles(styles);
	            var currChar = this.chars[this.pos];
	            currChar.setPenState(this.currPenState);
	        }
	    }]);
	
	    return Row;
	}();
	
	/**
	 * Keep a CEA-608 screen of 32x15 styled characters
	 * @constructor
	*/
	
	
	var CaptionScreen = function () {
	    function CaptionScreen() {
	        _classCallCheck(this, CaptionScreen);
	
	        this.rows = [];
	        for (var i = 0; i < NR_ROWS; i++) {
	            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)
	        }
	        this.currRow = NR_ROWS - 1;
	        this.nrRollUpRows = null;
	        this.reset();
	    }
	
	    _createClass(CaptionScreen, [{
	        key: 'reset',
	        value: function reset() {
	            for (var i = 0; i < NR_ROWS; i++) {
	                this.rows[i].clear();
	            }
	            this.currRow = NR_ROWS - 1;
	        }
	    }, {
	        key: 'equals',
	        value: function equals(other) {
	            var equal = true;
	            for (var i = 0; i < NR_ROWS; i++) {
	                if (!this.rows[i].equals(other.rows[i])) {
	                    equal = false;
	                    break;
	                }
	            }
	            return equal;
	        }
	    }, {
	        key: 'copy',
	        value: function copy(other) {
	            for (var i = 0; i < NR_ROWS; i++) {
	                this.rows[i].copy(other.rows[i]);
	            }
	        }
	    }, {
	        key: 'isEmpty',
	        value: function isEmpty() {
	            var empty = true;
	            for (var i = 0; i < NR_ROWS; i++) {
	                if (!this.rows[i].isEmpty()) {
	                    empty = false;
	                    break;
	                }
	            }
	            return empty;
	        }
	    }, {
	        key: 'backSpace',
	        value: function backSpace() {
	            var row = this.rows[this.currRow];
	            row.backSpace();
	        }
	    }, {
	        key: 'clearToEndOfRow',
	        value: function clearToEndOfRow() {
	            var row = this.rows[this.currRow];
	            row.clearToEndOfRow();
	        }
	
	        /**
	         * Insert a character (without styling) in the current row.
	         */
	
	    }, {
	        key: 'insertChar',
	        value: function insertChar(char) {
	            var row = this.rows[this.currRow];
	            row.insertChar(char);
	        }
	    }, {
	        key: 'setPen',
	        value: function setPen(styles) {
	            var row = this.rows[this.currRow];
	            row.setPenStyles(styles);
	        }
	    }, {
	        key: 'moveCursor',
	        value: function moveCursor(relPos) {
	            var row = this.rows[this.currRow];
	            row.moveCursor(relPos);
	        }
	    }, {
	        key: 'setCursor',
	        value: function setCursor(absPos) {
	            logger.log('INFO', 'setCursor: ' + absPos);
	            var row = this.rows[this.currRow];
	            row.setCursor(absPos);
	        }
	    }, {
	        key: 'setPAC',
	        value: function setPAC(pacData) {
	            logger.log('INFO', 'pacData = ' + JSON.stringify(pacData));
	            var newRow = pacData.row - 1;
	            if (this.nrRollUpRows && newRow < this.nrRollUpRows - 1) {
	                newRow = this.nrRollUpRows - 1;
	            }
	
	            //Make sure this only affects Roll-up Captions by checking this.nrRollUpRows
	            if (this.nrRollUpRows && this.currRow !== newRow) {
	                //clear all rows first
	                for (var i = 0; i < NR_ROWS; i++) {
	                    this.rows[i].clear();
	                }
	
	                //Copy this.nrRollUpRows rows from lastOutputScreen and place it in the newRow location
	                //topRowIndex - the start of rows to copy (inclusive index)
	                var topRowIndex = this.currRow + 1 - this.nrRollUpRows;
	                //We only copy if the last position was already shown.
	                //We use the cueStartTime value to check this.
	                var lastOutputScreen = this.lastOutputScreen;
	                if (lastOutputScreen) {
	                    var prevLineTime = lastOutputScreen.rows[topRowIndex].cueStartTime;
	                    if (prevLineTime && prevLineTime < logger.time) {
	                        for (var _i = 0; _i < this.nrRollUpRows; _i++) {
	                            this.rows[newRow - this.nrRollUpRows + _i + 1].copy(lastOutputScreen.rows[topRowIndex + _i]);
	                        }
	                    }
	                }
	            }
	
	            this.currRow = newRow;
	            var row = this.rows[this.currRow];
	            if (pacData.indent !== null) {
	                var indent = pacData.indent;
	                var prevPos = Math.max(indent - 1, 0);
	                row.setCursor(pacData.indent);
	                pacData.color = row.chars[prevPos].penState.foreground;
	            }
	            var styles = { foreground: pacData.color, underline: pacData.underline, italics: pacData.italics, background: 'black', flash: false };
	            this.setPen(styles);
	        }
	
	        /**
	         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).
	         */
	
	    }, {
	        key: 'setBkgData',
	        value: function setBkgData(bkgData) {
	
	            logger.log('INFO', 'bkgData = ' + JSON.stringify(bkgData));
	            this.backSpace();
	            this.setPen(bkgData);
	            this.insertChar(0x20); //Space
	        }
	    }, {
	        key: 'setRollUpRows',
	        value: function setRollUpRows(nrRows) {
	            this.nrRollUpRows = nrRows;
	        }
	    }, {
	        key: 'rollUp',
	        value: function rollUp() {
	            if (this.nrRollUpRows === null) {
	                logger.log('DEBUG', 'roll_up but nrRollUpRows not set yet');
	                return; //Not properly setup
	            }
	            logger.log('TEXT', this.getDisplayText());
	            var topRowIndex = this.currRow + 1 - this.nrRollUpRows;
	            var topRow = this.rows.splice(topRowIndex, 1)[0];
	            topRow.clear();
	            this.rows.splice(this.currRow, 0, topRow);
	            logger.log('INFO', 'Rolling up');
	            //logger.log('TEXT', this.get_display_text())
	        }
	
	        /**
	         * Get all non-empty rows with as unicode text.
	         */
	
	    }, {
	        key: 'getDisplayText',
	        value: function getDisplayText(asOneRow) {
	            asOneRow = asOneRow || false;
	            var displayText = [];
	            var text = '';
	            var rowNr = -1;
	            for (var i = 0; i < NR_ROWS; i++) {
	                var rowText = this.rows[i].getTextString();
	                if (rowText) {
	                    rowNr = i + 1;
	                    if (asOneRow) {
	                        displayText.push('Row ' + rowNr + ': \'' + rowText + '\'');
	                    } else {
	                        displayText.push(rowText.trim());
	                    }
	                }
	            }
	            if (displayText.length > 0) {
	                if (asOneRow) {
	                    text = '[' + displayText.join(' | ') + ']';
	                } else {
	                    text = displayText.join('\n');
	                }
	            }
	            return text;
	        }
	    }, {
	        key: 'getTextAndFormat',
	        value: function getTextAndFormat() {
	            return this.rows;
	        }
	    }]);
	
	    return CaptionScreen;
	}();
	
	//var modes = ['MODE_ROLL-UP', 'MODE_POP-ON', 'MODE_PAINT-ON', 'MODE_TEXT'];
	
	var Cea608Channel = function () {
	    function Cea608Channel(channelNumber, outputFilter) {
	        _classCallCheck(this, Cea608Channel);
	
	        this.chNr = channelNumber;
	        this.outputFilter = outputFilter;
	        this.mode = null;
	        this.verbose = 0;
	        this.displayedMemory = new CaptionScreen();
	        this.nonDisplayedMemory = new CaptionScreen();
	        this.lastOutputScreen = new CaptionScreen();
	        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];
	        this.writeScreen = this.displayedMemory;
	        this.mode = null;
	        this.cueStartTime = null; // Keeps track of where a cue started.
	    }
	
	    _createClass(Cea608Channel, [{
	        key: 'reset',
	        value: function reset() {
	            this.mode = null;
	            this.displayedMemory.reset();
	            this.nonDisplayedMemory.reset();
	            this.lastOutputScreen.reset();
	            this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];
	            this.writeScreen = this.displayedMemory;
	            this.mode = null;
	            this.cueStartTime = null;
	            this.lastCueEndTime = null;
	        }
	    }, {
	        key: 'getHandler',
	        value: function getHandler() {
	            return this.outputFilter;
	        }
	    }, {
	        key: 'setHandler',
	        value: function setHandler(newHandler) {
	            this.outputFilter = newHandler;
	        }
	    }, {
	        key: 'setPAC',
	        value: function setPAC(pacData) {
	            this.writeScreen.setPAC(pacData);
	        }
	    }, {
	        key: 'setBkgData',
	        value: function setBkgData(bkgData) {
	            this.writeScreen.setBkgData(bkgData);
	        }
	    }, {
	        key: 'setMode',
	        value: function setMode(newMode) {
	            if (newMode === this.mode) {
	                return;
	            }
	            this.mode = newMode;
	            logger.log('INFO', 'MODE=' + newMode);
	            if (this.mode === 'MODE_POP-ON') {
	                this.writeScreen = this.nonDisplayedMemory;
	            } else {
	                this.writeScreen = this.displayedMemory;
	                this.writeScreen.reset();
	            }
	            if (this.mode !== 'MODE_ROLL-UP') {
	                this.displayedMemory.nrRollUpRows = null;
	                this.nonDisplayedMemory.nrRollUpRows = null;
	            }
	            this.mode = newMode;
	        }
	    }, {
	        key: 'insertChars',
	        value: function insertChars(chars) {
	            for (var i = 0; i < chars.length; i++) {
	                this.writeScreen.insertChar(chars[i]);
	            }
	            var screen = this.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP';
	            logger.log('INFO', screen + ': ' + this.writeScreen.getDisplayText(true));
	            if (this.mode === 'MODE_PAINT-ON' || this.mode === 'MODE_ROLL-UP') {
	                logger.log('TEXT', 'DISPLAYED: ' + this.displayedMemory.getDisplayText(true));
	                this.outputDataUpdate();
	            }
	        }
	    }, {
	        key: 'ccRCL',
	        value: function ccRCL() {
	            // Resume Caption Loading (switch mode to Pop On)
	            logger.log('INFO', 'RCL - Resume Caption Loading');
	            this.setMode('MODE_POP-ON');
	        }
	    }, {
	        key: 'ccBS',
	        value: function ccBS() {
	            // BackSpace
	            logger.log('INFO', 'BS - BackSpace');
	            if (this.mode === 'MODE_TEXT') {
	                return;
	            }
	            this.writeScreen.backSpace();
	            if (this.writeScreen === this.displayedMemory) {
	                this.outputDataUpdate();
	            }
	        }
	    }, {
	        key: 'ccAOF',
	        value: function ccAOF() {
	            // Reserved (formerly Alarm Off)
	            return;
	        }
	    }, {
	        key: 'ccAON',
	        value: function ccAON() {
	            // Reserved (formerly Alarm On)
	            return;
	        }
	    }, {
	        key: 'ccDER',
	        value: function ccDER() {
	            // Delete to End of Row
	            logger.log('INFO', 'DER- Delete to End of Row');
	            this.writeScreen.clearToEndOfRow();
	            this.outputDataUpdate();
	        }
	    }, {
	        key: 'ccRU',
	        value: function ccRU(nrRows) {
	            //Roll-Up Captions-2,3,or 4 Rows
	            logger.log('INFO', 'RU(' + nrRows + ') - Roll Up');
	            this.writeScreen = this.displayedMemory;
	            this.setMode('MODE_ROLL-UP');
	            this.writeScreen.setRollUpRows(nrRows);
	        }
	    }, {
	        key: 'ccFON',
	        value: function ccFON() {
	            //Flash On
	            logger.log('INFO', 'FON - Flash On');
	            this.writeScreen.setPen({ flash: true });
	        }
	    }, {
	        key: 'ccRDC',
	        value: function ccRDC() {
	            // Resume Direct Captioning (switch mode to PaintOn)
	            logger.log('INFO', 'RDC - Resume Direct Captioning');
	            this.setMode('MODE_PAINT-ON');
	        }
	    }, {
	        key: 'ccTR',
	        value: function ccTR() {
	            // Text Restart in text mode (not supported, however)
	            logger.log('INFO', 'TR');
	            this.setMode('MODE_TEXT');
	        }
	    }, {
	        key: 'ccRTD',
	        value: function ccRTD() {
	            // Resume Text Display in Text mode (not supported, however)
	            logger.log('INFO', 'RTD');
	            this.setMode('MODE_TEXT');
	        }
	    }, {
	        key: 'ccEDM',
	        value: function ccEDM() {
	            // Erase Displayed Memory
	            logger.log('INFO', 'EDM - Erase Displayed Memory');
	            this.displayedMemory.reset();
	            this.outputDataUpdate();
	        }
	    }, {
	        key: 'ccCR',
	        value: function ccCR() {
	            // Carriage Return
	            logger.log('CR - Carriage Return');
	            this.writeScreen.rollUp();
	            this.outputDataUpdate();
	        }
	    }, {
	        key: 'ccENM',
	        value: function ccENM() {
	            //Erase Non-Displayed Memory
	            logger.log('INFO', 'ENM - Erase Non-displayed Memory');
	            this.nonDisplayedMemory.reset();
	        }
	    }, {
	        key: 'ccEOC',
	        value: function ccEOC() {
	            //End of Caption (Flip Memories)
	            logger.log('INFO', 'EOC - End Of Caption');
	            if (this.mode === 'MODE_POP-ON') {
	                var tmp = this.displayedMemory;
	                this.displayedMemory = this.nonDisplayedMemory;
	                this.nonDisplayedMemory = tmp;
	                this.writeScreen = this.nonDisplayedMemory;
	                logger.log('TEXT', 'DISP: ' + this.displayedMemory.getDisplayText());
	            }
	            this.outputDataUpdate();
	        }
	    }, {
	        key: 'ccTO',
	        value: function ccTO(nrCols) {
	            // Tab Offset 1,2, or 3 columns
	            logger.log('INFO', 'TO(' + nrCols + ') - Tab Offset');
	            this.writeScreen.moveCursor(nrCols);
	        }
	    }, {
	        key: 'ccMIDROW',
	        value: function ccMIDROW(secondByte) {
	            // Parse MIDROW command
	            var styles = { flash: false };
	            styles.underline = secondByte % 2 === 1;
	            styles.italics = secondByte >= 0x2e;
	            if (!styles.italics) {
	                var colorIndex = Math.floor(secondByte / 2) - 0x10;
	                var colors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta'];
	                styles.foreground = colors[colorIndex];
	            } else {
	                styles.foreground = 'white';
	            }
	            logger.log('INFO', 'MIDROW: ' + JSON.stringify(styles));
	            this.writeScreen.setPen(styles);
	        }
	    }, {
	        key: 'outputDataUpdate',
	        value: function outputDataUpdate() {
	            var t = logger.time;
	            if (t === null) {
	                return;
	            }
	            if (this.outputFilter) {
	                if (this.outputFilter.updateData) {
	                    this.outputFilter.updateData(t, this.displayedMemory);
	                }
	                if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) {
	                    // Start of a new cue
	                    this.cueStartTime = t;
	                } else {
	                    if (!this.displayedMemory.equals(this.lastOutputScreen)) {
	                        if (this.outputFilter.newCue) {
	                            this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);
	                        }
	                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;
	                    }
	                }
	                this.lastOutputScreen.copy(this.displayedMemory);
	            }
	        }
	    }, {
	        key: 'cueSplitAtTime',
	        value: function cueSplitAtTime(t) {
	            if (this.outputFilter) {
	                if (!this.displayedMemory.isEmpty()) {
	                    if (this.outputFilter.newCue) {
	                        this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);
	                    }
	                    this.cueStartTime = t;
	                }
	            }
	        }
	    }]);
	
	    return Cea608Channel;
	}();
	
	var Cea608Parser = function () {
	    function Cea608Parser(field, out1, out2) {
	        _classCallCheck(this, Cea608Parser);
	
	        this.field = field || 1;
	        this.outputs = [out1, out2];
	        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];
	        this.currChNr = -1; // Will be 1 or 2
	        this.lastCmdA = null; // First byte of last command
	        this.lastCmdB = null; // Second byte of last command
	        this.bufferedData = [];
	        this.startTime = null;
	        this.lastTime = null;
	        this.dataCounters = { 'padding': 0, 'char': 0, 'cmd': 0, 'other': 0 };
	    }
	
	    _createClass(Cea608Parser, [{
	        key: 'getHandler',
	        value: function getHandler(index) {
	            return this.channels[index].getHandler();
	        }
	    }, {
	        key: 'setHandler',
	        value: function setHandler(index, newHandler) {
	            this.channels[index].setHandler(newHandler);
	        }
	
	        /**
	         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.
	         */
	
	    }, {
	        key: 'addData',
	        value: function addData(t, byteList) {
	            var cmdFound,
	                a,
	                b,
	                charsFound = false;
	
	            this.lastTime = t;
	            logger.setTime(t);
	
	            for (var i = 0; i < byteList.length; i += 2) {
	                a = byteList[i] & 0x7f;
	                b = byteList[i + 1] & 0x7f;
	                if (a === 0 && b === 0) {
	                    this.dataCounters.padding += 2;
	                    continue;
	                } else {
	                    logger.log('DATA', '[' + numArrayToHexArray([byteList[i], byteList[i + 1]]) + '] -> (' + numArrayToHexArray([a, b]) + ')');
	                }
	                cmdFound = this.parseCmd(a, b);
	                if (!cmdFound) {
	                    cmdFound = this.parseMidrow(a, b);
	                }
	                if (!cmdFound) {
	                    cmdFound = this.parsePAC(a, b);
	                }
	                if (!cmdFound) {
	                    cmdFound = this.parseBackgroundAttributes(a, b);
	                }
	                if (!cmdFound) {
	                    charsFound = this.parseChars(a, b);
	                    if (charsFound) {
	                        if (this.currChNr && this.currChNr >= 0) {
	                            var channel = this.channels[this.currChNr - 1];
	                            channel.insertChars(charsFound);
	                        } else {
	                            logger.log('WARNING', 'No channel found yet. TEXT-MODE?');
	                        }
	                    }
	                }
	                if (cmdFound) {
	                    this.dataCounters.cmd += 2;
	                } else if (charsFound) {
	                    this.dataCounters.char += 2;
	                } else {
	                    this.dataCounters.other += 2;
	                    logger.log('WARNING', 'Couldn\'t parse cleaned data ' + numArrayToHexArray([a, b]) + ' orig: ' + numArrayToHexArray([byteList[i], byteList[i + 1]]));
	                }
	            }
	        }
	
	        /**
	         * Parse Command.
	         * @returns {Boolean} Tells if a command was found
	         */
	
	    }, {
	        key: 'parseCmd',
	        value: function parseCmd(a, b) {
	            var chNr = null;
	
	            var cond1 = (a === 0x14 || a === 0x1C) && 0x20 <= b && b <= 0x2F;
	            var cond2 = (a === 0x17 || a === 0x1F) && 0x21 <= b && b <= 0x23;
	            if (!(cond1 || cond2)) {
	                return false;
	            }
	
	            if (a === this.lastCmdA && b === this.lastCmdB) {
	                this.lastCmdA = null;
	                this.lastCmdB = null; // Repeated commands are dropped (once)
	                logger.log('DEBUG', 'Repeated command (' + numArrayToHexArray([a, b]) + ') is dropped');
	                return true;
	            }
	
	            if (a === 0x14 || a === 0x17) {
	                chNr = 1;
	            } else {
	                chNr = 2; // (a === 0x1C || a=== 0x1f)
	            }
	
	            var channel = this.channels[chNr - 1];
	
	            if (a === 0x14 || a === 0x1C) {
	                if (b === 0x20) {
	                    channel.ccRCL();
	                } else if (b === 0x21) {
	                    channel.ccBS();
	                } else if (b === 0x22) {
	                    channel.ccAOF();
	                } else if (b === 0x23) {
	                    channel.ccAON();
	                } else if (b === 0x24) {
	                    channel.ccDER();
	                } else if (b === 0x25) {
	                    channel.ccRU(2);
	                } else if (b === 0x26) {
	                    channel.ccRU(3);
	                } else if (b === 0x27) {
	                    channel.ccRU(4);
	                } else if (b === 0x28) {
	                    channel.ccFON();
	                } else if (b === 0x29) {
	                    channel.ccRDC();
	                } else if (b === 0x2A) {
	                    channel.ccTR();
	                } else if (b === 0x2B) {
	                    channel.ccRTD();
	                } else if (b === 0x2C) {
	                    channel.ccEDM();
	                } else if (b === 0x2D) {
	                    channel.ccCR();
	                } else if (b === 0x2E) {
	                    channel.ccENM();
	                } else if (b === 0x2F) {
	                    channel.ccEOC();
	                }
	            } else {
	                //a == 0x17 || a == 0x1F
	                channel.ccTO(b - 0x20);
	            }
	            this.lastCmdA = a;
	            this.lastCmdB = b;
	            this.currChNr = chNr;
	            return true;
	        }
	
	        /**
	         * Parse midrow styling command
	         * @returns {Boolean}
	         */
	
	    }, {
	        key: 'parseMidrow',
	        value: function parseMidrow(a, b) {
	            var chNr = null;
	
	            if ((a === 0x11 || a === 0x19) && 0x20 <= b && b <= 0x2f) {
	                if (a === 0x11) {
	                    chNr = 1;
	                } else {
	                    chNr = 2;
	                }
	                if (chNr !== this.currChNr) {
	                    logger.log('ERROR', 'Mismatch channel in midrow parsing');
	                    return false;
	                }
	                var channel = this.channels[chNr - 1];
	                channel.ccMIDROW(b);
	                logger.log('DEBUG', 'MIDROW (' + numArrayToHexArray([a, b]) + ')');
	                return true;
	            }
	            return false;
	        }
	        /**
	         * Parse Preable Access Codes (Table 53).
	         * @returns {Boolean} Tells if PAC found
	         */
	
	    }, {
	        key: 'parsePAC',
	        value: function parsePAC(a, b) {
	
	            var chNr = null;
	            var row = null;
	
	            var case1 = (0x11 <= a && a <= 0x17 || 0x19 <= a && a <= 0x1F) && 0x40 <= b && b <= 0x7F;
	            var case2 = (a === 0x10 || a === 0x18) && 0x40 <= b && b <= 0x5F;
	            if (!(case1 || case2)) {
	                return false;
	            }
	
	            if (a === this.lastCmdA && b === this.lastCmdB) {
	                this.lastCmdA = null;
	                this.lastCmdB = null;
	                return true; // Repeated commands are dropped (once)
	            }
	
	            chNr = a <= 0x17 ? 1 : 2;
	
	            if (0x40 <= b && b <= 0x5F) {
	                row = chNr === 1 ? rowsLowCh1[a] : rowsLowCh2[a];
	            } else {
	                // 0x60 <= b <= 0x7F
	                row = chNr === 1 ? rowsHighCh1[a] : rowsHighCh2[a];
	            }
	            var pacData = this.interpretPAC(row, b);
	            var channel = this.channels[chNr - 1];
	            channel.setPAC(pacData);
	            this.lastCmdA = a;
	            this.lastCmdB = b;
	            this.currChNr = chNr;
	            return true;
	        }
	
	        /**
	         * Interpret the second byte of the pac, and return the information.
	         * @returns {Object} pacData with style parameters.
	         */
	
	    }, {
	        key: 'interpretPAC',
	        value: function interpretPAC(row, byte) {
	            var pacIndex = byte;
	            var pacData = { color: null, italics: false, indent: null, underline: false, row: row };
	
	            if (byte > 0x5F) {
	                pacIndex = byte - 0x60;
	            } else {
	                pacIndex = byte - 0x40;
	            }
	            pacData.underline = (pacIndex & 1) === 1;
	            if (pacIndex <= 0xd) {
	                pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex / 2)];
	            } else if (pacIndex <= 0xf) {
	                pacData.italics = true;
	                pacData.color = 'white';
	            } else {
	                pacData.indent = Math.floor((pacIndex - 0x10) / 2) * 4;
	            }
	            return pacData; // Note that row has zero offset. The spec uses 1.
	        }
	
	        /**
	         * Parse characters.
	         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.
	         */
	
	    }, {
	        key: 'parseChars',
	        value: function parseChars(a, b) {
	
	            var channelNr = null,
	                charCodes = null,
	                charCode1 = null;
	
	            if (a >= 0x19) {
	                channelNr = 2;
	                charCode1 = a - 8;
	            } else {
	                channelNr = 1;
	                charCode1 = a;
	            }
	            if (0x11 <= charCode1 && charCode1 <= 0x13) {
	                // Special character
	                var oneCode = b;
	                if (charCode1 === 0x11) {
	                    oneCode = b + 0x50;
	                } else if (charCode1 === 0x12) {
	                    oneCode = b + 0x70;
	                } else {
	                    oneCode = b + 0x90;
	                }
	                logger.log('INFO', 'Special char \'' + getCharForByte(oneCode) + '\' in channel ' + channelNr);
	                charCodes = [oneCode];
	            } else if (0x20 <= a && a <= 0x7f) {
	                charCodes = b === 0 ? [a] : [a, b];
	            }
	            if (charCodes) {
	                var hexCodes = numArrayToHexArray(charCodes);
	                logger.log('DEBUG', 'Char codes =  ' + hexCodes.join(','));
	                this.lastCmdA = null;
	                this.lastCmdB = null;
	            }
	            return charCodes;
	        }
	
	        /**
	        * Parse extended background attributes as well as new foreground color black.
	        * @returns{Boolean} Tells if background attributes are found
	        */
	
	    }, {
	        key: 'parseBackgroundAttributes',
	        value: function parseBackgroundAttributes(a, b) {
	            var bkgData, index, chNr, channel;
	
	            var case1 = (a === 0x10 || a === 0x18) && 0x20 <= b && b <= 0x2f;
	            var case2 = (a === 0x17 || a === 0x1f) && 0x2d <= b && b <= 0x2f;
	            if (!(case1 || case2)) {
	                return false;
	            }
	            bkgData = {};
	            if (a === 0x10 || a === 0x18) {
	                index = Math.floor((b - 0x20) / 2);
	                bkgData.background = backgroundColors[index];
	                if (b % 2 === 1) {
	                    bkgData.background = bkgData.background + '_semi';
	                }
	            } else if (b === 0x2d) {
	                bkgData.background = 'transparent';
	            } else {
	                bkgData.foreground = 'black';
	                if (b === 0x2f) {
	                    bkgData.underline = true;
	                }
	            }
	            chNr = a < 0x18 ? 1 : 2;
	            channel = this.channels[chNr - 1];
	            channel.setBkgData(bkgData);
	            this.lastCmdA = null;
	            this.lastCmdB = null;
	            return true;
	        }
	
	        /**
	         * Reset state of parser and its channels.
	         */
	
	    }, {
	        key: 'reset',
	        value: function reset() {
	            for (var i = 0; i < this.channels.length; i++) {
	                if (this.channels[i]) {
	                    this.channels[i].reset();
	                }
	            }
	            this.lastCmdA = null;
	            this.lastCmdB = null;
	        }
	
	        /**
	         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.
	         */
	
	    }, {
	        key: 'cueSplitAtTime',
	        value: function cueSplitAtTime(t) {
	            for (var i = 0; i < this.channels.length; i++) {
	                if (this.channels[i]) {
	                    this.channels[i].cueSplitAtTime(t);
	                }
	            }
	        }
	    }]);
	
	    return Cea608Parser;
	}();
	
	exports.default = Cea608Parser;
	
	},{}],47:[function(_dereq_,module,exports){
	'use strict';
	
	var _vttparser = _dereq_(53);
	
	var Cues = {
	
	  newCue: function newCue(track, startTime, endTime, captionScreen) {
	    var row;
	    var cue;
	    var indenting;
	    var indent;
	    var text;
	    var VTTCue = window.VTTCue || window.TextTrackCue;
	
	    for (var r = 0; r < captionScreen.rows.length; r++) {
	      row = captionScreen.rows[r];
	      indenting = true;
	      indent = 0;
	      text = '';
	
	      if (!row.isEmpty()) {
	        for (var c = 0; c < row.chars.length; c++) {
	          if (row.chars[c].uchar.match(/\s/) && indenting) {
	            indent++;
	          } else {
	            text += row.chars[c].uchar;
	            indenting = false;
	          }
	        }
	        //To be used for cleaning-up orphaned roll-up captions
	        row.cueStartTime = startTime;
	
	        // Give a slight bump to the endTime if it's equal to startTime to avoid a SyntaxError in IE
	        if (startTime === endTime) {
	          endTime += 0.0001;
	        }
	
	        cue = new VTTCue(startTime, endTime, (0, _vttparser.fixLineBreaks)(text.trim()));
	
	        if (indent >= 16) {
	          indent--;
	        } else {
	          indent++;
	        }
	
	        // VTTCue.line get's flakey when using controls, so let's now include line 13&14
	        // also, drop line 1 since it's to close to the top
	        if (navigator.userAgent.match(/Firefox\//)) {
	          cue.line = r + 1;
	        } else {
	          cue.line = r > 7 ? r - 2 : r + 1;
	        }
	        cue.align = 'left';
	        // Clamp the position between 0 and 100 - if out of these bounds, Firefox throws an exception and captions break
	        cue.position = Math.max(0, Math.min(100, 100 * (indent / 32) + (navigator.userAgent.match(/Firefox\//) ? 50 : 0)));
	        track.addCue(cue);
	      }
	    }
	  }
	
	};
	
	module.exports = Cues;
	
	},{"53":53}],48:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * EWMA Bandwidth Estimator
	heavily inspired from shaka-player
	racks bandwidth samples and estimates available bandwidth.
	ased on the minimum of two exponentially-weighted moving averages with
	different half-lives.
	
	
	var _ewma = _dereq_(49);
	
	var _ewma2 = _interopRequireDefault(_ewma);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var EwmaBandWidthEstimator = function () {
	  function EwmaBandWidthEstimator(hls, slow, fast, defaultEstimate) {
	    _classCallCheck(this, EwmaBandWidthEstimator);
	
	    this.hls = hls;
	    this.defaultEstimate_ = defaultEstimate;
	    this.minWeight_ = 0.001;
	    this.minDelayMs_ = 50;
	    this.slow_ = new _ewma2.default(slow);
	    this.fast_ = new _ewma2.default(fast);
	  }
	
	  _createClass(EwmaBandWidthEstimator, [{
	    key: 'sample',
	    value: function sample(durationMs, numBytes) {
	      durationMs = Math.max(durationMs, this.minDelayMs_);
	      var bandwidth = 8000 * numBytes / durationMs,
	
	      //console.log('instant bw:'+ Math.round(bandwidth));
	      // we weight sample using loading duration....
	      weight = durationMs / 1000;
	      this.fast_.sample(weight, bandwidth);
	      this.slow_.sample(weight, bandwidth);
	    }
	  }, {
	    key: 'canEstimate',
	    value: function canEstimate() {
	      var fast = this.fast_;
	      return fast && fast.getTotalWeight() >= this.minWeight_;
	    }
	  }, {
	    key: 'getEstimate',
	    value: function getEstimate() {
	      if (this.canEstimate()) {
	        //console.log('slow estimate:'+ Math.round(this.slow_.getEstimate()));
	        //console.log('fast estimate:'+ Math.round(this.fast_.getEstimate()));
	        // Take the minimum of these two estimates.  This should have the effect of
	        // adapting down quickly, but up more slowly.
	        return Math.min(this.fast_.getEstimate(), this.slow_.getEstimate());
	      } else {
	        return this.defaultEstimate_;
	      }
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {}
	  }]);
	
	  return EwmaBandWidthEstimator;
	}();
	
	exports.default = EwmaBandWidthEstimator;
	
	},{"49":49}],49:[function(_dereq_,module,exports){
	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/*
	 * compute an Exponential Weighted moving average
	 * - https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average
	 *  - heavily inspired from shaka-player
	 */
	
	var EWMA = function () {
	
	  //  About half of the estimated value will be from the last |halfLife| samples by weight.
	  function EWMA(halfLife) {
	    _classCallCheck(this, EWMA);
	
	    // Larger values of alpha expire historical data more slowly.
	    this.alpha_ = halfLife ? Math.exp(Math.log(0.5) / halfLife) : 0;
	    this.estimate_ = 0;
	    this.totalWeight_ = 0;
	  }
	
	  _createClass(EWMA, [{
	    key: "sample",
	    value: function sample(weight, value) {
	      var adjAlpha = Math.pow(this.alpha_, weight);
	      this.estimate_ = value * (1 - adjAlpha) + adjAlpha * this.estimate_;
	      this.totalWeight_ += weight;
	    }
	  }, {
	    key: "getTotalWeight",
	    value: function getTotalWeight() {
	      return this.totalWeight_;
	    }
	  }, {
	    key: "getEstimate",
	    value: function getEstimate() {
	      if (this.alpha_) {
	        var zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);
	        return this.estimate_ / zeroFactor;
	      } else {
	        return this.estimate_;
	      }
	    }
	  }]);
	
	  return EWMA;
	}();
	
	exports.default = EWMA;
	
	},{}],50:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	function noop() {}
	
	var fakeLogger = {
	  trace: noop,
	  debug: noop,
	  log: noop,
	  warn: noop,
	  info: noop,
	  error: noop
	};
	
	var exportedLogger = fakeLogger;
	
	/*globals self: false */
	
	//let lastCallTime;
	// function formatMsgWithTimeInfo(type, msg) {
	//   const now = Date.now();
	//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';
	//   lastCallTime = now;
	//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';
	//   return msg;
	// }
	
	function formatMsg(type, msg) {
	  msg = '[' + type + '] > ' + msg;
	  return msg;
	}
	
	function consolePrintFn(type) {
	  var func = self.console[type];
	  if (func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      if (args[0]) {
	        args[0] = formatMsg(type, args[0]);
	      }
	      func.apply(self.console, args);
	    };
	  }
	  return noop;
	}
	
	function exportLoggerFunctions(debugConfig) {
	  for (var _len2 = arguments.length, functions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	    functions[_key2 - 1] = arguments[_key2];
	  }
	
	  functions.forEach(function (type) {
	    exportedLogger[type] = debugConfig[type] ? debugConfig[type].bind(debugConfig) : consolePrintFn(type);
	  });
	}
	
	var enableLogs = exports.enableLogs = function enableLogs(debugConfig) {
	  if (debugConfig === true || (typeof debugConfig === 'undefined' ? 'undefined' : _typeof(debugConfig)) === 'object') {
	    exportLoggerFunctions(debugConfig,
	    // Remove out from list here to hard-disable a log-level
	    //'trace',
	    'debug', 'log', 'info', 'warn', 'error');
	    // Some browsers don't allow to use bind on console object anyway
	    // fallback to default if needed
	    try {
	      exportedLogger.log();
	    } catch (e) {
	      exportedLogger = fakeLogger;
	    }
	  } else {
	    exportedLogger = fakeLogger;
	  }
	};
	
	var logger = exports.logger = exportedLogger;
	
	},{}],51:[function(_dereq_,module,exports){
	'use strict';
	
	/**
	 *  TimeRanges to string helper
	 */
	
	var TimeRanges = {
	  toString: function toString(r) {
	    var log = '',
	        len = r.length;
	    for (var i = 0; i < len; i++) {
	      log += '[' + r.start(i).toFixed(3) + ',' + r.end(i).toFixed(3) + ']';
	    }
	    return log;
	  }
	};
	
	module.exports = TimeRanges;
	
	},{}],52:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	/**
	 * Copyright 2013 vtt.js Contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	
	exports.default = function () {
	  if (typeof window !== 'undefined' && window.VTTCue) {
	    return window.VTTCue;
	  }
	
	  var autoKeyword = 'auto';
	  var directionSetting = {
	    '': true,
	    lr: true,
	    rl: true
	  };
	  var alignSetting = {
	    start: true,
	    middle: true,
	    end: true,
	    left: true,
	    right: true
	  };
	
	  function findDirectionSetting(value) {
	    if (typeof value !== 'string') {
	      return false;
	    }
	    var dir = directionSetting[value.toLowerCase()];
	    return dir ? value.toLowerCase() : false;
	  }
	
	  function findAlignSetting(value) {
	    if (typeof value !== 'string') {
	      return false;
	    }
	    var align = alignSetting[value.toLowerCase()];
	    return align ? value.toLowerCase() : false;
	  }
	
	  function extend(obj) {
	    var i = 1;
	    for (; i < arguments.length; i++) {
	      var cobj = arguments[i];
	      for (var p in cobj) {
	        obj[p] = cobj[p];
	      }
	    }
	
	    return obj;
	  }
	
	  function VTTCue(startTime, endTime, text) {
	    var cue = this;
	    var isIE8 = function () {
	      if (typeof navigator === 'undefined') {
	        return;
	      }
	      return (/MSIE\s8\.0/.test(navigator.userAgent)
	      );
	    }();
	    var baseObj = {};
	
	    if (isIE8) {
	      cue = document.createElement('custom');
	    } else {
	      baseObj.enumerable = true;
	    }
	
	    /**
	     * Shim implementation specific properties. These properties are not in
	     * the spec.
	     */
	
	    // Lets us know when the VTTCue's data has changed in such a way that we need
	    // to recompute its display state. This lets us compute its display state
	    // lazily.
	    cue.hasBeenReset = false;
	
	    /**
	     * VTTCue and TextTrackCue properties
	     * http://dev.w3.org/html5/webvtt/#vttcue-interface
	     */
	
	    var _id = '';
	    var _pauseOnExit = false;
	    var _startTime = startTime;
	    var _endTime = endTime;
	    var _text = text;
	    var _region = null;
	    var _vertical = '';
	    var _snapToLines = true;
	    var _line = 'auto';
	    var _lineAlign = 'start';
	    var _position = 50;
	    var _positionAlign = 'middle';
	    var _size = 50;
	    var _align = 'middle';
	
	    Object.defineProperty(cue, 'id', extend({}, baseObj, {
	      get: function get() {
	        return _id;
	      },
	      set: function set(value) {
	        _id = '' + value;
	      }
	    }));
	
	    Object.defineProperty(cue, 'pauseOnExit', extend({}, baseObj, {
	      get: function get() {
	        return _pauseOnExit;
	      },
	      set: function set(value) {
	        _pauseOnExit = !!value;
	      }
	    }));
	
	    Object.defineProperty(cue, 'startTime', extend({}, baseObj, {
	      get: function get() {
	        return _startTime;
	      },
	      set: function set(value) {
	        if (typeof value !== 'number') {
	          throw new TypeError('Start time must be set to a number.');
	        }
	        _startTime = value;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'endTime', extend({}, baseObj, {
	      get: function get() {
	        return _endTime;
	      },
	      set: function set(value) {
	        if (typeof value !== 'number') {
	          throw new TypeError('End time must be set to a number.');
	        }
	        _endTime = value;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'text', extend({}, baseObj, {
	      get: function get() {
	        return _text;
	      },
	      set: function set(value) {
	        _text = '' + value;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'region', extend({}, baseObj, {
	      get: function get() {
	        return _region;
	      },
	      set: function set(value) {
	        _region = value;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'vertical', extend({}, baseObj, {
	      get: function get() {
	        return _vertical;
	      },
	      set: function set(value) {
	        var setting = findDirectionSetting(value);
	        // Have to check for false because the setting an be an empty string.
	        if (setting === false) {
	          throw new SyntaxError('An invalid or illegal string was specified.');
	        }
	        _vertical = setting;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'snapToLines', extend({}, baseObj, {
	      get: function get() {
	        return _snapToLines;
	      },
	      set: function set(value) {
	        _snapToLines = !!value;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'line', extend({}, baseObj, {
	      get: function get() {
	        return _line;
	      },
	      set: function set(value) {
	        if (typeof value !== 'number' && value !== autoKeyword) {
	          throw new SyntaxError('An invalid number or illegal string was specified.');
	        }
	        _line = value;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'lineAlign', extend({}, baseObj, {
	      get: function get() {
	        return _lineAlign;
	      },
	      set: function set(value) {
	        var setting = findAlignSetting(value);
	        if (!setting) {
	          throw new SyntaxError('An invalid or illegal string was specified.');
	        }
	        _lineAlign = setting;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'position', extend({}, baseObj, {
	      get: function get() {
	        return _position;
	      },
	      set: function set(value) {
	        if (value < 0 || value > 100) {
	          throw new Error('Position must be between 0 and 100.');
	        }
	        _position = value;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'positionAlign', extend({}, baseObj, {
	      get: function get() {
	        return _positionAlign;
	      },
	      set: function set(value) {
	        var setting = findAlignSetting(value);
	        if (!setting) {
	          throw new SyntaxError('An invalid or illegal string was specified.');
	        }
	        _positionAlign = setting;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'size', extend({}, baseObj, {
	      get: function get() {
	        return _size;
	      },
	      set: function set(value) {
	        if (value < 0 || value > 100) {
	          throw new Error('Size must be between 0 and 100.');
	        }
	        _size = value;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    Object.defineProperty(cue, 'align', extend({}, baseObj, {
	      get: function get() {
	        return _align;
	      },
	      set: function set(value) {
	        var setting = findAlignSetting(value);
	        if (!setting) {
	          throw new SyntaxError('An invalid or illegal string was specified.');
	        }
	        _align = setting;
	        this.hasBeenReset = true;
	      }
	    }));
	
	    /**
	     * Other <track> spec defined properties
	     */
	
	    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state
	    cue.displayState = undefined;
	
	    if (isIE8) {
	      return cue;
	    }
	  }
	
	  /**
	   * VTTCue methods
	   */
	
	  VTTCue.prototype.getCueAsHTML = function () {
	    // Assume WebVTT.convertCueToDOMTree is on the global.
	    var WebVTT = window.WebVTT;
	    return WebVTT.convertCueToDOMTree(window, this.text);
	  };
	
	  return VTTCue;
	}();
	
	},{}],53:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.fixLineBreaks = undefined;
	
	var _vttcue = _dereq_(52);
	
	var _vttcue2 = _interopRequireDefault(_vttcue);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var StringDecoder = function StringDecoder() {
	  return {
	    decode: function decode(data) {
	      if (!data) {
	        return '';
	      }
	      if (typeof data !== 'string') {
	        throw new Error('Error - expected string data.');
	      }
	      return decodeURIComponent(encodeURIComponent(data));
	    }
	  };
	}; /*
	    * Source: https://github.com/mozilla/vtt.js/blob/master/dist/vtt.js#L1716
	    */
	
	function VTTParser() {
	  this.window = window;
	  this.state = 'INITIAL';
	  this.buffer = '';
	  this.decoder = new StringDecoder();
	  this.regionList = [];
	}
	
	// Try to parse input as a time stamp.
	function parseTimeStamp(input) {
	
	  function computeSeconds(h, m, s, f) {
	    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;
	  }
	
	  var m = input.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
	  if (!m) {
	    return null;
	  }
	
	  if (m[3]) {
	    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]
	    return computeSeconds(m[1], m[2], m[3].replace(':', ''), m[4]);
	  } else if (m[1] > 59) {
	    // Timestamp takes the form of [hours]:[minutes].[milliseconds]
	    // First position is hours as it's over 59.
	    return computeSeconds(m[1], m[2], 0, m[4]);
	  } else {
	    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]
	    return computeSeconds(0, m[1], m[2], m[4]);
	  }
	}
	
	// A settings object holds key/value pairs and will ignore anything but the first
	// assignment to a specific key.
	function Settings() {
	  this.values = Object.create(null);
	}
	
	Settings.prototype = {
	  // Only accept the first assignment to any key.
	  set: function set(k, v) {
	    if (!this.get(k) && v !== '') {
	      this.values[k] = v;
	    }
	  },
	  // Return the value for a key, or a default value.
	  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with
	  // a number of possible default values as properties where 'defaultKey' is
	  // the key of the property that will be chosen; otherwise it's assumed to be
	  // a single value.
	  get: function get(k, dflt, defaultKey) {
	    if (defaultKey) {
	      return this.has(k) ? this.values[k] : dflt[defaultKey];
	    }
	    return this.has(k) ? this.values[k] : dflt;
	  },
	  // Check whether we have a value for a key.
	  has: function has(k) {
	    return k in this.values;
	  },
	  // Accept a setting if its one of the given alternatives.
	  alt: function alt(k, v, a) {
	    for (var n = 0; n < a.length; ++n) {
	      if (v === a[n]) {
	        this.set(k, v);
	        break;
	      }
	    }
	  },
	  // Accept a setting if its a valid (signed) integer.
	  integer: function integer(k, v) {
	    if (/^-?\d+$/.test(v)) {
	      // integer
	      this.set(k, parseInt(v, 10));
	    }
	  },
	  // Accept a setting if its a valid percentage.
	  percent: function percent(k, v) {
	    var m;
	    if (m = v.match(/^([\d]{1,3})(\.[\d]*)?%$/)) {
	      v = parseFloat(v);
	      if (v >= 0 && v <= 100) {
	        this.set(k, v);
	        return true;
	      }
	    }
	    return false;
	  }
	};
	
	// Helper function to parse input into groups separated by 'groupDelim', and
	// interprete each group as a key/value pair separated by 'keyValueDelim'.
	function parseOptions(input, callback, keyValueDelim, groupDelim) {
	  var groups = groupDelim ? input.split(groupDelim) : [input];
	  for (var i in groups) {
	    if (typeof groups[i] !== 'string') {
	      continue;
	    }
	    var kv = groups[i].split(keyValueDelim);
	    if (kv.length !== 2) {
	      continue;
	    }
	    var k = kv[0];
	    var v = kv[1];
	    callback(k, v);
	  }
	}
	
	var defaults = new _vttcue2.default(0, 0, 0);
	// 'middle' was changed to 'center' in the spec: https://github.com/w3c/webvtt/pull/244
	// Chrome and Safari don't yet support this change, but FF does
	var center = defaults.align === 'middle' ? 'middle' : 'center';
	
	function parseCue(input, cue, regionList) {
	  // Remember the original input if we need to throw an error.
	  var oInput = input;
	  // 4.1 WebVTT timestamp
	  function consumeTimeStamp() {
	    var ts = parseTimeStamp(input);
	    if (ts === null) {
	      throw new Error('Malformed timestamp: ' + oInput);
	    }
	    // Remove time stamp from input.
	    input = input.replace(/^[^\sa-zA-Z-]+/, '');
	    return ts;
	  }
	
	  // 4.4.2 WebVTT cue settings
	  function consumeCueSettings(input, cue) {
	    var settings = new Settings();
	
	    parseOptions(input, function (k, v) {
	      switch (k) {
	        case 'region':
	          // Find the last region we parsed with the same region id.
	          for (var i = regionList.length - 1; i >= 0; i--) {
	            if (regionList[i].id === v) {
	              settings.set(k, regionList[i].region);
	              break;
	            }
	          }
	          break;
	        case 'vertical':
	          settings.alt(k, v, ['rl', 'lr']);
	          break;
	        case 'line':
	          var vals = v.split(','),
	              vals0 = vals[0];
	          settings.integer(k, vals0);
	          if (settings.percent(k, vals0)) {
	            settings.set('snapToLines', false);
	          }
	          settings.alt(k, vals0, ['auto']);
	          if (vals.length === 2) {
	            settings.alt('lineAlign', vals[1], ['start', center, 'end']);
	          }
	          break;
	        case 'position':
	          vals = v.split(',');
	          settings.percent(k, vals[0]);
	          if (vals.length === 2) {
	            settings.alt('positionAlign', vals[1], ['start', center, 'end', 'line-left', 'line-right', 'auto']);
	          }
	          break;
	        case 'size':
	          settings.percent(k, v);
	          break;
	        case 'align':
	          settings.alt(k, v, ['start', center, 'end', 'left', 'right']);
	          break;
	      }
	    }, /:/, /\s/);
	
	    // Apply default values for any missing fields.
	    cue.region = settings.get('region', null);
	    cue.vertical = settings.get('vertical', '');
	    var line = settings.get('line', 'auto');
	    if (line === 'auto' && defaults.line === -1) {
	      // set numeric line number for Safari
	      line = -1;
	    }
	    cue.line = line;
	    cue.lineAlign = settings.get('lineAlign', 'start');
	    cue.snapToLines = settings.get('snapToLines', true);
	    cue.size = settings.get('size', 100);
	    cue.align = settings.get('align', center);
	    var position = settings.get('position', 'auto');
	    if (position === 'auto' && defaults.position === 50) {
	      // set numeric position for Safari
	      position = cue.align === 'start' || cue.align === 'left' ? 0 : cue.align === 'end' || cue.align === 'right' ? 100 : 50;
	    }
	    cue.position = position;
	  }
	
	  function skipWhitespace() {
	    input = input.replace(/^\s+/, '');
	  }
	
	  // 4.1 WebVTT cue timings.
	  skipWhitespace();
	  cue.startTime = consumeTimeStamp(); // (1) collect cue start time
	  skipWhitespace();
	  if (input.substr(0, 3) !== '-->') {
	    // (3) next characters must match '-->'
	    throw new Error('Malformed time stamp (time stamps must be separated by \'-->\'): ' + oInput);
	  }
	  input = input.substr(3);
	  skipWhitespace();
	  cue.endTime = consumeTimeStamp(); // (5) collect cue end time
	
	  // 4.1 WebVTT cue settings list.
	  skipWhitespace();
	  consumeCueSettings(input, cue);
	}
	
	function fixLineBreaks(input) {
	  return input.replace(/<br(?: \/)?>/gi, '\n');
	}
	
	VTTParser.prototype = {
	  parse: function parse(data) {
	    var self = this;
	
	    // If there is no data then we won't decode it, but will just try to parse
	    // whatever is in buffer already. This may occur in circumstances, for
	    // example when flush() is called.
	    if (data) {
	      // Try to decode the data that we received.
	      self.buffer += self.decoder.decode(data, { stream: true });
	    }
	
	    function collectNextLine() {
	      var buffer = self.buffer;
	      var pos = 0;
	
	      buffer = fixLineBreaks(buffer);
	
	      while (pos < buffer.length && buffer[pos] !== '\r' && buffer[pos] !== '\n') {
	        ++pos;
	      }
	      var line = buffer.substr(0, pos);
	      // Advance the buffer early in case we fail below.
	      if (buffer[pos] === '\r') {
	        ++pos;
	      }
	      if (buffer[pos] === '\n') {
	        ++pos;
	      }
	      self.buffer = buffer.substr(pos);
	      return line;
	    }
	
	    // 3.2 WebVTT metadata header syntax
	    function parseHeader(input) {
	      parseOptions(input, function (k, v) {
	        switch (k) {
	          case 'Region':
	            // 3.3 WebVTT region metadata header syntax
	            console.log('parse region', v);
	            //parseRegion(v);
	            break;
	        }
	      }, /:/);
	    }
	
	    // 5.1 WebVTT file parsing.
	    try {
	      var line;
	      if (self.state === 'INITIAL') {
	        // We can't start parsing until we have the first line.
	        if (!/\r\n|\n/.test(self.buffer)) {
	          return this;
	        }
	
	        line = collectNextLine();
	
	        var m = line.match(/^WEBVTT([ \t].*)?$/);
	        if (!m || !m[0]) {
	          throw new Error('Malformed WebVTT signature.');
	        }
	
	        self.state = 'HEADER';
	      }
	
	      var alreadyCollectedLine = false;
	      while (self.buffer) {
	        // We can't parse a line until we have the full line.
	        if (!/\r\n|\n/.test(self.buffer)) {
	          return this;
	        }
	
	        if (!alreadyCollectedLine) {
	          line = collectNextLine();
	        } else {
	          alreadyCollectedLine = false;
	        }
	
	        switch (self.state) {
	          case 'HEADER':
	            // 13-18 - Allow a header (metadata) under the WEBVTT line.
	            if (/:/.test(line)) {
	              parseHeader(line);
	            } else if (!line) {
	              // An empty line terminates the header and starts the body (cues).
	              self.state = 'ID';
	            }
	            continue;
	          case 'NOTE':
	            // Ignore NOTE blocks.
	            if (!line) {
	              self.state = 'ID';
	            }
	            continue;
	          case 'ID':
	            // Check for the start of NOTE blocks.
	            if (/^NOTE($|[ \t])/.test(line)) {
	              self.state = 'NOTE';
	              break;
	            }
	            // 19-29 - Allow any number of line terminators, then initialize new cue values.
	            if (!line) {
	              continue;
	            }
	            self.cue = new _vttcue2.default(0, 0, '');
	            self.state = 'CUE';
	            // 30-39 - Check if self line contains an optional identifier or timing data.
	            if (line.indexOf('-->') === -1) {
	              self.cue.id = line;
	              continue;
	            }
	          // Process line as start of a cue.
	          /*falls through*/
	          case 'CUE':
	            // 40 - Collect cue timings and settings.
	            try {
	              parseCue(line, self.cue, self.regionList);
	            } catch (e) {
	              // In case of an error ignore rest of the cue.
	              self.cue = null;
	              self.state = 'BADCUE';
	              continue;
	            }
	            self.state = 'CUETEXT';
	            continue;
	          case 'CUETEXT':
	            var hasSubstring = line.indexOf('-->') !== -1;
	            // 34 - If we have an empty line then report the cue.
	            // 35 - If we have the special substring '-->' then report the cue,
	            // but do not collect the line as we need to process the current
	            // one as a new cue.
	            if (!line || hasSubstring && (alreadyCollectedLine = true)) {
	              // We are done parsing self cue.
	              if (self.oncue) {
	                self.oncue(self.cue);
	              }
	              self.cue = null;
	              self.state = 'ID';
	              continue;
	            }
	            if (self.cue.text) {
	              self.cue.text += '\n';
	            }
	            self.cue.text += line;
	            continue;
	          case 'BADCUE':
	            // BADCUE
	            // 54-62 - Collect and discard the remaining cue.
	            if (!line) {
	              self.state = 'ID';
	            }
	            continue;
	        }
	      }
	    } catch (e) {
	
	      // If we are currently parsing a cue, report what we have.
	      if (self.state === 'CUETEXT' && self.cue && self.oncue) {
	        self.oncue(self.cue);
	      }
	      self.cue = null;
	      // Enter BADWEBVTT state if header was not parsed correctly otherwise
	      // another exception occurred so enter BADCUE state.
	      self.state = self.state === 'INITIAL' ? 'BADWEBVTT' : 'BADCUE';
	    }
	    return this;
	  },
	  flush: function flush() {
	    var self = this;
	    try {
	      // Finish decoding the stream.
	      self.buffer += self.decoder.decode();
	      // Synthesize the end of the current cue or region.
	      if (self.cue || self.state === 'HEADER') {
	        self.buffer += '\n\n';
	        self.parse();
	      }
	      // If we've flushed, parsed, and we're still on the INITIAL state then
	      // that means we don't have enough of the stream to parse the first
	      // line.
	      if (self.state === 'INITIAL') {
	        throw new Error('Malformed WebVTT signature.');
	      }
	    } catch (e) {
	      throw e;
	    }
	    if (self.onflush) {
	      self.onflush();
	    }
	    return this;
	  }
	};
	
	exports.fixLineBreaks = fixLineBreaks;
	exports.default = VTTParser;
	
	},{"52":52}],54:[function(_dereq_,module,exports){
	'use strict';
	
	var _vttparser = _dereq_(53);
	
	var _vttparser2 = _interopRequireDefault(_vttparser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var cueString2millis = function cueString2millis(timeString) {
	    var ts = parseInt(timeString.substr(-3));
	    var secs = parseInt(timeString.substr(-6, 2));
	    var mins = parseInt(timeString.substr(-9, 2));
	    var hours = timeString.length > 9 ? parseInt(timeString.substr(0, timeString.indexOf(':'))) : 0;
	
	    if (isNaN(ts) || isNaN(secs) || isNaN(mins) || isNaN(hours)) {
	        return -1;
	    }
	
	    ts += 1000 * secs;
	    ts += 60 * 1000 * mins;
	    ts += 60 * 60 * 1000 * hours;
	
	    return ts;
	};
	
	var calculateOffset = function calculateOffset(vttCCs, cc, presentationTime) {
	    var currCC = vttCCs[cc];
	    var prevCC = vttCCs[currCC.prevCC];
	
	    // This is the first discontinuity or cues have been processed since the last discontinuity
	    // Offset = current discontinuity time
	    if (!prevCC || !prevCC.new && currCC.new) {
	        vttCCs.ccOffset = vttCCs.presentationOffset = currCC.start;
	        currCC.new = false;
	        return;
	    }
	
	    // There have been discontinuities since cues were last parsed.
	    // Offset = time elapsed
	    while (prevCC && prevCC.new) {
	        vttCCs.ccOffset += currCC.start - prevCC.start;
	        currCC.new = false;
	        currCC = prevCC;
	        prevCC = vttCCs[currCC.prevCC];
	    }
	
	    vttCCs.presentationOffset = presentationTime;
	};
	
	var WebVTTParser = {
	    parse: function parse(vttByteArray, syncPTS, vttCCs, cc, callBack, errorCallBack) {
	        // Convert byteArray into string, replacing any somewhat exotic linefeeds with "\n", then split on that character.
	        var re = /\r\n|\n\r|\n|\r/g;
	        var vttLines = String.fromCharCode.apply(null, new Uint8Array(vttByteArray)).trim().replace(re, '\n').split('\n');
	        var cueTime = '00:00.000';
	        var mpegTs = 0;
	        var localTime = 0;
	        var presentationTime = 0;
	        var cues = [];
	        var parsingError = void 0;
	        var inHeader = true;
	        // let VTTCue = VTTCue || window.TextTrackCue;
	
	        // Create parser object using VTTCue with TextTrackCue fallback on certain browsers.
	        var parser = new _vttparser2.default();
	
	        parser.oncue = function (cue) {
	            // Adjust cue timing; clamp cues to start no earlier than - and drop cues that don't end after - 0 on timeline.
	            var currCC = vttCCs[cc];
	            var cueOffset = vttCCs.ccOffset;
	
	            // Update offsets for new discontinuities
	            if (currCC && currCC.new) {
	                if (localTime) {
	                    // When local time is provided, offset = discontinuity start time - local time
	                    cueOffset = vttCCs.ccOffset = currCC.start;
	                } else {
	                    calculateOffset(vttCCs, cc, presentationTime);
	                }
	            }
	
	            if (presentationTime && !localTime) {
	                // If we have MPEGTS but no LOCAL time, offset = presentation time + discontinuity offset
	                cueOffset = presentationTime + vttCCs.ccOffset - vttCCs.presentationOffset;
	            }
	
	            cue.startTime += cueOffset - localTime;
	            cue.endTime += cueOffset - localTime;
	
	            // Fix encoding of special characters. TODO: Test with all sorts of weird characters.
	            cue.text = decodeURIComponent(escape(cue.text));
	            if (cue.endTime > 0) {
	                cues.push(cue);
	            }
	        };
	
	        parser.onparsingerror = function (e) {
	            parsingError = e;
	        };
	
	        parser.onflush = function () {
	            if (parsingError && errorCallBack) {
	                errorCallBack(parsingError);
	                return;
	            }
	            callBack(cues);
	        };
	
	        // Go through contents line by line.
	        vttLines.forEach(function (line) {
	            if (inHeader) {
	                // Look for X-TIMESTAMP-MAP in header.
	                if (line.startsWith('X-TIMESTAMP-MAP=')) {
	                    // Once found, no more are allowed anyway, so stop searching.
	                    inHeader = false;
	                    // Extract LOCAL and MPEGTS.
	                    line.substr(16).split(',').forEach(function (timestamp) {
	                        if (timestamp.startsWith('LOCAL:')) {
	                            cueTime = timestamp.substr(6);
	                        } else if (timestamp.startsWith('MPEGTS:')) {
	                            mpegTs = parseInt(timestamp.substr(7));
	                        }
	                    });
	                    try {
	                        // Calculate subtitle offset in milliseconds.
	                        // If sync PTS is less than zero, we have a 33-bit wraparound, which is fixed by adding 2^33 = 8589934592.
	                        syncPTS = syncPTS < 0 ? syncPTS + 8589934592 : syncPTS;
	                        // Adjust MPEGTS by sync PTS.
	                        mpegTs -= syncPTS;
	                        // Convert cue time to seconds
	                        localTime = cueString2millis(cueTime) / 1000;
	                        // Convert MPEGTS to seconds from 90kHz.
	                        presentationTime = mpegTs / 90000;
	
	                        if (localTime === -1) {
	                            parsingError = new Error('Malformed X-TIMESTAMP-MAP: ' + line);
	                        }
	                    } catch (e) {
	                        parsingError = new Error('Malformed X-TIMESTAMP-MAP: ' + line);
	                    }
	                    // Return without parsing X-TIMESTAMP-MAP line.
	                    return;
	                } else if (line === '') {
	                    inHeader = false;
	                }
	            }
	            // Parse line by default.
	            parser.parse(line + '\n');
	        });
	
	        parser.flush();
	    }
	};
	
	module.exports = WebVTTParser;
	
	},{"53":53}],55:[function(_dereq_,module,exports){
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
	based logger
	
	
	var _logger = _dereq_(50);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var XhrLoader = function () {
	  function XhrLoader(config) {
	    _classCallCheck(this, XhrLoader);
	
	    if (config && config.xhrSetup) {
	      this.xhrSetup = config.xhrSetup;
	    }
	  }
	
	  _createClass(XhrLoader, [{
	    key: 'destroy',
	    value: function destroy() {
	      this.abort();
	      this.loader = null;
	    }
	  }, {
	    key: 'abort',
	    value: function abort() {
	      var loader = this.loader;
	      if (loader && loader.readyState !== 4) {
	        this.stats.aborted = true;
	        loader.abort();
	      }
	
	      window.clearTimeout(this.requestTimeout);
	      this.requestTimeout = null;
	      window.clearTimeout(this.retryTimeout);
	      this.retryTimeout = null;
	    }
	  }, {
	    key: 'load',
	    value: function load(context, config, callbacks) {
	      this.context = context;
	      this.config = config;
	      this.callbacks = callbacks;
	      this.stats = { trequest: performance.now(), retry: 0 };
	      this.retryDelay = config.retryDelay;
	      this.loadInternal();
	    }
	  }, {
	    key: 'loadInternal',
	    value: function loadInternal() {
	      var xhr,
	          context = this.context;
	
	      if (typeof XDomainRequest !== 'undefined') {
	        xhr = this.loader = new XDomainRequest();
	      } else {
	        xhr = this.loader = new XMLHttpRequest();
	      }
	      var stats = this.stats;
	      stats.tfirst = 0;
	      stats.loaded = 0;
	      var xhrSetup = this.xhrSetup;
	      if (xhrSetup) {
	        try {
	          xhrSetup(xhr, context.url);
	        } catch (e) {
	          // fix xhrSetup: (xhr, url) => {xhr.setRequestHeader("Content-Language", "test");}
	          // not working, as xhr.setRequestHeader expects xhr.readyState === OPEN
	          xhr.open('GET', context.url, true);
	          xhrSetup(xhr, context.url);
	        }
	      }
	
	      if (!xhr.readyState) {
	        xhr.open('GET', context.url, true);
	      }
	      if (context.rangeEnd) {
	        xhr.setRequestHeader('Range', 'bytes=' + context.rangeStart + '-' + (context.rangeEnd - 1));
	      }
	      xhr.onreadystatechange = this.readystatechange.bind(this);
	      xhr.onprogress = this.loadprogress.bind(this);
	      xhr.responseType = context.responseType;
	
	      // setup timeout before we perform request
	      this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout);
	      xhr.send();
	    }
	  }, {
	    key: 'readystatechange',
	    value: function readystatechange(event) {
	      var xhr = event.currentTarget,
	          readyState = xhr.readyState,
	          stats = this.stats,
	          context = this.context,
	          config = this.config;
	
	      // don't proceed if xhr has been aborted
	      if (stats.aborted) {
	        return;
	      }
	
	      // >= HEADERS_RECEIVED
	      if (readyState >= 2) {
	        // clear xhr timeout and rearm it if readyState less than 4
	        window.clearTimeout(this.requestTimeout);
	        if (stats.tfirst === 0) {
	          stats.tfirst = Math.max(performance.now(), stats.trequest);
	        }
	        if (readyState === 4) {
	          var status = xhr.status;
	          // http status between 200 to 299 are all successful
	          if (status >= 200 && status < 300) {
	            stats.tload = Math.max(stats.tfirst, performance.now());
	            var data = void 0,
	                len = void 0;
	            if (context.responseType === 'arraybuffer') {
	              data = xhr.response;
	              len = data.byteLength;
	            } else {
	              data = xhr.responseText;
	              len = data.length;
	            }
	            stats.loaded = stats.total = len;
	            var response = { url: xhr.responseURL, data: data };
	            this.callbacks.onSuccess(response, stats, context);
	          } else {
	            // if max nb of retries reached or if http status between 400 and 499 (such error cannot be recovered, retrying is useless), return error
	            if (stats.retry >= config.maxRetry || status >= 400 && status < 499) {
	              _logger.logger.error(status + ' while loading ' + context.url);
	              this.callbacks.onError({ code: status, text: xhr.statusText }, context);
	            } else {
	              // retry
	              _logger.logger.warn(status + ' while loading ' + context.url + ', retrying in ' + this.retryDelay + '...');
	              // aborts and resets internal state
	              this.destroy();
	              // schedule retry
	              this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay);
	              // set exponential backoff
	              this.retryDelay = Math.min(2 * this.retryDelay, config.maxRetryDelay);
	              stats.retry++;
	            }
	          }
	        } else {
	          // readyState >= 2 AND readyState !==4 (readyState = HEADERS_RECEIVED || LOADING) rearm timeout as xhr not finished yet
	          this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), config.timeout);
	        }
	      }
	    }
	  }, {
	    key: 'loadtimeout',
	    value: function loadtimeout() {
	      _logger.logger.warn('timeout while loading ' + this.context.url);
	      this.callbacks.onTimeout(this.stats, this.context);
	    }
	  }, {
	    key: 'loadprogress',
	    value: function loadprogress(event) {
	      var stats = this.stats;
	      stats.loaded = event.loaded;
	      if (event.lengthComputable) {
	        stats.total = event.total;
	      }
	      var onProgress = this.callbacks.onProgress;
	      if (onProgress) {
	        // last args is to provide on progress data
	        onProgress(stats, this.context, null);
	      }
	    }
	  }]);
	
	  return XhrLoader;
	}();
	
	exports.default = XhrLoader;
	
	},{"50":50}]},{},[37])(37)
	});
	//# sourceMappingURL=hls.js.map


/***/ },
/* 540 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';
	
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};
	
	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';
	
	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);
	
	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }
	
	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {
	
	                }
	            }
	        }
	    }
	
	    return targetComponent;
	};


/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	
	Holder - client side image placeholders
	Version 2.9.4+cabil
	© 2016 Ivan Malopinsky - http://imsky.co
	
	Site:     http://holderjs.com
	Issues:   https://github.com/imsky/holder/issues
	License:  MIT
	
	*/
	(function (window) {
	  if (!window.document) return;
	  var document = window.document;
	
	  //https://github.com/inexorabletash/polyfill/blob/master/web.js
	    if (!document.querySelectorAll) {
	      document.querySelectorAll = function (selectors) {
	        var style = document.createElement('style'), elements = [], element;
	        document.documentElement.firstChild.appendChild(style);
	        document._qsa = [];
	
	        style.styleSheet.cssText = selectors + '{x-qsa:expression(document._qsa && document._qsa.push(this))}';
	        window.scrollBy(0, 0);
	        style.parentNode.removeChild(style);
	
	        while (document._qsa.length) {
	          element = document._qsa.shift();
	          element.style.removeAttribute('x-qsa');
	          elements.push(element);
	        }
	        document._qsa = null;
	        return elements;
	      };
	    }
	
	    if (!document.querySelector) {
	      document.querySelector = function (selectors) {
	        var elements = document.querySelectorAll(selectors);
	        return (elements.length) ? elements[0] : null;
	      };
	    }
	
	    if (!document.getElementsByClassName) {
	      document.getElementsByClassName = function (classNames) {
	        classNames = String(classNames).replace(/^|\s+/g, '.');
	        return document.querySelectorAll(classNames);
	      };
	    }
	
	  //https://github.com/inexorabletash/polyfill
	  // ES5 15.2.3.14 Object.keys ( O )
	  // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys
	  if (!Object.keys) {
	    Object.keys = function (o) {
	      if (o !== Object(o)) { throw TypeError('Object.keys called on non-object'); }
	      var ret = [], p;
	      for (p in o) {
	        if (Object.prototype.hasOwnProperty.call(o, p)) {
	          ret.push(p);
	        }
	      }
	      return ret;
	    };
	  }
	
	  // ES5 15.4.4.18 Array.prototype.forEach ( callbackfn [ , thisArg ] )
	  // From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach
	  if (!Array.prototype.forEach) {
	    Array.prototype.forEach = function (fun /*, thisp */) {
	      if (this === void 0 || this === null) { throw TypeError(); }
	
	      var t = Object(this);
	      var len = t.length >>> 0;
	      if (typeof fun !== "function") { throw TypeError(); }
	
	      var thisp = arguments[1], i;
	      for (i = 0; i < len; i++) {
	        if (i in t) {
	          fun.call(thisp, t[i], i, t);
	        }
	      }
	    };
	  }
	
	  //https://github.com/inexorabletash/polyfill/blob/master/web.js
	  (function (global) {
	    var B64_ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
	    global.atob = global.atob || function (input) {
	      input = String(input);
	      var position = 0,
	          output = [],
	          buffer = 0, bits = 0, n;
	
	      input = input.replace(/\s/g, '');
	      if ((input.length % 4) === 0) { input = input.replace(/=+$/, ''); }
	      if ((input.length % 4) === 1) { throw Error('InvalidCharacterError'); }
	      if (/[^+/0-9A-Za-z]/.test(input)) { throw Error('InvalidCharacterError'); }
	
	      while (position < input.length) {
	        n = B64_ALPHABET.indexOf(input.charAt(position));
	        buffer = (buffer << 6) | n;
	        bits += 6;
	
	        if (bits === 24) {
	          output.push(String.fromCharCode((buffer >> 16) & 0xFF));
	          output.push(String.fromCharCode((buffer >>  8) & 0xFF));
	          output.push(String.fromCharCode(buffer & 0xFF));
	          bits = 0;
	          buffer = 0;
	        }
	        position += 1;
	      }
	
	      if (bits === 12) {
	        buffer = buffer >> 4;
	        output.push(String.fromCharCode(buffer & 0xFF));
	      } else if (bits === 18) {
	        buffer = buffer >> 2;
	        output.push(String.fromCharCode((buffer >> 8) & 0xFF));
	        output.push(String.fromCharCode(buffer & 0xFF));
	      }
	
	      return output.join('');
	    };
	
	    global.btoa = global.btoa || function (input) {
	      input = String(input);
	      var position = 0,
	          out = [],
	          o1, o2, o3,
	          e1, e2, e3, e4;
	
	      if (/[^\x00-\xFF]/.test(input)) { throw Error('InvalidCharacterError'); }
	
	      while (position < input.length) {
	        o1 = input.charCodeAt(position++);
	        o2 = input.charCodeAt(position++);
	        o3 = input.charCodeAt(position++);
	
	        // 111111 112222 222233 333333
	        e1 = o1 >> 2;
	        e2 = ((o1 & 0x3) << 4) | (o2 >> 4);
	        e3 = ((o2 & 0xf) << 2) | (o3 >> 6);
	        e4 = o3 & 0x3f;
	
	        if (position === input.length + 2) {
	          e3 = 64; e4 = 64;
	        }
	        else if (position === input.length + 1) {
	          e4 = 64;
	        }
	
	        out.push(B64_ALPHABET.charAt(e1),
	                 B64_ALPHABET.charAt(e2),
	                 B64_ALPHABET.charAt(e3),
	                 B64_ALPHABET.charAt(e4));
	      }
	
	      return out.join('');
	    };
	  }(window));
	
	  //https://gist.github.com/jimeh/332357
	  if (!Object.prototype.hasOwnProperty){
	      /*jshint -W001, -W103 */
	      Object.prototype.hasOwnProperty = function(prop) {
	      var proto = this.__proto__ || this.constructor.prototype;
	      return (prop in this) && (!(prop in proto) || proto[prop] !== this[prop]);
	    };
	      /*jshint +W001, +W103 */
	  }
	
	  // @license http://opensource.org/licenses/MIT
	  // copyright Paul Irish 2015
	
	
	  // Date.now() is supported everywhere except IE8. For IE8 we use the Date.now polyfill
	  //   github.com/Financial-Times/polyfill-service/blob/master/polyfills/Date.now/polyfill.js
	  // as Safari 6 doesn't have support for NavigationTiming, we use a Date.now() timestamp for relative values
	
	  // if you want values similar to what you'd get with real perf.now, place this towards the head of the page
	  // but in reality, you're just getting the delta between now() calls, so it's not terribly important where it's placed
	
	
	  (function(){
	
	    if ('performance' in window === false) {
	        window.performance = {};
	    }
	    
	    Date.now = (Date.now || function () {  // thanks IE8
	      return new Date().getTime();
	    });
	
	    if ('now' in window.performance === false){
	      
	      var nowOffset = Date.now();
	      
	      if (performance.timing && performance.timing.navigationStart){
	        nowOffset = performance.timing.navigationStart;
	      }
	
	      window.performance.now = function now(){
	        return Date.now() - nowOffset;
	      };
	    }
	
	  })();
	
	  //requestAnimationFrame polyfill for older Firefox/Chrome versions
	  if (!window.requestAnimationFrame) {
	    if (window.webkitRequestAnimationFrame && window.webkitCancelAnimationFrame) {
	    //https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/requestAnimationFrame/polyfill-webkit.js
	    (function (global) {
	      global.requestAnimationFrame = function (callback) {
	        return webkitRequestAnimationFrame(function () {
	          callback(global.performance.now());
	        });
	      };
	
	      global.cancelAnimationFrame = global.webkitCancelAnimationFrame;
	    }(window));
	    } else if (window.mozRequestAnimationFrame && window.mozCancelAnimationFrame) {
	      //https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/requestAnimationFrame/polyfill-moz.js
	    (function (global) {
	      global.requestAnimationFrame = function (callback) {
	        return mozRequestAnimationFrame(function () {
	          callback(global.performance.now());
	        });
	      };
	
	      global.cancelAnimationFrame = global.mozCancelAnimationFrame;
	    }(window));
	    } else {
	    (function (global) {
	      global.requestAnimationFrame = function (callback) {
	        return global.setTimeout(callback, 1000 / 60);
	      };
	
	      global.cancelAnimationFrame = global.clearTimeout;
	    })(window);
	    }
	  }
	})(this);
	
	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else if(typeof exports === 'object')
			exports["Holder"] = factory();
		else
			root["Holder"] = factory();
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	
	
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		Holder.js - client side image placeholders
		(c) 2012-2015 Ivan Malopinsky - http://imsky.co
		*/
	
		module.exports = __webpack_require__(1);
	
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(global) {/*
		Holder.js - client side image placeholders
		(c) 2012-2016 Ivan Malopinsky - http://imsky.co
		*/
	
		//Libraries and functions
		var onDomReady = __webpack_require__(2);
		var querystring = __webpack_require__(3);
	
		var SceneGraph = __webpack_require__(6);
		var utils = __webpack_require__(7);
		var SVG = __webpack_require__(8);
		var DOM = __webpack_require__(9);
		var Color = __webpack_require__(10);
		var constants = __webpack_require__(11);
	
		var svgRenderer = __webpack_require__(12);
		var sgCanvasRenderer = __webpack_require__(15);
	
		var extend = utils.extend;
		var dimensionCheck = utils.dimensionCheck;
	
		//Constants and definitions
		var SVG_NS = constants.svg_ns;
	
		var Holder = {
		    version: constants.version,
	
		    /**
		     * Adds a theme to default settings
		     *
		     * @param {string} name Theme name
		     * @param {Object} theme Theme object, with foreground, background, size, font, and fontweight properties.
		     */
		    addTheme: function(name, theme) {
		        name != null && theme != null && (App.settings.themes[name] = theme);
		        delete App.vars.cache.themeKeys;
		        return this;
		    },
	
		    /**
		     * Appends a placeholder to an element
		     *
		     * @param {string} src Placeholder URL string
		     * @param el A selector or a reference to a DOM node
		     */
		    addImage: function(src, el) {
		        //todo: use jquery fallback if available for all QSA references
		        var nodes = DOM.getNodeArray(el);
		        nodes.forEach(function (node) {
		            var img = DOM.newEl('img');
		            var domProps = {};
		            domProps[App.setup.dataAttr] = src;
		            DOM.setAttr(img, domProps);
		            node.appendChild(img);
		        });
		        return this;
		    },
	
		    /**
		     * Sets whether or not an image is updated on resize.
		     * If an image is set to be updated, it is immediately rendered.
		     *
		     * @param {Object} el Image DOM element
		     * @param {Boolean} value Resizable update flag value
		     */
		    setResizeUpdate: function(el, value) {
		        if (el.holderData) {
		            el.holderData.resizeUpdate = !!value;
		            if (el.holderData.resizeUpdate) {
		                updateResizableElements(el);
		            }
		        }
		    },
	
		    /**
		     * Runs Holder with options. By default runs Holder on all images with "holder.js" in their source attributes.
		     *
		     * @param {Object} userOptions Options object, can contain domain, themes, images, and bgnodes properties
		     */
		    run: function(userOptions) {
		        //todo: split processing into separate queues
		        userOptions = userOptions || {};
		        var engineSettings = {};
		        var options = extend(App.settings, userOptions);
	
		        App.vars.preempted = true;
		        App.vars.dataAttr = options.dataAttr || App.setup.dataAttr;
	
		        engineSettings.renderer = options.renderer ? options.renderer : App.setup.renderer;
		        if (App.setup.renderers.join(',').indexOf(engineSettings.renderer) === -1) {
		            engineSettings.renderer = App.setup.supportsSVG ? 'svg' : (App.setup.supportsCanvas ? 'canvas' : 'html');
		        }
	
		        var images = DOM.getNodeArray(options.images);
		        var bgnodes = DOM.getNodeArray(options.bgnodes);
		        var stylenodes = DOM.getNodeArray(options.stylenodes);
		        var objects = DOM.getNodeArray(options.objects);
	
		        engineSettings.stylesheets = [];
		        engineSettings.svgXMLStylesheet = true;
		        engineSettings.noFontFallback = !!options.noFontFallback;
		        engineSettings.noBackgroundSize = !!options.noBackgroundSize;
	
		        stylenodes.forEach(function (styleNode) {
		            if (styleNode.attributes.rel && styleNode.attributes.href && styleNode.attributes.rel.value == 'stylesheet') {
		                var href = styleNode.attributes.href.value;
		                //todo: write isomorphic relative-to-absolute URL function
		                var proxyLink = DOM.newEl('a');
		                proxyLink.href = href;
		                var stylesheetURL = proxyLink.protocol + '//' + proxyLink.host + proxyLink.pathname + proxyLink.search;
		                engineSettings.stylesheets.push(stylesheetURL);
		            }
		        });
	
		        bgnodes.forEach(function (bgNode) {
		            //Skip processing background nodes if getComputedStyle is unavailable, since only modern browsers would be able to use canvas or SVG to render to background
		            if (!global.getComputedStyle) return;
		            var backgroundImage = global.getComputedStyle(bgNode, null).getPropertyValue('background-image');
		            var dataBackgroundImage = bgNode.getAttribute('data-background-src');
		            var rawURL = dataBackgroundImage || backgroundImage;
	
		            var holderURL = null;
		            var holderString = options.domain + '/';
		            var holderStringIndex = rawURL.indexOf(holderString);
	
		            if (holderStringIndex === 0) {
		                holderURL = rawURL;
		            } else if (holderStringIndex === 1 && rawURL[0] === '?') {
		                holderURL = rawURL.slice(1);
		            } else {
		                var fragment = rawURL.substr(holderStringIndex).match(/([^\"]*)"?\)/);
		                if (fragment !== null) {
		                    holderURL = fragment[1];
		                } else if (rawURL.indexOf('url(') === 0) {
		                    throw 'Holder: unable to parse background URL: ' + rawURL;
		                }
		            }
	
		            if (holderURL) {
		                var holderFlags = parseURL(holderURL, options);
		                if (holderFlags) {
		                    prepareDOMElement({
		                        mode: 'background',
		                        el: bgNode,
		                        flags: holderFlags,
		                        engineSettings: engineSettings
		                    });
		                }
		            }
		        });
	
		        objects.forEach(function (object) {
		            var objectAttr = {};
	
		            try {
		                objectAttr.data = object.getAttribute('data');
		                objectAttr.dataSrc = object.getAttribute(App.vars.dataAttr);
		            } catch (e) {}
	
		            var objectHasSrcURL = objectAttr.data != null && objectAttr.data.indexOf(options.domain) === 0;
		            var objectHasDataSrcURL = objectAttr.dataSrc != null && objectAttr.dataSrc.indexOf(options.domain) === 0;
	
		            if (objectHasSrcURL) {
		                prepareImageElement(options, engineSettings, objectAttr.data, object);
		            } else if (objectHasDataSrcURL) {
		                prepareImageElement(options, engineSettings, objectAttr.dataSrc, object);
		            }
		        });
	
		        images.forEach(function (image) {
		            var imageAttr = {};
	
		            try {
		                imageAttr.src = image.getAttribute('src');
		                imageAttr.dataSrc = image.getAttribute(App.vars.dataAttr);
		                imageAttr.rendered = image.getAttribute('data-holder-rendered');
		            } catch (e) {}
	
		            var imageHasSrc = imageAttr.src != null;
		            var imageHasDataSrcURL = imageAttr.dataSrc != null && imageAttr.dataSrc.indexOf(options.domain) === 0;
		            var imageRendered = imageAttr.rendered != null && imageAttr.rendered == 'true';
	
		            if (imageHasSrc) {
		                if (imageAttr.src.indexOf(options.domain) === 0) {
		                    prepareImageElement(options, engineSettings, imageAttr.src, image);
		                } else if (imageHasDataSrcURL) {
		                    //Image has a valid data-src and an invalid src
		                    if (imageRendered) {
		                        //If the placeholder has already been render, re-render it
		                        prepareImageElement(options, engineSettings, imageAttr.dataSrc, image);
		                    } else {
		                        //If the placeholder has not been rendered, check if the image exists and render a fallback if it doesn't
		                        (function(src, options, engineSettings, dataSrc, image) {
		                            utils.imageExists(src, function(exists) {
		                                if (!exists) {
		                                    prepareImageElement(options, engineSettings, dataSrc, image);
		                                }
		                            });
		                        })(imageAttr.src, options, engineSettings, imageAttr.dataSrc, image);
		                    }
		                }
		            } else if (imageHasDataSrcURL) {
		                prepareImageElement(options, engineSettings, imageAttr.dataSrc, image);
		            }
		        });
	
		        return this;
		    }
		};
	
		var App = {
		    settings: {
		        domain: 'holder.js',
		        images: 'img',
		        objects: 'object',
		        bgnodes: 'body .holderjs',
		        stylenodes: 'head link.holderjs',
		        themes: {
		            'gray': {
		                bg: '#EEEEEE',
		                fg: '#AAAAAA'
		            },
		            'social': {
		                bg: '#3a5a97',
		                fg: '#FFFFFF'
		            },
		            'industrial': {
		                bg: '#434A52',
		                fg: '#C2F200'
		            },
		            'sky': {
		                bg: '#0D8FDB',
		                fg: '#FFFFFF'
		            },
		            'vine': {
		                bg: '#39DBAC',
		                fg: '#1E292C'
		            },
		            'lava': {
		                bg: '#F8591A',
		                fg: '#1C2846'
		            }
		        }
		    },
		    defaults: {
		        size: 10,
		        units: 'pt',
		        scale: 1 / 16
		    }
		};
	
		/**
		 * Processes provided source attribute and sets up the appropriate rendering workflow
		 *
		 * @private
		 * @param options Instance options from Holder.run
		 * @param renderSettings Instance configuration
		 * @param src Image URL
		 * @param el Image DOM element
		 */
		function prepareImageElement(options, engineSettings, src, el) {
		    var holderFlags = parseURL(src.substr(src.lastIndexOf(options.domain)), options);
		    if (holderFlags) {
		        prepareDOMElement({
		            mode: null,
		            el: el,
		            flags: holderFlags,
		            engineSettings: engineSettings
		        });
		    }
		}
	
		/**
		 * Processes a Holder URL and extracts configuration from query string
		 *
		 * @private
		 * @param url URL
		 * @param instanceOptions Instance options from Holder.run
		 */
		function parseURL(url, instanceOptions) {
		    var holder = {
		        theme: extend(App.settings.themes.gray, null),
		        stylesheets: instanceOptions.stylesheets,
		        instanceOptions: instanceOptions
		    };
	
		    var firstQuestionMark = url.indexOf('?');
		    var parts = [url];
	
		    if (firstQuestionMark !== -1) {
		        parts = [url.slice(0, firstQuestionMark), url.slice(firstQuestionMark + 1)];
		    }
	
		    var basics = parts[0].split('/');
	
		    holder.holderURL = url;
	
		    var dimensions = basics[1];
		    var dimensionData = dimensions.match(/([\d]+p?)x([\d]+p?)/);
	
		    if (!dimensionData) return false;
	
		    holder.fluid = dimensions.indexOf('p') !== -1;
	
		    holder.dimensions = {
		        width: dimensionData[1].replace('p', '%'),
		        height: dimensionData[2].replace('p', '%')
		    };
	
		    if (parts.length === 2) {
		        var options = querystring.parse(parts[1]);
	
		        // Dimensions
	
		        if (utils.truthy(options.ratio)) {
		            holder.fluid = true;
		            var ratioWidth = parseFloat(holder.dimensions.width.replace('%', ''));
		            var ratioHeight = parseFloat(holder.dimensions.height.replace('%', ''));
	
		            ratioHeight = Math.floor(100 * (ratioHeight / ratioWidth));
		            ratioWidth = 100;
	
		            holder.dimensions.width = ratioWidth + '%';
		            holder.dimensions.height = ratioHeight + '%';
		        }
	
		        holder.auto = utils.truthy(options.auto);
	
		        // Colors
	
		        if (options.bg) {
		            holder.theme.bg = utils.parseColor(options.bg);
		        }
	
		        if (options.fg) {
		            holder.theme.fg = utils.parseColor(options.fg);
		        }
	
		        //todo: add automatic foreground to themes without foreground
		        if (options.bg && !options.fg) {
		            holder.autoFg = true;
		        }
	
		        if (options.theme && holder.instanceOptions.themes.hasOwnProperty(options.theme)) {
		            holder.theme = extend(holder.instanceOptions.themes[options.theme], null);
		        }
	
		        // Text
	
		        if (options.text) {
		            holder.text = options.text;
		        }
	
		        if (options.textmode) {
		            holder.textmode = options.textmode;
		        }
	
		        if (options.size) {
		            holder.size = options.size;
		        }
	
		        if (options.font) {
		            holder.font = options.font;
		        }
	
		        if (options.align) {
		            holder.align = options.align;
		        }
	
		        if (options.lineWrap) {
		            holder.lineWrap = options.lineWrap;
		        }
	
		        holder.nowrap = utils.truthy(options.nowrap);
	
		        // Miscellaneous
	
		        holder.outline = utils.truthy(options.outline);
	
		        if (utils.truthy(options.random)) {
		            App.vars.cache.themeKeys = App.vars.cache.themeKeys || Object.keys(holder.instanceOptions.themes);
		            var _theme = App.vars.cache.themeKeys[0 | Math.random() * App.vars.cache.themeKeys.length];
		            holder.theme = extend(holder.instanceOptions.themes[_theme], null);
		        }
		    }
	
		    return holder;
		}
	
		/**
		 * Modifies the DOM to fit placeholders and sets up resizable image callbacks (for fluid and automatically sized placeholders)
		 *
		 * @private
		 * @param settings DOM prep settings
		 */
		function prepareDOMElement(prepSettings) {
		    var mode = prepSettings.mode;
		    var el = prepSettings.el;
		    var flags = prepSettings.flags;
		    var _engineSettings = prepSettings.engineSettings;
		    var dimensions = flags.dimensions,
		        theme = flags.theme;
		    var dimensionsCaption = dimensions.width + 'x' + dimensions.height;
		    mode = mode == null ? (flags.fluid ? 'fluid' : 'image') : mode;
		    var holderTemplateRe = /holder_([a-z]+)/g;
		    var dimensionsInText = false;
	
		    if (flags.text != null) {
		        theme.text = flags.text;
	
		        //<object> SVG embedding doesn't parse Unicode properly
		        if (el.nodeName.toLowerCase() === 'object') {
		            var textLines = theme.text.split('\\n');
		            for (var k = 0; k < textLines.length; k++) {
		                textLines[k] = utils.encodeHtmlEntity(textLines[k]);
		            }
		            theme.text = textLines.join('\\n');
		        }
		    }
	
		    if (theme.text) {
		        var holderTemplateMatches = theme.text.match(holderTemplateRe);
	
		        if (holderTemplateMatches !== null) {
		            //todo: optimize template replacement
		            holderTemplateMatches.forEach(function (match) {
		                if (match === 'holder_dimensions') {
		                    theme.text = theme.text.replace(match, dimensionsCaption);
		                }
		            });
		        }
		    }
	
		    var holderURL = flags.holderURL;
		    var engineSettings = extend(_engineSettings, null);
	
		    if (flags.font) {
		        /*
		        If external fonts are used in a <img> placeholder rendered with SVG, Holder falls back to canvas.
	
		        This is done because Firefox and Chrome disallow embedded SVGs from referencing external assets.
		        The workaround is either to change the placeholder tag from <img> to <object> or to use the canvas renderer.
		        */
		        theme.font = flags.font;
		        if (!engineSettings.noFontFallback && el.nodeName.toLowerCase() === 'img' && App.setup.supportsCanvas && engineSettings.renderer === 'svg') {
		            engineSettings = extend(engineSettings, {
		                renderer: 'canvas'
		            });
		        }
		    }
	
		    //Chrome and Opera require a quick 10ms re-render if web fonts are used with canvas
		    if (flags.font && engineSettings.renderer == 'canvas') {
		        engineSettings.reRender = true;
		    }
	
		    if (mode == 'background') {
		        if (el.getAttribute('data-background-src') == null) {
		            DOM.setAttr(el, {
		                'data-background-src': holderURL
		            });
		        }
		    } else {
		        var domProps = {};
		        domProps[App.vars.dataAttr] = holderURL;
		        DOM.setAttr(el, domProps);
		    }
	
		    flags.theme = theme;
	
		    //todo consider using all renderSettings in holderData
		    el.holderData = {
		        flags: flags,
		        engineSettings: engineSettings
		    };
	
		    if (mode == 'image' || mode == 'fluid') {
		        DOM.setAttr(el, {
		            'alt': theme.text ? (dimensionsInText ? theme.text : theme.text + ' [' + dimensionsCaption + ']') : dimensionsCaption
		        });
		    }
	
		    var renderSettings = {
		        mode: mode,
		        el: el,
		        holderSettings: {
		            dimensions: dimensions,
		            theme: theme,
		            flags: flags
		        },
		        engineSettings: engineSettings
		    };
	
		    if (mode == 'image') {
		        if (!flags.auto) {
		            el.style.width = dimensions.width + 'px';
		            el.style.height = dimensions.height + 'px';
		        }
	
		        if (engineSettings.renderer == 'html') {
		            el.style.backgroundColor = theme.bg;
		        } else {
		            render(renderSettings);
	
		            if (flags.textmode == 'exact') {
		                el.holderData.resizeUpdate = true;
		                App.vars.resizableImages.push(el);
		                updateResizableElements(el);
		            }
		        }
		    } else if (mode == 'background' && engineSettings.renderer != 'html') {
		        render(renderSettings);
		    } else if (mode == 'fluid') {
		        el.holderData.resizeUpdate = true;
	
		        if (dimensions.height.slice(-1) == '%') {
		            el.style.height = dimensions.height;
		        } else if (flags.auto == null || !flags.auto) {
		            el.style.height = dimensions.height + 'px';
		        }
		        if (dimensions.width.slice(-1) == '%') {
		            el.style.width = dimensions.width;
		        } else if (flags.auto == null || !flags.auto) {
		            el.style.width = dimensions.width + 'px';
		        }
		        if (el.style.display == 'inline' || el.style.display === '' || el.style.display == 'none') {
		            el.style.display = 'block';
		        }
	
		        setInitialDimensions(el);
	
		        if (engineSettings.renderer == 'html') {
		            el.style.backgroundColor = theme.bg;
		        } else {
		            App.vars.resizableImages.push(el);
		            updateResizableElements(el);
		        }
		    }
		}
	
		/**
		 * Core function that takes output from renderers and sets it as the source or background-image of the target element
		 *
		 * @private
		 * @param renderSettings Renderer settings
		 */
		function render(renderSettings) {
		    var image = null;
		    var mode = renderSettings.mode;
		    var el = renderSettings.el;
		    var holderSettings = renderSettings.holderSettings;
		    var engineSettings = renderSettings.engineSettings;
	
		    switch (engineSettings.renderer) {
		        case 'svg':
		            if (!App.setup.supportsSVG) return;
		            break;
		        case 'canvas':
		            if (!App.setup.supportsCanvas) return;
		            break;
		        default:
		            return;
		    }
	
		    //todo: move generation of scene up to flag generation to reduce extra object creation
		    var scene = {
		        width: holderSettings.dimensions.width,
		        height: holderSettings.dimensions.height,
		        theme: holderSettings.theme,
		        flags: holderSettings.flags
		    };
	
		    var sceneGraph = buildSceneGraph(scene);
	
		    function getRenderedImage() {
		        var image = null;
		        switch (engineSettings.renderer) {
		            case 'canvas':
		                image = sgCanvasRenderer(sceneGraph, renderSettings);
		                break;
		            case 'svg':
		                image = svgRenderer(sceneGraph, renderSettings);
		                break;
		            default:
		                throw 'Holder: invalid renderer: ' + engineSettings.renderer;
		        }
	
		        return image;
		    }
	
		    image = getRenderedImage();
	
		    if (image == null) {
		        throw 'Holder: couldn\'t render placeholder';
		    }
	
		    //todo: add <object> canvas rendering
		    if (mode == 'background') {
		        el.style.backgroundImage = 'url(' + image + ')';
	
		        if (!engineSettings.noBackgroundSize) {
		            el.style.backgroundSize = scene.width + 'px ' + scene.height + 'px';
		        }
		    } else {
		        if (el.nodeName.toLowerCase() === 'img') {
		            DOM.setAttr(el, {
		                'src': image
		            });
		        } else if (el.nodeName.toLowerCase() === 'object') {
		            DOM.setAttr(el, {
		                'data': image,
		                'type': 'image/svg+xml'
		            });
		        }
		        if (engineSettings.reRender) {
		            global.setTimeout(function () {
		                var image = getRenderedImage();
		                if (image == null) {
		                    throw 'Holder: couldn\'t render placeholder';
		                }
		                //todo: refactor this code into a function
		                if (el.nodeName.toLowerCase() === 'img') {
		                    DOM.setAttr(el, {
		                        'src': image
		                    });
		                } else if (el.nodeName.toLowerCase() === 'object') {
		                    DOM.setAttr(el, {
		                        'data': image,
		                        'type': 'image/svg+xml'
		                    });
		                }
		            }, 150);
		        }
		    }
		    //todo: account for re-rendering
		    DOM.setAttr(el, {
		        'data-holder-rendered': true
		    });
		}
	
		/**
		 * Core function that takes a Holder scene description and builds a scene graph
		 *
		 * @private
		 * @param scene Holder scene object
		 */
		//todo: make this function reusable
		//todo: merge app defaults and setup properties into the scene argument
		function buildSceneGraph(scene) {
		    var fontSize = App.defaults.size;
		    if (parseFloat(scene.theme.size)) {
		        fontSize = scene.theme.size;
		    } else if (parseFloat(scene.flags.size)) {
		        fontSize = scene.flags.size;
		    }
	
		    scene.font = {
		        family: scene.theme.font ? scene.theme.font : 'Arial, Helvetica, Open Sans, sans-serif',
		        size: textSize(scene.width, scene.height, fontSize, App.defaults.scale),
		        units: scene.theme.units ? scene.theme.units : App.defaults.units,
		        weight: scene.theme.fontweight ? scene.theme.fontweight : 'bold'
		    };
	
		    scene.text = scene.theme.text || Math.floor(scene.width) + 'x' + Math.floor(scene.height);
	
		    scene.noWrap = scene.theme.nowrap || scene.flags.nowrap;
	
		    scene.align = scene.theme.align || scene.flags.align || 'center';
	
		    switch (scene.flags.textmode) {
		        case 'literal':
		            scene.text = scene.flags.dimensions.width + 'x' + scene.flags.dimensions.height;
		            break;
		        case 'exact':
		            if (!scene.flags.exactDimensions) break;
		            scene.text = Math.floor(scene.flags.exactDimensions.width) + 'x' + Math.floor(scene.flags.exactDimensions.height);
		            break;
		    }
	
		    var lineWrap = scene.flags.lineWrap || App.setup.lineWrapRatio;
		    var sceneMargin = scene.width * lineWrap;
		    var maxLineWidth = sceneMargin;
	
		    var sceneGraph = new SceneGraph({
		        width: scene.width,
		        height: scene.height
		    });
	
		    var Shape = sceneGraph.Shape;
	
		    var holderBg = new Shape.Rect('holderBg', {
		        fill: scene.theme.bg
		    });
	
		    holderBg.resize(scene.width, scene.height);
		    sceneGraph.root.add(holderBg);
	
		    if (scene.flags.outline) {
		        var outlineColor = new Color(holderBg.properties.fill);
		        outlineColor = outlineColor.lighten(outlineColor.lighterThan('7f7f7f') ? -0.1 : 0.1);
		        holderBg.properties.outline = {
		            fill: outlineColor.toHex(true),
		            width: 2
		        };
		    }
	
		    var holderTextColor = scene.theme.fg;
	
		    if (scene.flags.autoFg) {
		        var holderBgColor = new Color(holderBg.properties.fill);
		        var lightColor = new Color('fff');
		        var darkColor = new Color('000', {
		            'alpha': 0.285714
		        });
	
		        holderTextColor = holderBgColor.blendAlpha(holderBgColor.lighterThan('7f7f7f') ? darkColor : lightColor).toHex(true);
		    }
	
		    var holderTextGroup = new Shape.Group('holderTextGroup', {
		        text: scene.text,
		        align: scene.align,
		        font: scene.font,
		        fill: holderTextColor
		    });
	
		    holderTextGroup.moveTo(null, null, 1);
		    sceneGraph.root.add(holderTextGroup);
	
		    var tpdata = holderTextGroup.textPositionData = stagingRenderer(sceneGraph);
		    if (!tpdata) {
		        throw 'Holder: staging fallback not supported yet.';
		    }
		    holderTextGroup.properties.leading = tpdata.boundingBox.height;
	
		    var textNode = null;
		    var line = null;
	
		    function finalizeLine(parent, line, width, height) {
		        line.width = width;
		        line.height = height;
		        parent.width = Math.max(parent.width, line.width);
		        parent.height += line.height;
		    }
	
		    if (tpdata.lineCount > 1) {
		        var offsetX = 0;
		        var offsetY = 0;
		        var lineIndex = 0;
		        var lineKey;
		        line = new Shape.Group('line' + lineIndex);
	
		        //Double margin so that left/right-aligned next is not flush with edge of image
		        if (scene.align === 'left' || scene.align === 'right') {
		            maxLineWidth = scene.width * (1 - (1 - lineWrap) * 2);
		        }
	
		        for (var i = 0; i < tpdata.words.length; i++) {
		            var word = tpdata.words[i];
		            textNode = new Shape.Text(word.text);
		            var newline = word.text == '\\n';
		            if (!scene.noWrap && (offsetX + word.width >= maxLineWidth || newline === true)) {
		                finalizeLine(holderTextGroup, line, offsetX, holderTextGroup.properties.leading);
		                holderTextGroup.add(line);
		                offsetX = 0;
		                offsetY += holderTextGroup.properties.leading;
		                lineIndex += 1;
		                line = new Shape.Group('line' + lineIndex);
		                line.y = offsetY;
		            }
		            if (newline === true) {
		                continue;
		            }
		            textNode.moveTo(offsetX, 0);
		            offsetX += tpdata.spaceWidth + word.width;
		            line.add(textNode);
		        }
	
		        finalizeLine(holderTextGroup, line, offsetX, holderTextGroup.properties.leading);
		        holderTextGroup.add(line);
	
		        if (scene.align === 'left') {
		            holderTextGroup.moveTo(scene.width - sceneMargin, null, null);
		        } else if (scene.align === 'right') {
		            for (lineKey in holderTextGroup.children) {
		                line = holderTextGroup.children[lineKey];
		                line.moveTo(scene.width - line.width, null, null);
		            }
	
		            holderTextGroup.moveTo(0 - (scene.width - sceneMargin), null, null);
		        } else {
		            for (lineKey in holderTextGroup.children) {
		                line = holderTextGroup.children[lineKey];
		                line.moveTo((holderTextGroup.width - line.width) / 2, null, null);
		            }
	
		            holderTextGroup.moveTo((scene.width - holderTextGroup.width) / 2, null, null);
		        }
	
		        holderTextGroup.moveTo(null, (scene.height - holderTextGroup.height) / 2, null);
	
		        //If the text exceeds vertical space, move it down so the first line is visible
		        if ((scene.height - holderTextGroup.height) / 2 < 0) {
		            holderTextGroup.moveTo(null, 0, null);
		        }
		    } else {
		        textNode = new Shape.Text(scene.text);
		        line = new Shape.Group('line0');
		        line.add(textNode);
		        holderTextGroup.add(line);
	
		        if (scene.align === 'left') {
		            holderTextGroup.moveTo(scene.width - sceneMargin, null, null);
		        } else if (scene.align === 'right') {
		            holderTextGroup.moveTo(0 - (scene.width - sceneMargin), null, null);
		        } else {
		            holderTextGroup.moveTo((scene.width - tpdata.boundingBox.width) / 2, null, null);
		        }
	
		        holderTextGroup.moveTo(null, (scene.height - tpdata.boundingBox.height) / 2, null);
		    }
	
		    //todo: renderlist
		    return sceneGraph;
		}
	
		/**
		 * Adaptive text sizing function
		 *
		 * @private
		 * @param width Parent width
		 * @param height Parent height
		 * @param fontSize Requested text size
		 * @param scale Proportional scale of text
		 */
		function textSize(width, height, fontSize, scale) {
		    var stageWidth = parseInt(width, 10);
		    var stageHeight = parseInt(height, 10);
	
		    var bigSide = Math.max(stageWidth, stageHeight);
		    var smallSide = Math.min(stageWidth, stageHeight);
	
		    var newHeight = 0.8 * Math.min(smallSide, bigSide * scale);
		    return Math.round(Math.max(fontSize, newHeight));
		}
	
		/**
		 * Iterates over resizable (fluid or auto) placeholders and renders them
		 *
		 * @private
		 * @param element Optional element selector, specified only if a specific element needs to be re-rendered
		 */
		function updateResizableElements(element) {
		    var images;
		    if (element == null || element.nodeType == null) {
		        images = App.vars.resizableImages;
		    } else {
		        images = [element];
		    }
		    for (var i = 0, l = images.length; i < l; i++) {
		        var el = images[i];
		        if (el.holderData) {
		            var flags = el.holderData.flags;
		            var dimensions = dimensionCheck(el);
		            if (dimensions) {
		                if (!el.holderData.resizeUpdate) {
		                    continue;
		                }
	
		                if (flags.fluid && flags.auto) {
		                    var fluidConfig = el.holderData.fluidConfig;
		                    switch (fluidConfig.mode) {
		                        case 'width':
		                            dimensions.height = dimensions.width / fluidConfig.ratio;
		                            break;
		                        case 'height':
		                            dimensions.width = dimensions.height * fluidConfig.ratio;
		                            break;
		                    }
		                }
	
		                var settings = {
		                    mode: 'image',
		                    holderSettings: {
		                        dimensions: dimensions,
		                        theme: flags.theme,
		                        flags: flags
		                    },
		                    el: el,
		                    engineSettings: el.holderData.engineSettings
		                };
	
		                if (flags.textmode == 'exact') {
		                    flags.exactDimensions = dimensions;
		                    settings.holderSettings.dimensions = flags.dimensions;
		                }
	
		                render(settings);
		            } else {
		                setInvisible(el);
		            }
		        }
		    }
		}
	
		/**
		 * Sets up aspect ratio metadata for fluid placeholders, in order to preserve proportions when resizing
		 *
		 * @private
		 * @param el Image DOM element
		 */
		function setInitialDimensions(el) {
		    if (el.holderData) {
		        var dimensions = dimensionCheck(el);
		        if (dimensions) {
		            var flags = el.holderData.flags;
	
		            var fluidConfig = {
		                fluidHeight: flags.dimensions.height.slice(-1) == '%',
		                fluidWidth: flags.dimensions.width.slice(-1) == '%',
		                mode: null,
		                initialDimensions: dimensions
		            };
	
		            if (fluidConfig.fluidWidth && !fluidConfig.fluidHeight) {
		                fluidConfig.mode = 'width';
		                fluidConfig.ratio = fluidConfig.initialDimensions.width / parseFloat(flags.dimensions.height);
		            } else if (!fluidConfig.fluidWidth && fluidConfig.fluidHeight) {
		                fluidConfig.mode = 'height';
		                fluidConfig.ratio = parseFloat(flags.dimensions.width) / fluidConfig.initialDimensions.height;
		            }
	
		            el.holderData.fluidConfig = fluidConfig;
		        } else {
		            setInvisible(el);
		        }
		    }
		}
	
		/**
		 * Iterates through all current invisible images, and if they're visible, renders them and removes them from further checks. Runs every animation frame.
		 *
		 * @private
		 */
		function visibilityCheck() {
		    var renderableImages = [];
		    var keys = Object.keys(App.vars.invisibleImages);
		    var el;
	
		    keys.forEach(function (key) {
		        el = App.vars.invisibleImages[key];
		        if (dimensionCheck(el) && el.nodeName.toLowerCase() == 'img') {
		            renderableImages.push(el);
		            delete App.vars.invisibleImages[key];
		        }
		    });
	
		    if (renderableImages.length) {
		        Holder.run({
		            images: renderableImages
		        });
		    }
	
		    // Done to prevent 100% CPU usage via aggressive calling of requestAnimationFrame
		    setTimeout(function () {
		        global.requestAnimationFrame(visibilityCheck);
		    }, 10);
		}
	
		/**
		 * Starts checking for invisible placeholders if not doing so yet. Does nothing otherwise.
		 *
		 * @private
		 */
		function startVisibilityCheck() {
		    if (!App.vars.visibilityCheckStarted) {
		        global.requestAnimationFrame(visibilityCheck);
		        App.vars.visibilityCheckStarted = true;
		    }
		}
	
		/**
		 * Sets a unique ID for an image detected to be invisible and adds it to the map of invisible images checked by visibilityCheck
		 *
		 * @private
		 * @param el Invisible DOM element
		 */
		function setInvisible(el) {
		    if (!el.holderData.invisibleId) {
		        App.vars.invisibleId += 1;
		        App.vars.invisibleImages['i' + App.vars.invisibleId] = el;
		        el.holderData.invisibleId = App.vars.invisibleId;
		    }
		}
	
		//todo: see if possible to convert stagingRenderer to use HTML only
		var stagingRenderer = (function() {
		    var svg = null,
		        stagingText = null,
		        stagingTextNode = null;
		    return function(graph) {
		        var rootNode = graph.root;
		        if (App.setup.supportsSVG) {
		            var firstTimeSetup = false;
		            var tnode = function(text) {
		                return document.createTextNode(text);
		            };
		            if (svg == null || svg.parentNode !== document.body) {
		                firstTimeSetup = true;
		            }
	
		            svg = SVG.initSVG(svg, rootNode.properties.width, rootNode.properties.height);
		            //Show staging element before staging
		            svg.style.display = 'block';
	
		            if (firstTimeSetup) {
		                stagingText = DOM.newEl('text', SVG_NS);
		                stagingTextNode = tnode(null);
		                DOM.setAttr(stagingText, {
		                    x: 0
		                });
		                stagingText.appendChild(stagingTextNode);
		                svg.appendChild(stagingText);
		                document.body.appendChild(svg);
		                svg.style.visibility = 'hidden';
		                svg.style.position = 'absolute';
		                svg.style.top = '-100%';
		                svg.style.left = '-100%';
		                //todo: workaround for zero-dimension <svg> tag in Opera 12
		                //svg.setAttribute('width', 0);
		                //svg.setAttribute('height', 0);
		            }
	
		            var holderTextGroup = rootNode.children.holderTextGroup;
		            var htgProps = holderTextGroup.properties;
		            DOM.setAttr(stagingText, {
		                'y': htgProps.font.size,
		                'style': utils.cssProps({
		                    'font-weight': htgProps.font.weight,
		                    'font-size': htgProps.font.size + htgProps.font.units,
		                    'font-family': htgProps.font.family
		                })
		            });
	
		            //Get bounding box for the whole string (total width and height)
		            stagingTextNode.nodeValue = htgProps.text;
		            var stagingTextBBox = stagingText.getBBox();
	
		            //Get line count and split the string into words
		            var lineCount = Math.ceil(stagingTextBBox.width / rootNode.properties.width);
		            var words = htgProps.text.split(' ');
		            var newlines = htgProps.text.match(/\\n/g);
		            lineCount += newlines == null ? 0 : newlines.length;
	
		            //Get bounding box for the string with spaces removed
		            stagingTextNode.nodeValue = htgProps.text.replace(/[ ]+/g, '');
		            var computedNoSpaceLength = stagingText.getComputedTextLength();
	
		            //Compute average space width
		            var diffLength = stagingTextBBox.width - computedNoSpaceLength;
		            var spaceWidth = Math.round(diffLength / Math.max(1, words.length - 1));
	
		            //Get widths for every word with space only if there is more than one line
		            var wordWidths = [];
		            if (lineCount > 1) {
		                stagingTextNode.nodeValue = '';
		                for (var i = 0; i < words.length; i++) {
		                    if (words[i].length === 0) continue;
		                    stagingTextNode.nodeValue = utils.decodeHtmlEntity(words[i]);
		                    var bbox = stagingText.getBBox();
		                    wordWidths.push({
		                        text: words[i],
		                        width: bbox.width
		                    });
		                }
		            }
	
		            //Hide staging element after staging
		            svg.style.display = 'none';
	
		            return {
		                spaceWidth: spaceWidth,
		                lineCount: lineCount,
		                boundingBox: stagingTextBBox,
		                words: wordWidths
		            };
		        } else {
		            //todo: canvas fallback for measuring text on android 2.3
		            return false;
		        }
		    };
		})();
	
		//Helpers
	
		/**
		 * Prevents a function from being called too often, waits until a timer elapses to call it again
		 *
		 * @param fn Function to call
		 */
		function debounce(fn) {
		    if (!App.vars.debounceTimer) fn.call(this);
		    if (App.vars.debounceTimer) global.clearTimeout(App.vars.debounceTimer);
		    App.vars.debounceTimer = global.setTimeout(function() {
		        App.vars.debounceTimer = null;
		        fn.call(this);
		    }, App.setup.debounce);
		}
	
		/**
		 * Holder-specific resize/orientation change callback, debounced to prevent excessive execution
		 */
		function resizeEvent() {
		    debounce(function() {
		        updateResizableElements(null);
		    });
		}
	
		//Set up flags
	
		for (var flag in App.flags) {
		    if (!App.flags.hasOwnProperty(flag)) continue;
		    App.flags[flag].match = function(val) {
		        return val.match(this.regex);
		    };
		}
	
		//Properties set once on setup
	
		App.setup = {
		    renderer: 'html',
		    debounce: 100,
		    ratio: 1,
		    supportsCanvas: false,
		    supportsSVG: false,
		    lineWrapRatio: 0.9,
		    dataAttr: 'data-src',
		    renderers: ['html', 'canvas', 'svg']
		};
	
		//Properties modified during runtime
	
		App.vars = {
		    preempted: false,
		    resizableImages: [],
		    invisibleImages: {},
		    invisibleId: 0,
		    visibilityCheckStarted: false,
		    debounceTimer: null,
		    cache: {}
		};
	
		//Pre-flight
	
		(function() {
		    var canvas = DOM.newEl('canvas');
	
		    if (canvas.getContext) {
		        if (canvas.toDataURL('image/png').indexOf('data:image/png') != -1) {
		            App.setup.renderer = 'canvas';
		            App.setup.supportsCanvas = true;
		        }
		    }
	
		    if (!!document.createElementNS && !!document.createElementNS(SVG_NS, 'svg').createSVGRect) {
		        App.setup.renderer = 'svg';
		        App.setup.supportsSVG = true;
		    }
		})();
	
		//Starts checking for invisible placeholders
		startVisibilityCheck();
	
		if (onDomReady) {
		    onDomReady(function() {
		        if (!App.vars.preempted) {
		            Holder.run();
		        }
		        if (global.addEventListener) {
		            global.addEventListener('resize', resizeEvent, false);
		            global.addEventListener('orientationchange', resizeEvent, false);
		        } else {
		            global.attachEvent('onresize', resizeEvent);
		        }
	
		        if (typeof global.Turbolinks == 'object') {
		            global.document.addEventListener('page:change', function() {
		                Holder.run();
		            });
		        }
		    });
		}
	
		module.exports = Holder;
	
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 2 */
	/***/ function(module, exports) {
	
		/*!
		 * onDomReady.js 1.4.0 (c) 2013 Tubal Martin - MIT license
		 *
		 * Specially modified to work with Holder.js
		 */
	
		function _onDomReady(win) {
		    //Lazy loading fix for Firefox < 3.6
		    //http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html
		    if (document.readyState == null && document.addEventListener) {
		        document.addEventListener("DOMContentLoaded", function DOMContentLoaded() {
		            document.removeEventListener("DOMContentLoaded", DOMContentLoaded, false);
		            document.readyState = "complete";
		        }, false);
		        document.readyState = "loading";
		    }
		    
		    var doc = win.document,
		        docElem = doc.documentElement,
		    
		        LOAD = "load",
		        FALSE = false,
		        ONLOAD = "on"+LOAD,
		        COMPLETE = "complete",
		        READYSTATE = "readyState",
		        ATTACHEVENT = "attachEvent",
		        DETACHEVENT = "detachEvent",
		        ADDEVENTLISTENER = "addEventListener",
		        DOMCONTENTLOADED = "DOMContentLoaded",
		        ONREADYSTATECHANGE = "onreadystatechange",
		        REMOVEEVENTLISTENER = "removeEventListener",
		    
		        // W3C Event model
		        w3c = ADDEVENTLISTENER in doc,
		        _top = FALSE,
		    
		        // isReady: Is the DOM ready to be used? Set to true once it occurs.
		        isReady = FALSE,
		    
		        // Callbacks pending execution until DOM is ready
		        callbacks = [];
		    
		    // Handle when the DOM is ready
		    function ready( fn ) {
		        if ( !isReady ) {
		    
		            // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		            if ( !doc.body ) {
		                return defer( ready );
		            }
		    
		            // Remember that the DOM is ready
		            isReady = true;
		    
		            // Execute all callbacks
		            while ( fn = callbacks.shift() ) {
		                defer( fn );
		            }
		        }
		    }
		    
		    // The ready event handler
		    function completed( event ) {
		        // readyState === "complete" is good enough for us to call the dom ready in oldIE
		        if ( w3c || event.type === LOAD || doc[READYSTATE] === COMPLETE ) {
		            detach();
		            ready();
		        }
		    }
		    
		    // Clean-up method for dom ready events
		    function detach() {
		        if ( w3c ) {
		            doc[REMOVEEVENTLISTENER]( DOMCONTENTLOADED, completed, FALSE );
		            win[REMOVEEVENTLISTENER]( LOAD, completed, FALSE );
		        } else {
		            doc[DETACHEVENT]( ONREADYSTATECHANGE, completed );
		            win[DETACHEVENT]( ONLOAD, completed );
		        }
		    }
		    
		    // Defers a function, scheduling it to run after the current call stack has cleared.
		    function defer( fn, wait ) {
		        // Allow 0 to be passed
		        setTimeout( fn, +wait >= 0 ? wait : 1 );
		    }
		    
		    // Attach the listeners:
		    
		    // Catch cases where onDomReady is called after the browser event has already occurred.
		    // we once tried to use readyState "interactive" here, but it caused issues like the one
		    // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		    if ( doc[READYSTATE] === COMPLETE ) {
		        // Handle it asynchronously to allow scripts the opportunity to delay ready
		        defer( ready );
		    
		    // Standards-based browsers support DOMContentLoaded
		    } else if ( w3c ) {
		        // Use the handy event callback
		        doc[ADDEVENTLISTENER]( DOMCONTENTLOADED, completed, FALSE );
		    
		        // A fallback to window.onload, that will always work
		        win[ADDEVENTLISTENER]( LOAD, completed, FALSE );
		    
		    // If IE event model is used
		    } else {
		        // Ensure firing before onload, maybe late but safe also for iframes
		        doc[ATTACHEVENT]( ONREADYSTATECHANGE, completed );
		    
		        // A fallback to window.onload, that will always work
		        win[ATTACHEVENT]( ONLOAD, completed );
		    
		        // If IE and not a frame
		        // continually check to see if the document is ready
		        try {
		            _top = win.frameElement == null && docElem;
		        } catch(e) {}
		    
		        if ( _top && _top.doScroll ) {
		            (function doScrollCheck() {
		                if ( !isReady ) {
		                    try {
		                        // Use the trick by Diego Perini
		                        // http://javascript.nwbox.com/IEContentLoaded/
		                        _top.doScroll("left");
		                    } catch(e) {
		                        return defer( doScrollCheck, 50 );
		                    }
		    
		                    // detach all dom ready events
		                    detach();
		    
		                    // and execute any waiting functions
		                    ready();
		                }
		            })();
		        }
		    }
		    
		    function onDomReady( fn ) {
		        // If DOM is ready, execute the function (async), otherwise wait
		        isReady ? defer( fn ) : callbacks.push( fn );
		    }
		    
		    // Add version
		    onDomReady.version = "1.4.0";
		    // Add method to check if DOM is ready
		    onDomReady.isReady = function(){
		        return isReady;
		    };
	
		    return onDomReady;
		}
	
		module.exports = typeof window !== "undefined" && _onDomReady(window);
	
	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {
	
		//Modified version of component/querystring
		//Changes: updated dependencies, dot notation parsing, JSHint fixes
		//Fork at https://github.com/imsky/querystring
	
		/**
		 * Module dependencies.
		 */
	
		var encode = encodeURIComponent;
		var decode = decodeURIComponent;
		var trim = __webpack_require__(4);
		var type = __webpack_require__(5);
	
		var arrayRegex = /(\w+)\[(\d+)\]/;
		var objectRegex = /\w+\.\w+/;
	
		/**
		 * Parse the given query `str`.
		 *
		 * @param {String} str
		 * @return {Object}
		 * @api public
		 */
	
		exports.parse = function(str){
		  if ('string' !== typeof str) return {};
	
		  str = trim(str);
		  if ('' === str) return {};
		  if ('?' === str.charAt(0)) str = str.slice(1);
	
		  var obj = {};
		  var pairs = str.split('&');
		  for (var i = 0; i < pairs.length; i++) {
		    var parts = pairs[i].split('=');
		    var key = decode(parts[0]);
		    var m, ctx, prop;
	
		    if (m = arrayRegex.exec(key)) {
		      obj[m[1]] = obj[m[1]] || [];
		      obj[m[1]][m[2]] = decode(parts[1]);
		      continue;
		    }
	
		    if (m = objectRegex.test(key)) {
		      m = key.split('.');
		      ctx = obj;
		      
		      while (m.length) {
		        prop = m.shift();
	
		        if (!prop.length) continue;
	
		        if (!ctx[prop]) {
		          ctx[prop] = {};
		        } else if (ctx[prop] && typeof ctx[prop] !== 'object') {
		          break;
		        }
	
		        if (!m.length) {
		          ctx[prop] = decode(parts[1]);
		        }
	
		        ctx = ctx[prop];
		      }
	
		      continue;
		    }
	
		    obj[parts[0]] = null == parts[1] ? '' : decode(parts[1]);
		  }
	
		  return obj;
		};
	
		/**
		 * Stringify the given `obj`.
		 *
		 * @param {Object} obj
		 * @return {String}
		 * @api public
		 */
	
		exports.stringify = function(obj){
		  if (!obj) return '';
		  var pairs = [];
	
		  for (var key in obj) {
		    var value = obj[key];
	
		    if ('array' == type(value)) {
		      for (var i = 0; i < value.length; ++i) {
		        pairs.push(encode(key + '[' + i + ']') + '=' + encode(value[i]));
		      }
		      continue;
		    }
	
		    pairs.push(encode(key) + '=' + encode(obj[key]));
		  }
	
		  return pairs.join('&');
		};
	
	
	/***/ },
	/* 4 */
	/***/ function(module, exports) {
	
		
		exports = module.exports = trim;
	
		function trim(str){
		  return str.replace(/^\s*|\s*$/g, '');
		}
	
		exports.left = function(str){
		  return str.replace(/^\s*/, '');
		};
	
		exports.right = function(str){
		  return str.replace(/\s*$/, '');
		};
	
	
	/***/ },
	/* 5 */
	/***/ function(module, exports) {
	
		/**
		 * toString ref.
		 */
	
		var toString = Object.prototype.toString;
	
		/**
		 * Return the type of `val`.
		 *
		 * @param {Mixed} val
		 * @return {String}
		 * @api public
		 */
	
		module.exports = function(val){
		  switch (toString.call(val)) {
		    case '[object Date]': return 'date';
		    case '[object RegExp]': return 'regexp';
		    case '[object Arguments]': return 'arguments';
		    case '[object Array]': return 'array';
		    case '[object Error]': return 'error';
		  }
	
		  if (val === null) return 'null';
		  if (val === undefined) return 'undefined';
		  if (val !== val) return 'nan';
		  if (val && val.nodeType === 1) return 'element';
	
		  if (isBuffer(val)) return 'buffer';
	
		  val = val.valueOf
		    ? val.valueOf()
		    : Object.prototype.valueOf.apply(val);
	
		  return typeof val;
		};
	
		// code borrowed from https://github.com/feross/is-buffer/blob/master/index.js
		function isBuffer(obj) {
		  return !!(obj != null &&
		    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)
		      (obj.constructor &&
		      typeof obj.constructor.isBuffer === 'function' &&
		      obj.constructor.isBuffer(obj))
		    ))
		}
	
	
	/***/ },
	/* 6 */
	/***/ function(module, exports) {
	
		var SceneGraph = function(sceneProperties) {
		    var nodeCount = 1;
	
		    //todo: move merge to helpers section
		    function merge(parent, child) {
		        for (var prop in child) {
		            parent[prop] = child[prop];
		        }
		        return parent;
		    }
	
		    var SceneNode = function(name) {
		        nodeCount++;
		        this.parent = null;
		        this.children = {};
		        this.id = nodeCount;
		        this.name = 'n' + nodeCount;
		        if (typeof name !== 'undefined') {
		            this.name = name;
		        }
		        this.x = this.y = this.z = 0;
		        this.width = this.height = 0;
		    };
	
		    SceneNode.prototype.resize = function(width, height) {
		        if (width != null) {
		            this.width = width;
		        }
		        if (height != null) {
		            this.height = height;
		        }
		    };
	
		    SceneNode.prototype.moveTo = function(x, y, z) {
		        this.x = x != null ? x : this.x;
		        this.y = y != null ? y : this.y;
		        this.z = z != null ? z : this.z;
		    };
	
		    SceneNode.prototype.add = function(child) {
		        var name = child.name;
		        if (typeof this.children[name] === 'undefined') {
		            this.children[name] = child;
		            child.parent = this;
		        } else {
		            throw 'SceneGraph: child already exists: ' + name;
		        }
		    };
	
		    var RootNode = function() {
		        SceneNode.call(this, 'root');
		        this.properties = sceneProperties;
		    };
	
		    RootNode.prototype = new SceneNode();
	
		    var Shape = function(name, props) {
		        SceneNode.call(this, name);
		        this.properties = {
		            'fill': '#000000'
		        };
		        if (typeof props !== 'undefined') {
		            merge(this.properties, props);
		        } else if (typeof name !== 'undefined' && typeof name !== 'string') {
		            throw 'SceneGraph: invalid node name';
		        }
		    };
	
		    Shape.prototype = new SceneNode();
	
		    var Group = function() {
		        Shape.apply(this, arguments);
		        this.type = 'group';
		    };
	
		    Group.prototype = new Shape();
	
		    var Rect = function() {
		        Shape.apply(this, arguments);
		        this.type = 'rect';
		    };
	
		    Rect.prototype = new Shape();
	
		    var Text = function(text) {
		        Shape.call(this);
		        this.type = 'text';
		        this.properties.text = text;
		    };
	
		    Text.prototype = new Shape();
	
		    var root = new RootNode();
	
		    this.Shape = {
		        'Rect': Rect,
		        'Text': Text,
		        'Group': Group
		    };
	
		    this.root = root;
		    return this;
		};
	
		module.exports = SceneGraph;
	
	
	/***/ },
	/* 7 */
	/***/ function(module, exports) {
	
		/* WEBPACK VAR INJECTION */(function(global) {/**
		 * Shallow object clone and merge
		 *
		 * @param a Object A
		 * @param b Object B
		 * @returns {Object} New object with all of A's properties, and all of B's properties, overwriting A's properties
		 */
		exports.extend = function(a, b) {
		    var c = {};
		    for (var x in a) {
		        if (a.hasOwnProperty(x)) {
		            c[x] = a[x];
		        }
		    }
		    if (b != null) {
		        for (var y in b) {
		            if (b.hasOwnProperty(y)) {
		                c[y] = b[y];
		            }
		        }
		    }
		    return c;
		};
	
		/**
		 * Takes a k/v list of CSS properties and returns a rule
		 *
		 * @param props CSS properties object
		 */
		exports.cssProps = function(props) {
		    var ret = [];
		    for (var p in props) {
		        if (props.hasOwnProperty(p)) {
		            ret.push(p + ':' + props[p]);
		        }
		    }
		    return ret.join(';');
		};
	
		/**
		 * Encodes HTML entities in a string
		 *
		 * @param str Input string
		 */
		exports.encodeHtmlEntity = function(str) {
		    var buf = [];
		    var charCode = 0;
		    for (var i = str.length - 1; i >= 0; i--) {
		        charCode = str.charCodeAt(i);
		        if (charCode > 128) {
		            buf.unshift(['&#', charCode, ';'].join(''));
		        } else {
		            buf.unshift(str[i]);
		        }
		    }
		    return buf.join('');
		};
	
		/**
		 * Checks if an image exists
		 *
		 * @param src URL of image
		 * @param callback Callback to call once image status has been found
		 */
		exports.imageExists = function(src, callback) {
		    var image = new Image();
		    image.onerror = function() {
		        callback.call(this, false);
		    };
		    image.onload = function() {
		        callback.call(this, true);
		    };
		    image.src = src;
		};
	
		/**
		 * Decodes HTML entities in a string
		 *
		 * @param str Input string
		 */
		exports.decodeHtmlEntity = function(str) {
		    return str.replace(/&#(\d+);/g, function(match, dec) {
		        return String.fromCharCode(dec);
		    });
		};
	
	
		/**
		 * Returns an element's dimensions if it's visible, `false` otherwise.
		 *
		 * @param el DOM element
		 */
		exports.dimensionCheck = function(el) {
		    var dimensions = {
		        height: el.clientHeight,
		        width: el.clientWidth
		    };
	
		    if (dimensions.height && dimensions.width) {
		        return dimensions;
		    } else {
		        return false;
		    }
		};
	
	
		/**
		 * Returns true if value is truthy or if it is "semantically truthy"
		 * @param val
		 */
		exports.truthy = function(val) {
		    if (typeof val === 'string') {
		        return val === 'true' || val === 'yes' || val === '1' || val === 'on' || val === '✓';
		    }
		    return !!val;
		};
	
		/**
		 * Parses input into a well-formed CSS color
		 * @param val
		 */
		exports.parseColor = function(val) {
		    var hexre = /(^(?:#?)[0-9a-f]{6}$)|(^(?:#?)[0-9a-f]{3}$)/i;
		    var rgbre = /^rgb\((\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/;
		    var rgbare = /^rgba\((\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(0\.\d{1,}|1)\)$/;
	
		    var match = val.match(hexre);
		    var retval;
	
		    if (match !== null) {
		        retval = match[1] || match[2];
		        if (retval[0] !== '#') {
		            return '#' + retval;
		        } else {
		            return retval;
		        }
		    }
	
		    match = val.match(rgbre);
	
		    if (match !== null) {
		        retval = 'rgb(' + match.slice(1).join(',') + ')';
		        return retval;
		    }
	
		    match = val.match(rgbare);
	
		    if (match !== null) {
		        retval = 'rgba(' + match.slice(1).join(',') + ')';
		        return retval;
		    }
	
		    return null;
		};
	
		/**
		 * Provides the correct scaling ratio for canvas drawing operations on HiDPI screens (e.g. Retina displays)
		 */
		exports.canvasRatio = function () {
		    var devicePixelRatio = 1;
		    var backingStoreRatio = 1;
	
		    if (global.document) {
		        var canvas = global.document.createElement('canvas');
		        if (canvas.getContext) {
		            var ctx = canvas.getContext('2d');
		            devicePixelRatio = global.devicePixelRatio || 1;
		            backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;
		        }
		    }
	
		    return devicePixelRatio / backingStoreRatio;
		};
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(global) {var DOM = __webpack_require__(9);
	
		var SVG_NS = 'http://www.w3.org/2000/svg';
		var NODE_TYPE_COMMENT = 8;
	
		/**
		 * Generic SVG element creation function
		 *
		 * @param svg SVG context, set to null if new
		 * @param width Document width
		 * @param height Document height
		 */
		exports.initSVG = function(svg, width, height) {
		    var defs, style, initialize = false;
	
		    if (svg && svg.querySelector) {
		        style = svg.querySelector('style');
		        if (style === null) {
		            initialize = true;
		        }
		    } else {
		        svg = DOM.newEl('svg', SVG_NS);
		        initialize = true;
		    }
	
		    if (initialize) {
		        defs = DOM.newEl('defs', SVG_NS);
		        style = DOM.newEl('style', SVG_NS);
		        DOM.setAttr(style, {
		            'type': 'text/css'
		        });
		        defs.appendChild(style);
		        svg.appendChild(defs);
		    }
	
		    //IE throws an exception if this is set and Chrome requires it to be set
		    if (svg.webkitMatchesSelector) {
		        svg.setAttribute('xmlns', SVG_NS);
		    }
	
		    //Remove comment nodes
		    for (var i = 0; i < svg.childNodes.length; i++) {
		        if (svg.childNodes[i].nodeType === NODE_TYPE_COMMENT) {
		            svg.removeChild(svg.childNodes[i]);
		        }
		    }
	
		    //Remove CSS
		    while (style.childNodes.length) {
		        style.removeChild(style.childNodes[0]);
		    }
	
		    DOM.setAttr(svg, {
		        'width': width,
		        'height': height,
		        'viewBox': '0 0 ' + width + ' ' + height,
		        'preserveAspectRatio': 'none'
		    });
	
		    return svg;
		};
	
		/**
		 * Converts serialized SVG to a string suitable for data URI use
		 * @param svgString Serialized SVG string
		 * @param [base64] Use base64 encoding for data URI
		 */
		exports.svgStringToDataURI = function() {
		    var rawPrefix = 'data:image/svg+xml;charset=UTF-8,';
		    var base64Prefix = 'data:image/svg+xml;charset=UTF-8;base64,';
	
		    return function(svgString, base64) {
		        if (base64) {
		            return base64Prefix + btoa(global.unescape(encodeURIComponent(svgString)));
		        } else {
		            return rawPrefix + encodeURIComponent(svgString);
		        }
		    };
		}();
	
		/**
		 * Returns serialized SVG with XML processing instructions
		 *
		 * @param svg SVG context
		 * @param stylesheets CSS stylesheets to include
		 */
		exports.serializeSVG = function(svg, engineSettings) {
		    if (!global.XMLSerializer) return;
		    var serializer = new XMLSerializer();
		    var svgCSS = '';
		    var stylesheets = engineSettings.stylesheets;
	
		    //External stylesheets: Processing Instruction method
		    if (engineSettings.svgXMLStylesheet) {
		        var xml = DOM.createXML();
		        //Add <?xml-stylesheet ?> directives
		        for (var i = stylesheets.length - 1; i >= 0; i--) {
		            var csspi = xml.createProcessingInstruction('xml-stylesheet', 'href="' + stylesheets[i] + '" rel="stylesheet"');
		            xml.insertBefore(csspi, xml.firstChild);
		        }
	
		        xml.removeChild(xml.documentElement);
		        svgCSS = serializer.serializeToString(xml);
		    }
	
		    var svgText = serializer.serializeToString(svg);
		    svgText = svgText.replace(/\&amp;(\#[0-9]{2,}\;)/g, '&$1');
		    return svgCSS + svgText;
		};
	
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 9 */
	/***/ function(module, exports) {
	
		/* WEBPACK VAR INJECTION */(function(global) {/**
		 * Generic new DOM element function
		 *
		 * @param tag Tag to create
		 * @param namespace Optional namespace value
		 */
		exports.newEl = function(tag, namespace) {
		    if (!global.document) return;
	
		    if (namespace == null) {
		        return global.document.createElement(tag);
		    } else {
		        return global.document.createElementNS(namespace, tag);
		    }
		};
	
		/**
		 * Generic setAttribute function
		 *
		 * @param el Reference to DOM element
		 * @param attrs Object with attribute keys and values
		 */
		exports.setAttr = function (el, attrs) {
		    for (var a in attrs) {
		        el.setAttribute(a, attrs[a]);
		    }
		};
	
		/**
		 * Creates a XML document
		 * @private
		 */
		exports.createXML = function() {
		    if (!global.DOMParser) return;
		    return new DOMParser().parseFromString('<xml />', 'application/xml');
		};
	
		/**
		 * Converts a value into an array of DOM nodes
		 *
		 * @param val A string, a NodeList, a Node, or an HTMLCollection
		 */
		exports.getNodeArray = function(val) {
		    var retval = null;
		    if (typeof(val) == 'string') {
		        retval = document.querySelectorAll(val);
		    } else if (global.NodeList && val instanceof global.NodeList) {
		        retval = val;
		    } else if (global.Node && val instanceof global.Node) {
		        retval = [val];
		    } else if (global.HTMLCollection && val instanceof global.HTMLCollection) {
		        retval = val;
		    } else if (val instanceof Array) {
		        retval = val;
		    } else if (val === null) {
		        retval = [];
		    }
	
		    retval = Array.prototype.slice.call(retval);
	
		    return retval;
		};
	
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 10 */
	/***/ function(module, exports) {
	
		var Color = function(color, options) {
		    //todo: support rgba, hsla, and rrggbbaa notation
		    //todo: use CIELAB internally
		    //todo: add clamp function (with sign)
		    if (typeof color !== 'string') return;
	
		    this.original = color;
	
		    if (color.charAt(0) === '#') {
		        color = color.slice(1);
		    }
	
		    if (/[^a-f0-9]+/i.test(color)) return;
	
		    if (color.length === 3) {
		        color = color.replace(/./g, '$&$&');
		    }
	
		    if (color.length !== 6) return;
	
		    this.alpha = 1;
	
		    if (options && options.alpha) {
		        this.alpha = options.alpha;
		    }
	
		    this.set(parseInt(color, 16));
		};
	
		//todo: jsdocs
		Color.rgb2hex = function(r, g, b) {
		    function format (decimal) {
		        var hex = (decimal | 0).toString(16);
		        if (decimal < 16) {
		            hex = '0' + hex;
		        }
		        return hex;
		    }
	
		    return [r, g, b].map(format).join('');
		};
	
		//todo: jsdocs
		Color.hsl2rgb = function (h, s, l) {
		    var H = h / 60;
		    var C = (1 - Math.abs(2 * l - 1)) * s;
		    var X = C * (1 - Math.abs(parseInt(H) % 2 - 1));
		    var m = l - (C / 2);
	
		    var r = 0, g = 0, b = 0;
	
		    if (H >= 0 && H < 1) {
		        r = C;
		        g = X;
		    } else if (H >= 1 && H < 2) {
		        r = X;
		        g = C;
		    } else if (H >= 2 && H < 3) {
		        g = C;
		        b = X;
		    } else if (H >= 3 && H < 4) {
		        g = X;
		        b = C;
		    } else if (H >= 4 && H < 5) {
		        r = X;
		        b = C;
		    } else if (H >= 5 && H < 6) {
		        r = C;
		        b = X;
		    }
	
		    r += m;
		    g += m;
		    b += m;
	
		    r = parseInt(r * 255);
		    g = parseInt(g * 255);
		    b = parseInt(b * 255);
	
		    return [r, g, b];
		};
	
		/**
		 * Sets the color from a raw RGB888 integer
		 * @param raw RGB888 representation of color
		 */
		//todo: refactor into a static method
		//todo: factor out individual color spaces
		//todo: add HSL, CIELAB, and CIELUV
		Color.prototype.set = function (val) {
		    this.raw = val;
	
		    var r = (this.raw & 0xFF0000) >> 16;
		    var g = (this.raw & 0x00FF00) >> 8;
		    var b = (this.raw & 0x0000FF);
	
		    // BT.709
		    var y = 0.2126 * r + 0.7152 * g + 0.0722 * b;
		    var u = -0.09991 * r - 0.33609 * g + 0.436 * b;
		    var v = 0.615 * r - 0.55861 * g - 0.05639 * b;
	
		    this.rgb = {
		        r: r,
		        g: g,
		        b: b
		    };
	
		    this.yuv = {
		        y: y,
		        u: u,
		        v: v
		    };
	
		    return this;
		};
	
		/**
		 * Lighten or darken a color
		 * @param multiplier Amount to lighten or darken (-1 to 1)
		 */
		Color.prototype.lighten = function(multiplier) {
		    var cm = Math.min(1, Math.max(0, Math.abs(multiplier))) * (multiplier < 0 ? -1 : 1);
		    var bm = (255 * cm) | 0;
		    var cr = Math.min(255, Math.max(0, this.rgb.r + bm));
		    var cg = Math.min(255, Math.max(0, this.rgb.g + bm));
		    var cb = Math.min(255, Math.max(0, this.rgb.b + bm));
		    var hex = Color.rgb2hex(cr, cg, cb);
		    return new Color(hex);
		};
	
		/**
		 * Output color in hex format
		 * @param addHash Add a hash character to the beginning of the output
		 */
		Color.prototype.toHex = function(addHash) {
		    return (addHash ? '#' : '') + this.raw.toString(16);
		};
	
		/**
		 * Returns whether or not current color is lighter than another color
		 * @param color Color to compare against
		 */
		Color.prototype.lighterThan = function(color) {
		    if (!(color instanceof Color)) {
		        color = new Color(color);
		    }
	
		    return this.yuv.y > color.yuv.y;
		};
	
		/**
		 * Returns the result of mixing current color with another color
		 * @param color Color to mix with
		 * @param multiplier How much to mix with the other color
		 */
		/*
		Color.prototype.mix = function (color, multiplier) {
		    if (!(color instanceof Color)) {
		        color = new Color(color);
		    }
	
		    var r = this.rgb.r;
		    var g = this.rgb.g;
		    var b = this.rgb.b;
		    var a = this.alpha;
	
		    var m = typeof multiplier !== 'undefined' ? multiplier : 0.5;
	
		    //todo: write a lerp function
		    r = r + m * (color.rgb.r - r);
		    g = g + m * (color.rgb.g - g);
		    b = b + m * (color.rgb.b - b);
		    a = a + m * (color.alpha - a);
	
		    return new Color(Color.rgbToHex(r, g, b), {
		        'alpha': a
		    });
		};
		*/
	
		/**
		 * Returns the result of blending another color on top of current color with alpha
		 * @param color Color to blend on top of current color, i.e. "Ca"
		 */
		//todo: see if .blendAlpha can be merged into .mix
		Color.prototype.blendAlpha = function(color) {
		    if (!(color instanceof Color)) {
		        color = new Color(color);
		    }
	
		    var Ca = color;
		    var Cb = this;
	
		    //todo: write alpha blending function
		    var r = Ca.alpha * Ca.rgb.r + (1 - Ca.alpha) * Cb.rgb.r;
		    var g = Ca.alpha * Ca.rgb.g + (1 - Ca.alpha) * Cb.rgb.g;
		    var b = Ca.alpha * Ca.rgb.b + (1 - Ca.alpha) * Cb.rgb.b;
	
		    return new Color(Color.rgb2hex(r, g, b));
		};
	
		module.exports = Color;
	
	
	/***/ },
	/* 11 */
	/***/ function(module, exports) {
	
		module.exports = {
		  'version': '2.9.4',
		  'svg_ns': 'http://www.w3.org/2000/svg'
		};
	
	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {
	
		var shaven = __webpack_require__(13);
	
		var SVG = __webpack_require__(8);
		var constants = __webpack_require__(11);
		var utils = __webpack_require__(7);
	
		var SVG_NS = constants.svg_ns;
	
		var templates = {
		  'element': function (options) {
		    var tag = options.tag;
		    var content = options.content || '';
		    delete options.tag;
		    delete options.content;
		    return  [tag, content, options];
		  }
		};
	
		//todo: deprecate tag arg, infer tag from shape object
		function convertShape (shape, tag) {
		  return templates.element({
		    'tag': tag,
		    'width': shape.width,
		    'height': shape.height,
		    'fill': shape.properties.fill
		  });
		}
	
		function textCss (properties) {
		  return utils.cssProps({
		    'fill': properties.fill,
		    'font-weight': properties.font.weight,
		    'font-family': properties.font.family + ', monospace',
		    'font-size': properties.font.size + properties.font.units
		  });
		}
	
		function outlinePath (bgWidth, bgHeight, outlineWidth) {
		  var outlineOffsetWidth = outlineWidth / 2;
	
		  return [
		    'M', outlineOffsetWidth, outlineOffsetWidth,
		    'H', bgWidth - outlineOffsetWidth,
		    'V', bgHeight - outlineOffsetWidth,
		    'H', outlineOffsetWidth,
		    'V', 0,
		    'M', 0, outlineOffsetWidth,
		    'L', bgWidth, bgHeight - outlineOffsetWidth,
		    'M', 0, bgHeight - outlineOffsetWidth,
		    'L', bgWidth, outlineOffsetWidth
		  ].join(' ');
		}
	
		module.exports = function (sceneGraph, renderSettings) {
		  var engineSettings = renderSettings.engineSettings;
		  var stylesheets = engineSettings.stylesheets;
		  var stylesheetXml = stylesheets.map(function (stylesheet) {
		    return '<?xml-stylesheet rel="stylesheet" href="' + stylesheet + '"?>';
		  }).join('\n');
	
		  var holderId = 'holder_' + Number(new Date()).toString(16);
	
		  var root = sceneGraph.root;
		  var textGroup = root.children.holderTextGroup;
	
		  var css = '#' + holderId + ' text { ' + textCss(textGroup.properties) + ' } ';
	
		  // push text down to be equally vertically aligned with canvas renderer
		  textGroup.y += textGroup.textPositionData.boundingBox.height * 0.8;
	
		  var wordTags = [];
	
		  Object.keys(textGroup.children).forEach(function (lineKey) {
		    var line = textGroup.children[lineKey];
	
		    Object.keys(line.children).forEach(function (wordKey) {
		      var word = line.children[wordKey];
		      var x = textGroup.x + line.x + word.x;
		      var y = textGroup.y + line.y + word.y;
	
		      var wordTag = templates.element({
		        'tag': 'text',
		        'content': word.properties.text,
		        'x': x,
		        'y': y
		      });
	
		      wordTags.push(wordTag);
		    });
		  });
	
		  var text = templates.element({
		    'tag': 'g',
		    'content': wordTags
		  });
	
		  var outline = null;
	
		  if (root.children.holderBg.properties.outline) {
		    var outlineProperties = root.children.holderBg.properties.outline;
		    outline = templates.element({
		      'tag': 'path',
		      'd': outlinePath(root.children.holderBg.width, root.children.holderBg.height, outlineProperties.width),
		      'stroke-width': outlineProperties.width,
		      'stroke': outlineProperties.fill,
		      'fill': 'none'
		    });
		  }
	
		  var bg = convertShape(root.children.holderBg, 'rect');
	
		  var sceneContent = [];
	
		  sceneContent.push(bg);
		  if (outlineProperties) {
		    sceneContent.push(outline);
		  }
		  sceneContent.push(text);
	
		  var scene = templates.element({
		    'tag': 'g',
		    'id': holderId,
		    'content': sceneContent
		  });
	
		  var style = templates.element({
		    'tag': 'style',
		    //todo: figure out how to add CDATA directive
		    'content': css,
		    'type': 'text/css'
		  });
	
		  var defs = templates.element({
		    'tag': 'defs',
		    'content': style
		  });
	
		  var svg = templates.element({
		    'tag': 'svg',
		    'content': [defs, scene],
		    'width': root.properties.width,
		    'height': root.properties.height,
		    'xmlns': SVG_NS,
		    'viewBox': [0, 0, root.properties.width, root.properties.height].join(' '),
		    'preserveAspectRatio': 'none'
		  });
	
		  var output = shaven(svg);
		  
		  output = stylesheetXml + output[0];
	
		  var svgString = SVG.svgStringToDataURI(output, renderSettings.mode === 'background');
		  return svgString;
		};
	
	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {
	
		var escape = __webpack_require__(14)
	
		// TODO: remove namespace
	
		module.exports = function shaven (array, namespace, returnObject) {
	
			'use strict'
	
			var i = 1
			var doesEscape = true
			var HTMLString
			var attributeKey
			var callback
			var key
	
	
			returnObject = returnObject || {}
	
	
			function createElement (sugarString) {
	
				var tags = sugarString.match(/^[\w-]+/)
				var element = {
					tag: tags ? tags[0] : 'div',
					attr: {},
					children: []
				}
				var id = sugarString.match(/#([\w-]+)/)
				var reference = sugarString.match(/\$([\w-]+)/)
				var classNames = sugarString.match(/\.[\w-]+/g)
	
	
				// Assign id if is set
				if (id) {
					element.attr.id = id[1]
	
					// Add element to the return object
					returnObject[id[1]] = element
				}
	
				if (reference)
					returnObject[reference[1]] = element
	
				if (classNames)
					element.attr.class = classNames.join(' ').replace(/\./g, '')
	
				if (sugarString.match(/&$/g))
					doesEscape = false
	
				return element
			}
	
			function replacer (key, value) {
	
				if (value === null || value === false || value === undefined)
					return
	
				if (typeof value !== 'string' && typeof value !== 'object')
					return String(value)
	
				return value
			}
	
			function escapeAttribute (string) {
				return (string || string === 0) ?
					String(string)
						.replace(/&/g, '&amp;')
						.replace(/"/g, '&quot;') :
					''
			}
	
			function escapeHTML (string) {
				return String(string)
					.replace(/&/g, '&amp;')
					.replace(/"/g, '&quot;')
					.replace(/'/g, '&apos;')
					.replace(/</g, '&lt;')
					.replace(/>/g, '&gt;')
			}
	
	
			if (typeof array[0] === 'string')
				array[0] = createElement(array[0])
	
			else if (Array.isArray(array[0]))
				i = 0
	
			else
				throw new Error(
					'First element of array must be a string, ' +
					'or an array and not ' + JSON.stringify(array[0])
				)
	
	
			for (; i < array.length; i++) {
	
				// Don't render element if value is false or null
				if (array[i] === false || array[i] === null) {
					array[0] = false
					break
				}
	
				// Continue with next array value if current value is undefined or true
				else if (array[i] === undefined || array[i] === true) {
					continue
				}
	
				else if (typeof array[i] === 'string') {
					if (doesEscape)
						array[i] = escapeHTML(array[i])
	
					array[0].children.push(array[i])
				}
	
				else if (typeof array[i] === 'number') {
	
					array[0].children.push(array[i])
				}
	
				else if (Array.isArray(array[i])) {
	
					if (Array.isArray(array[i][0])) {
						array[i].reverse().forEach(function (subArray) {
							array.splice(i + 1, 0, subArray)
						})
	
						if (i !== 0)
							continue
						i++
					}
	
					shaven(array[i], namespace, returnObject)
	
					if (array[i][0])
						array[0].children.push(array[i][0])
				}
	
				else if (typeof array[i] === 'function')
					callback = array[i]
	
	
				else if (typeof array[i] === 'object') {
					for (attributeKey in array[i])
						if (array[i].hasOwnProperty(attributeKey))
							if (array[i][attributeKey] !== null &&
								array[i][attributeKey] !== false)
								if (attributeKey === 'style' &&
									typeof array[i][attributeKey] === 'object')
									array[0].attr[attributeKey] = JSON
										.stringify(array[i][attributeKey], replacer)
										.slice(2, -2)
										.replace(/","/g, ';')
										.replace(/":"/g, ':')
										.replace(/\\"/g, '\'')
	
								else
									array[0].attr[attributeKey] = array[i][attributeKey]
				}
	
				else
					throw new TypeError('"' + array[i] + '" is not allowed as a value.')
			}
	
	
			if (array[0] !== false) {
	
				HTMLString = '<' + array[0].tag
	
				for (key in array[0].attr)
					if (array[0].attr.hasOwnProperty(key))
						HTMLString += ' ' + key + '="' +
							escapeAttribute(array[0].attr[key]) + '"'
	
				HTMLString += '>'
	
				array[0].children.forEach(function (child) {
					HTMLString += child
				})
	
				HTMLString += '</' + array[0].tag + '>'
	
				array[0] = HTMLString
			}
	
			// Return root element on index 0
			returnObject[0] = array[0]
	
			if (callback)
				callback(array[0])
	
			// returns object containing all elements with an id and the root element
			return returnObject
		}
	
	
	/***/ },
	/* 14 */
	/***/ function(module, exports) {
	
		/*!
		 * escape-html
		 * Copyright(c) 2012-2013 TJ Holowaychuk
		 * Copyright(c) 2015 Andreas Lubbe
		 * Copyright(c) 2015 Tiancheng "Timothy" Gu
		 * MIT Licensed
		 */
	
		'use strict';
	
		/**
		 * Module variables.
		 * @private
		 */
	
		var matchHtmlRegExp = /["'&<>]/;
	
		/**
		 * Module exports.
		 * @public
		 */
	
		module.exports = escapeHtml;
	
		/**
		 * Escape special characters in the given string of html.
		 *
		 * @param  {string} string The string to escape for inserting into HTML
		 * @return {string}
		 * @public
		 */
	
		function escapeHtml(string) {
		  var str = '' + string;
		  var match = matchHtmlRegExp.exec(str);
	
		  if (!match) {
		    return str;
		  }
	
		  var escape;
		  var html = '';
		  var index = 0;
		  var lastIndex = 0;
	
		  for (index = match.index; index < str.length; index++) {
		    switch (str.charCodeAt(index)) {
		      case 34: // "
		        escape = '&quot;';
		        break;
		      case 38: // &
		        escape = '&amp;';
		        break;
		      case 39: // '
		        escape = '&#39;';
		        break;
		      case 60: // <
		        escape = '&lt;';
		        break;
		      case 62: // >
		        escape = '&gt;';
		        break;
		      default:
		        continue;
		    }
	
		    if (lastIndex !== index) {
		      html += str.substring(lastIndex, index);
		    }
	
		    lastIndex = index + 1;
		    html += escape;
		  }
	
		  return lastIndex !== index
		    ? html + str.substring(lastIndex, index)
		    : html;
		}
	
	
	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {
	
		var DOM = __webpack_require__(9);
		var utils = __webpack_require__(7);
	
		module.exports = (function() {
		    var canvas = DOM.newEl('canvas');
		    var ctx = null;
	
		    return function(sceneGraph) {
		        if (ctx == null) {
		            ctx = canvas.getContext('2d');
		        }
	
		        var dpr = utils.canvasRatio();
		        var root = sceneGraph.root;
		        canvas.width = dpr * root.properties.width;
		        canvas.height = dpr * root.properties.height ;
		        ctx.textBaseline = 'middle';
	
		        var bg = root.children.holderBg;
		        var bgWidth = dpr * bg.width;
		        var bgHeight = dpr * bg.height;
		        //todo: parametrize outline width (e.g. in scene object)
		        var outlineWidth = 2;
		        var outlineOffsetWidth = outlineWidth / 2;
	
		        ctx.fillStyle = bg.properties.fill;
		        ctx.fillRect(0, 0, bgWidth, bgHeight);
	
		        if (bg.properties.outline) {
		            //todo: abstract this into a method
		            ctx.strokeStyle = bg.properties.outline.fill;
		            ctx.lineWidth = bg.properties.outline.width;
		            ctx.moveTo(outlineOffsetWidth, outlineOffsetWidth);
		            // TL, TR, BR, BL
		            ctx.lineTo(bgWidth - outlineOffsetWidth, outlineOffsetWidth);
		            ctx.lineTo(bgWidth - outlineOffsetWidth, bgHeight - outlineOffsetWidth);
		            ctx.lineTo(outlineOffsetWidth, bgHeight - outlineOffsetWidth);
		            ctx.lineTo(outlineOffsetWidth, outlineOffsetWidth);
		            // Diagonals
		            ctx.moveTo(0, outlineOffsetWidth);
		            ctx.lineTo(bgWidth, bgHeight - outlineOffsetWidth);
		            ctx.moveTo(0, bgHeight - outlineOffsetWidth);
		            ctx.lineTo(bgWidth, outlineOffsetWidth);
		            ctx.stroke();
		        }
	
		        var textGroup = root.children.holderTextGroup;
		        ctx.font = textGroup.properties.font.weight + ' ' + (dpr * textGroup.properties.font.size) + textGroup.properties.font.units + ' ' + textGroup.properties.font.family + ', monospace';
		        ctx.fillStyle = textGroup.properties.fill;
	
		        for (var lineKey in textGroup.children) {
		            var line = textGroup.children[lineKey];
		            for (var wordKey in line.children) {
		                var word = line.children[wordKey];
		                var x = dpr * (textGroup.x + line.x + word.x);
		                var y = dpr * (textGroup.y + line.y + word.y + (textGroup.properties.leading / 2));
	
		                ctx.fillText(word.properties.text, x, y);
		            }
		        }
	
		        return canvas.toDataURL('image/png');
		    };
		})();
	
	/***/ }
	/******/ ])
	});
	;
	(function(ctx, isMeteorPackage) {
	    if (isMeteorPackage) {
	        Holder = ctx.Holder;
	    }
	})(this, typeof Meteor !== 'undefined' && typeof Package !== 'undefined');


/***/ },
/* 542 */
/***/ function(module, exports) {

	/**
	 * lodash 3.9.1 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	
	/** `Object#toString` result references. */
	var funcTag = '[object Function]';
	
	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/**
	 * Checks if `value` is object-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var fnToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in older versions of Chrome and Safari which return 'function' for regexes
	  // and Safari 8 equivalents which return 'object' for typed array constructors.
	  return isObject(value) && objToString.call(value) == funcTag;
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}
	
	module.exports = getNative;


/***/ },
/* 543 */
/***/ function(module, exports) {

	/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	
	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;
	
	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;
	
	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	module.exports = isArguments;


/***/ },
/* 544 */
/***/ function(module, exports) {

	/**
	 * lodash 3.0.4 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	
	/** `Object#toString` result references. */
	var arrayTag = '[object Array]',
	    funcTag = '[object Function]';
	
	/** Used to detect host constructors (Safari > 5). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	/**
	 * Checks if `value` is object-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var fnToString = Function.prototype.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objToString = objectProto.toString;
	
	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);
	
	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeIsArray = getNative(Array, 'isArray');
	
	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = object == null ? undefined : object[key];
	  return isNative(value) ? value : undefined;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 */
	function isLength(value) {
	  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(function() { return arguments; }());
	 * // => false
	 */
	var isArray = nativeIsArray || function(value) {
	  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
	};
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in older versions of Chrome and Safari which return 'function' for regexes
	  // and Safari 8 equivalents which return 'object' for typed array constructors.
	  return isObject(value) && objToString.call(value) == funcTag;
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Checks if `value` is a native function.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
	 * @example
	 *
	 * _.isNative(Array.prototype.push);
	 * // => true
	 *
	 * _.isNative(_);
	 * // => false
	 */
	function isNative(value) {
	  if (value == null) {
	    return false;
	  }
	  if (isFunction(value)) {
	    return reIsNative.test(fnToString.call(value));
	  }
	  return isObjectLike(value) && reIsHostCtor.test(value);
	}
	
	module.exports = isArray;


/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * lodash 3.1.2 (Custom Build) <https://lodash.com/>
	 * Build: `lodash modern modularize exports="npm" -o ./`
	 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <https://lodash.com/license>
	 */
	var getNative = __webpack_require__(542),
	    isArguments = __webpack_require__(543),
	    isArray = __webpack_require__(544);
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^\d+$/;
	
	/** Used for native method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/* Native method references for those with the same name as other `lodash` methods. */
	var nativeKeys = getNative(Object, 'keys');
	
	/**
	 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
	 * of an array-like value.
	 */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}
	
	/**
	 * Gets the "length" property value of `object`.
	 *
	 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
	 * that affects Safari on at least iOS 8.1-8.3 ARM64.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {*} Returns the "length" value.
	 */
	var getLength = baseProperty('length');
	
	/**
	 * Checks if `value` is array-like.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 */
	function isArrayLike(value) {
	  return value != null && isLength(getLength(value));
	}
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return value > -1 && value % 1 == 0 && value < length;
	}
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 */
	function isLength(value) {
	  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	/**
	 * A fallback implementation of `Object.keys` which creates an array of the
	 * own enumerable property names of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function shimKeys(object) {
	  var props = keysIn(object),
	      propsLength = props.length,
	      length = propsLength && object.length;
	
	  var allowIndexes = !!length && isLength(length) &&
	    (isArray(object) || isArguments(object));
	
	  var index = -1,
	      result = [];
	
	  while (++index < propsLength) {
	    var key = props[index];
	    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	/**
	 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
	 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(1);
	 * // => false
	 */
	function isObject(value) {
	  // Avoid a V8 JIT bug in Chrome 19-20.
	  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}
	
	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	var keys = !nativeKeys ? shimKeys : function(object) {
	  var Ctor = object == null ? undefined : object.constructor;
	  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
	      (typeof object != 'function' && isArrayLike(object))) {
	    return shimKeys(object);
	  }
	  return isObject(object) ? nativeKeys(object) : [];
	};
	
	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  if (object == null) {
	    return [];
	  }
	  if (!isObject(object)) {
	    object = Object(object);
	  }
	  var length = object.length;
	  length = (length && isLength(length) &&
	    (isArray(object) || isArguments(object)) && length) || 0;
	
	  var Ctor = object.constructor,
	      index = -1,
	      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
	      result = Array(length),
	      skipIndexes = length > 0;
	
	  while (++index < length) {
	    result[index] = (index + '');
	  }
	  for (var key in object) {
	    if (!(skipIndexes && isIndex(key, length)) &&
	        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = keys;


/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(232),
	    getRawTag = __webpack_require__(549),
	    objectToString = __webpack_require__(550);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ },
/* 547 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(551);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(232);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ },
/* 550 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ },
/* 551 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(547);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ },
/* 553 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(546),
	    getPrototype = __webpack_require__(548),
	    isObjectLike = __webpack_require__(553);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	if (true) {
	  var invariant = __webpack_require__(3);
	  var warning = __webpack_require__(4);
	  var ReactPropTypesSecret = __webpack_require__(234);
	  var loggedTypeFailures = {};
	}
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (true) {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;
	
	          var stack = getStack ? getStack() : '';
	
	          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
	        }
	      }
	    }
	  }
	}
	
	module.exports = checkPropTypes;


/***/ },
/* 556 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, BigPlayButton } from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\">\n      <BigPlayButton position=\"center\" />\n    </Player>\n  );\n};\n"

/***/ },
/* 557 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, ControlBar } from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      autoPlay\n      src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n    >\n      <ControlBar autoHide={false} />\n    </Player>\n  );\n};\n"

/***/ },
/* 558 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player } from 'video-react';\nimport HLSSource from './HLSSource';\n\nexport default (props) => {\n  // Add customized HLSSource component into video-react Player\n  // The Component with `isVideoChild` attribute will be added into `Video` component\n  // Please use this url if you test it from local:\n  // http://www.streambox.fr/playlists/x36xhzz/x36xhzz.m3u8\n  return (\n    <Player>\n      <HLSSource\n        isVideoChild\n        src=\"//d2zihajmogu5jn.cloudfront.net/bipbop-advanced/bipbop_16x9_variant.m3u8\"\n      />\n    </Player>\n  );\n};\n"

/***/ },
/* 559 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, ControlBar, ReplayControl,\n  ForwardControl, CurrentTimeDisplay,\n  TimeDivider, PlaybackRateMenuButton, VolumeMenuButton\n} from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      poster=\"/assets/poster.png\"\n    >\n      <source src=\"http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4\" />\n      <source src=\"http://mirrorblender.top-ix.org/movies/sintel-1024-surround.mp4\" />\n\n      <ControlBar>\n        <ReplayControl seconds={10} order={1.1} />\n        <ForwardControl seconds={30} order={1.2} />\n        <CurrentTimeDisplay order={4.1} />\n        <TimeDivider order={4.2} />\n        <PlaybackRateMenuButton\n          rates={[5, 2, 1, 0.5, 0.1]}\n          order={7.1}\n        />\n        <VolumeMenuButton disabled />\n      </ControlBar>\n    </Player>\n  );\n};\n"

/***/ },
/* 560 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, ControlBar, ForwardControl} from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      autoPlay\n      poster=\"/assets/poster.png\"\n      src=\"http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4\"\n    >\n      <ControlBar autoHide={false}>\n        <ForwardControl seconds={5} order={3.1} />\n        <ForwardControl seconds={10} order={3.2} />\n        <ForwardControl seconds={30} order={3.3} />\n      </ControlBar>\n    </Player>\n  );\n};\n"

/***/ },
/* 561 */
/***/ function(module, exports) {

	module.exports = "import React, { PropTypes, Component } from 'react';\nimport Hls from 'hls.js';\n\nconst propTypes = {\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  video: PropTypes.object,\n};\n\nexport default class HLSSource extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.hls = new Hls();\n  }\n\n  componentDidMount() {\n    // `src` is the property get from this component\n    // `video` is the property insert from `Video` component\n    // `video` is the html5 video element\n    const { src, video } = this.props;\n    // load hls video source base on hls.js\n    if (Hls.isSupported()) {\n      this.hls.loadSource(src);\n      this.hls.attachMedia(video);\n      this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        video.play();\n      });\n    }\n  }\n\n  render() {\n    return (\n      <source\n        src={this.props.src}\n        type={this.props.type || 'application/x-mpegURL'}\n      />\n    );\n  }\n\n}\n\nHLSSource.propTypes = propTypes;\n"

/***/ },
/* 562 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, LoadingSpinner } from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      src=\"http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4\"\n    >\n      <LoadingSpinner />\n    </Player>\n  );\n};\n"

/***/ },
/* 563 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, ControlBar, PlayToggle} from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      autoPlay\n      poster=\"/assets/poster.png\"\n      src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n    >\n      <ControlBar autoHide={false} disableDefaultControls={true}>\n        <PlayToggle />\n      </ControlBar>\n    </Player>\n  );\n};\n"

/***/ },
/* 564 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport {\n  Player, ControlBar, PlaybackRateMenuButton\n} from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      autoPlay\n      src=\"http://media.w3.org/2010/05/bunny/movie.mp4\"\n    >\n      <ControlBar autoHide={false}>\n        <PlaybackRateMenuButton\n          rates={[5, 3, 1.5, 1, 0.5, 0.1]}\n          order={7.1}\n        />\n      </ControlBar>\n    </Player>\n  );\n};\n"

/***/ },
/* 565 */
/***/ function(module, exports) {

	module.exports = "import React, { Component } from 'react';\nimport { Player } from 'video-react';\nimport {\n  Button, Form, FormGroup,\n  Label, Input, Col\n} from 'reactstrap';\n\nexport default class PlayerExample extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      playerSource: 'https://media.w3.org/2010/05/sintel/trailer_hd.mp4',\n      inputVideoUrl: 'http://www.w3schools.com/html/mov_bbb.mp4'\n    }\n\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.updatePlayerInfo = this.updatePlayerInfo.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.playerSource != prevState.playerSource) {\n      this.refs.player.load();\n    }\n  }\n\n  handleValueChange(e) {\n    var value = e.target.value;\n    this.setState({\n      [e.target.id]: value\n    });\n  }\n\n  updatePlayerInfo() {\n    this.setState({\n      playerSource: this.state.inputVideoUrl\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Player ref=\"player\">\n          <source src={this.state.playerSource} />\n        </Player>\n        <div className=\"docs-example\">\n          <Form>\n            <FormGroup>\n              <Label for=\"inputVideoUrl\">Video Url</Label>\n              <Input\n                ref=\"inputVideoUrl\"\n                name=\"inputVideoUrl\"\n                id=\"inputVideoUrl\"\n                value={this.state.inputVideoUrl}\n                onChange={this.handleValueChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Button type=\"button\" onClick={this.updatePlayerInfo}>Update</Button>\n            </FormGroup>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\n"

/***/ },
/* 566 */
/***/ function(module, exports) {

	module.exports = "import React, { Component } from 'react';\nimport { PrismCode } from 'react-prism';\nimport { Player, ControlBar } from 'video-react';\nimport {\n  Button, Form, FormGroup,\n  Label, Input, Col\n} from 'reactstrap';\n\nconst sources = {\n  sintelTrailer: 'http://media.w3.org/2010/05/sintel/trailer.mp4',\n  bunnyTrailer: 'http://media.w3.org/2010/05/bunny/trailer.mp4',\n  bunnyMovie: 'http://media.w3.org/2010/05/bunny/movie.mp4',\n  test: 'http://media.w3.org/2010/05/video/movie_300.webm',\n};\n\nexport default class PlayerControlExample extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      source: sources['bunnyMovie'],\n    };\n\n    this.play = this.play.bind(this);\n    this.pause = this.pause.bind(this);\n    this.load = this.load.bind(this);\n    this.changeCurrentTime = this.changeCurrentTime.bind(this);\n    this.seek = this.seek.bind(this);\n    this.changePlaybackRateRate = this.changePlaybackRateRate.bind(this);\n    this.changeVolume = this.changeVolume.bind(this);\n    this.setMuted = this.setMuted.bind(this);\n  }\n\n  componentDidMount() {\n    // subscribe state change\n    this.refs.player.subscribeToStateChange(this.handleStateChange.bind(this));\n  }\n\n  handleStateChange(state, prevState) {\n    // copy player state to this component's state\n    this.setState({\n      player: state\n    });\n  }\n\n  play() {\n    this.refs.player.play();\n  }\n\n  pause() {\n    this.refs.player.pause();\n  }\n\n  load() {\n    this.refs.player.load();\n  }\n\n  changeCurrentTime(seconds) {\n    return () => {\n      const { player } = this.refs.player.getState();\n      const currentTime = player.currentTime;\n      this.refs.player.seek(currentTime + seconds);\n    };\n  }\n\n  seek(seconds) {\n    return () => {\n      this.refs.player.seek(seconds);\n    };\n  }\n\n  changePlaybackRateRate(steps) {\n    return () => {\n      const { player } = this.refs.player.getState();\n      const playbackRate = player.playbackRate;\n      this.refs.player.playbackRate = playbackRate + steps;\n    };\n  }\n\n  changeVolume(steps) {\n    return () => {\n      const { player } = this.refs.player.getState();\n      const volume = player.volume;\n      this.refs.player.volume = volume + steps;\n    };\n  }\n\n  setMuted(muted) {\n    return () => {\n      this.refs.player.muted = muted;\n    };\n  }\n\n  changeSource(name) {\n    return () => {\n      this.setState({\n        source: sources[name]\n      });\n      this.refs.player.load();\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Player\n          ref=\"player\"\n          autoPlay\n        >\n          <source src={this.state.source} />\n          <ControlBar autoHide={false} />\n        </Player>\n        <div className=\"py-3\">\n          <Button onClick={this.play} className=\"mr-3\">play()</Button>\n          <Button onClick={this.pause} className=\"mr-3\">pause()</Button>\n          <Button onClick={this.load} className=\"mr-3\">load()</Button>\n        </div>\n        <div className=\"pb-3\">\n          <Button onClick={this.changeCurrentTime(10)} className=\"mr-3\">currentTime += 10</Button>\n          <Button onClick={this.changeCurrentTime(-10)} className=\"mr-3\">currentTime -= 10</Button>\n          <Button onClick={this.seek(50)} className=\"mr-3\">currentTime = 50</Button>\n        </div>\n        <div className=\"pb-3\">\n          <Button onClick={this.changePlaybackRateRate(1)} className=\"mr-3\">playbackRate++</Button>\n          <Button onClick={this.changePlaybackRateRate(-1)} className=\"mr-3\">playbackRate--</Button>\n          <Button onClick={this.changePlaybackRateRate(0.1)} className=\"mr-3\">playbackRate+=0.1</Button>\n          <Button onClick={this.changePlaybackRateRate(-0.1)} className=\"mr-3\">playbackRate-=0.1</Button>\n        </div>\n        <div className=\"pb-3\">\n          <Button onClick={this.changeVolume(0.1)} className=\"mr-3\">volume+=0.1</Button>\n          <Button onClick={this.changeVolume(-0.1)} className=\"mr-3\">volume-=0.1</Button>\n          <Button onClick={this.setMuted(true)} className=\"mr-3\">muted=true</Button>\n          <Button onClick={this.setMuted(false)} className=\"mr-3\">muted=false</Button>\n        </div>\n        <div className=\"pb-3\">\n          <Button onClick={this.changeSource('sintelTrailer')} className=\"mr-3\">Sintel teaser</Button>\n          <Button onClick={this.changeSource('bunnyTrailer')} className=\"mr-3\">Bunny trailer</Button>\n          <Button onClick={this.changeSource('bunnyMovie')} className=\"mr-3\">Bunny movie</Button>\n          <Button onClick={this.changeSource('test')} className=\"mr-3\">Test movie</Button>\n        </div>\n        <div>State</div>\n        <pre>\n          <PrismCode className=\"language-json\">\n            {JSON.stringify(this.state.player, null, 2)}\n          </PrismCode>\n        </pre>\n      </div>\n    );\n  }\n}\n\n"

/***/ },
/* 567 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, PosterImage } from 'video-react';\n\nexport default (props) => {\n  // set the poster image url to `poster` property\n  return (\n    <Player\n      poster=\"/assets/poster.png\"\n      src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n    />\n  );\n};\n"

/***/ },
/* 568 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, ControlBar, ReplayControl} from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      autoPlay\n      poster=\"/assets/poster.png\"\n      startTime={300}\n      src=\"http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4\"\n    >\n      <ControlBar autoHide={false}>\n        <ReplayControl seconds={5} order={2.1} />\n        <ReplayControl seconds={10} order={2.2} />\n        <ReplayControl seconds={30} order={2.3} />\n      </ControlBar>\n    </Player>\n  );\n};\n"

/***/ },
/* 569 */
/***/ function(module, exports) {

	module.exports = "import React, { Component } from 'react';\nimport { Player, Shortcut } from 'video-react';\n\n\nexport default class ShortcutExample extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    // add your own shortcuts\n    this.newShortcuts = [\n      // Press number 1 to jump to the postion of 10%\n      {\n        keyCode: 49, // Number 1\n        // handle is the function to control the player\n        // player: the player's state\n        // actions: the player's actions\n        handle: (player, actions) => {\n          const duration = player.duration;\n          // jump to the postion of 10%\n          actions.seek(duration * 0.1);\n        }\n      },\n      // Ctrl/Cmd + Right arrow to go forward 30 seconds\n      {\n        keyCode: 39, // Right arrow\n        ctrl: true, // Ctrl/Cmd\n        handle: (player, actions) => {\n          if (!player.hasStarted) {\n            return;\n          }\n\n          // this operation param is option\n          // helps to display a bezel\n          const operation = {\n            action: 'forward-30',\n            source: 'shortcut'\n          };\n          actions.forward(30, operation); // Go forward 30 seconds\n        }\n      }\n    ];\n  }\n\n  render() {\n    return (\n      <Player\n        src=\"http://peach.themazzone.com/durian/movies/sintel-1024-surround.mp4\"\n      >\n        <Shortcut\n          shortcuts={this.newShortcuts}\n        />\n      </Player>\n    );\n  }\n}\n"

/***/ },
/* 570 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player, ControlBar, VolumeMenuButton } from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      autoPlay\n      poster=\"/assets/poster.png\"\n      src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n    >\n      <ControlBar autoHide={false} disableDefaultControls={true}>\n        <VolumeMenuButton />\n        <VolumeMenuButton vertical={true} />\n      </ControlBar>\n    </Player>\n  );\n};\n"

/***/ },
/* 571 */
/***/ function(module, exports) {

	module.exports = "import React from 'react';\nimport { Player } from 'video-react';\n\nexport default (props) => {\n  return (\n    <Player\n      playsInline\n      poster=\"/assets/poster.png\"\n      src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n    />\n  );\n};\n"

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(672);

/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(281);

/***/ },
/* 574 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};
	
	module.exports = ARIADOMPropertyConfig;

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(16);
	
	var focusNode = __webpack_require__(229);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(83);
	var ExecutionEnvironment = __webpack_require__(18);
	var FallbackCompositionState = __webpack_require__(583);
	var SyntheticCompositionEvent = __webpack_require__(622);
	var SyntheticInputEvent = __webpack_require__(625);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(235);
	var ExecutionEnvironment = __webpack_require__(18);
	var ReactInstrumentation = __webpack_require__(33);
	
	var camelizeStyleName = __webpack_require__(526);
	var dangerousStyleValue = __webpack_require__(632);
	var hyphenateStyleName = __webpack_require__(533);
	var memoizeStringOnly = __webpack_require__(536);
	var warning = __webpack_require__(4);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (true) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	     true ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	     true ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	     true ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	     true ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (true) {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (true) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (true) {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;

/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(82);
	var EventPropagators = __webpack_require__(83);
	var ExecutionEnvironment = __webpack_require__(18);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactUpdates = __webpack_require__(34);
	var SyntheticEvent = __webpack_require__(46);
	
	var getEventTarget = __webpack_require__(159);
	var isEventSupported = __webpack_require__(161);
	var isTextInputElement = __webpack_require__(262);
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topInput') {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topClick') {
	    return targetInst;
	  }
	}
	
	function handleControlledInputBlur(inst, node) {
	  // TODO: In IE, inst is occasionally null. Why?
	  if (inst == null) {
	    return;
	  }
	
	  // Fiber and ReactDOM keep wrapper state in separate places
	  var state = inst._wrapperState || node._wrapperState;
	
	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }
	
	  // If controlled, assign the value attribute to the current value on blur
	  var value = '' + node.value;
	  if (node.getAttribute('value') !== value) {
	    node.setAttribute('value', value);
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	
	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === 'topBlur') {
	      handleControlledInputBlur(targetInst, targetNode);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var DOMLazyTree = __webpack_require__(81);
	var ExecutionEnvironment = __webpack_require__(18);
	
	var createNodesFromMarkup = __webpack_require__(529);
	var emptyFunction = __webpack_require__(37);
	var invariant = __webpack_require__(3);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;

/***/ },
/* 580 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	
	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(83);
	var ReactDOMComponentTree = __webpack_require__(16);
	var SyntheticMouseEvent = __webpack_require__(106);
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 582 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = {
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	};
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes
	};
	
	module.exports = EventConstants;

/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var PooledClass = __webpack_require__(69);
	
	var getTextContentAccessor = __webpack_require__(260);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 584 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(56);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {},
	  DOMMutationMethods: {
	    value: function (node, value) {
	      if (value == null) {
	        return node.removeAttribute('value');
	      }
	
	      // Number inputs get special treatment due to some edge cases in
	      // Chrome. Let everything else assign the value attribute as normal.
	      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
	      if (node.type !== 'number' || node.hasAttribute('value') === false) {
	        node.setAttribute('value', '' + value);
	      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
	        // Don't assign an attribute if validation reports bad
	        // input. Chrome will clear the value. Additionally, don't
	        // operate on inputs that have focus, otherwise Chrome might
	        // strip off trailing decimal places and cause the user's
	        // cursor position to jump to the beginning of the input.
	        //
	        // In ReactDOMInput, we have an onBlur event that will trigger
	        // this function again when focus is lost.
	        node.setAttribute('value', '' + value);
	      }
	    }
	  }
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(57);
	
	var instantiateReactComponent = __webpack_require__(160);
	var KeyEscapeUtils = __webpack_require__(149);
	var shouldUpdateReactComponent = __webpack_require__(162);
	var traverseAllChildren = __webpack_require__(264);
	var warning = __webpack_require__(4);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (true) {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(26);
	    }
	    if (!keyUnique) {
	       true ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (true) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(80)))

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(146);
	var ReactDOMIDOperations = __webpack_require__(590);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	var AutoFocusUtils = __webpack_require__(575);
	var CSSPropertyOperations = __webpack_require__(577);
	var DOMLazyTree = __webpack_require__(81);
	var DOMNamespaces = __webpack_require__(147);
	var DOMProperty = __webpack_require__(56);
	var DOMPropertyOperations = __webpack_require__(237);
	var EventPluginHub = __webpack_require__(82);
	var EventPluginRegistry = __webpack_require__(92);
	var ReactBrowserEventEmitter = __webpack_require__(93);
	var ReactDOMComponentFlags = __webpack_require__(239);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactDOMInput = __webpack_require__(591);
	var ReactDOMOption = __webpack_require__(594);
	var ReactDOMSelect = __webpack_require__(241);
	var ReactDOMTextarea = __webpack_require__(598);
	var ReactInstrumentation = __webpack_require__(33);
	var ReactMultiChild = __webpack_require__(607);
	var ReactServerRenderingTransaction = __webpack_require__(253);
	
	var emptyFunction = __webpack_require__(37);
	var escapeTextContentForBrowser = __webpack_require__(108);
	var invariant = __webpack_require__(3);
	var isEventSupported = __webpack_require__(161);
	var shallowEqual = __webpack_require__(145);
	var validateDOMNesting = __webpack_require__(163);
	var warning = __webpack_require__(4);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	   true ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  true ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  true ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  true ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (true) {
	     true ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	     true ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	     true ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  true ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (true) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	     true ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setAndValidateContentChildDev = emptyFunction;
	if (true) {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  true ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  true ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  true ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (true) {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (true) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (true) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (true) {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (true) {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (true) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (true) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (true) {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (true) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (true) {
	        setAndValidateContentChildDev.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  true ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;
	
	    if (true) {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var DOMLazyTree = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(16);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 589 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(146);
	var ReactDOMComponentTree = __webpack_require__(16);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	var DOMPropertyOperations = __webpack_require__(237);
	var LinkedValueUtils = __webpack_require__(150);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactUpdates = __webpack_require__(34);
	
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (true) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	         true ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	         true ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	         true ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	         true ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      controlled: isControlled(props)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (true) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	         true ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	         true ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      if (value === 0 && node.value === '') {
	        node.value = '0';
	        // Note: IE9 reports a number inputs as 'text', so check props instead.
	      } else if (props.type === 'number') {
	        // Simulate `input.valueAsNumber`. IE9 does not support it
	        var valueAsNumber = parseFloat(node.value, 10) || 0;
	
	        // eslint-disable-next-line
	        if (value != valueAsNumber) {
	          // Cast `value` to a string to ensure the value is set correctly. While
	          // browsers typically do this as necessary, jsdom doesn't.
	          node.value = '' + value;
	        }
	        // eslint-disable-next-line
	      } else if (value != node.value) {
	        // Cast `value` to a string to ensure the value is set correctly. While
	        // browsers typically do this as necessary, jsdom doesn't.
	        node.value = '' + value;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	
	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  true ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(56);
	var ReactComponentTreeHook = __webpack_require__(26);
	
	var warning = __webpack_require__(4);
	
	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	
	function validateProperty(tagName, name, debugID) {
	  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	    return true;
	  }
	
	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	       true ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      warnedProperties[name] = true;
	      return true;
	    }
	  }
	
	  return true;
	}
	
	function warnInvalidARIAProps(debugID, element) {
	  var invalidProps = [];
	
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }
	
	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (invalidProps.length === 1) {
	     true ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (invalidProps.length > 1) {
	     true ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	
	  warnInvalidARIAProps(debugID, element);
	}
	
	var ReactDOMInvalidARIAHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    if (true) {
	      handleElement(debugID, element);
	    }
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    if (true) {
	      handleElement(debugID, element);
	    }
	  }
	};
	
	module.exports = ReactDOMInvalidARIAHook;

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactComponentTreeHook = __webpack_require__(26);
	
	var warning = __webpack_require__(4);
	
	var didWarnValueNull = false;
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	     true ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMNullInputValuePropHook;

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var React = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactDOMSelect = __webpack_require__(241);
	
	var warning = __webpack_require__(4);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       true ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (true) {
	       true ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;

/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(18);
	
	var getNodeForCharacterOffset = __webpack_require__(636);
	var getTextContentAccessor = __webpack_require__(260);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDefaultInjection = __webpack_require__(243);
	var ReactServerRendering = __webpack_require__(613);
	var ReactVersion = __webpack_require__(254);
	
	ReactDefaultInjection.inject();
	
	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};
	
	module.exports = ReactDOMServer;

/***/ },
/* 597 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	var DOMChildrenOperations = __webpack_require__(146);
	var DOMLazyTree = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(16);
	
	var escapeTextContentForBrowser = __webpack_require__(108);
	var invariant = __webpack_require__(3);
	var validateDOMNesting = __webpack_require__(163);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (true) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  true ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	var LinkedValueUtils = __webpack_require__(150);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactUpdates = __webpack_require__(34);
	
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  true ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (true) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	         true ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	         true ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (true) {
	           true ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  true ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  true ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;
	
	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var invariant = __webpack_require__(3);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  true ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  true ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  true ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(56);
	var EventPluginRegistry = __webpack_require__(92);
	var ReactComponentTreeHook = __webpack_require__(26);
	
	var warning = __webpack_require__(4);
	
	if (true) {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,
	
	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};
	
	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    if (standardName != null) {
	       true ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	       true ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}
	
	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }
	
	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (unknownProps.length === 1) {
	     true ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	     true ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}
	
	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyHook;

/***/ },
/* 601 */
278,
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(82);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var EventListener = __webpack_require__(228);
	var ExecutionEnvironment = __webpack_require__(18);
	var PooledClass = __webpack_require__(69);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactUpdates = __webpack_require__(34);
	
	var getEventTarget = __webpack_require__(159);
	var getUnboundedScrollPosition = __webpack_require__(531);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 604 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var history = [];
	
	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (operation) {
	    history.push(operation);
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};
	
	module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(56);
	var EventPluginHub = __webpack_require__(82);
	var EventPluginUtils = __webpack_require__(148);
	var ReactComponentEnvironment = __webpack_require__(151);
	var ReactEmptyComponent = __webpack_require__(244);
	var ReactBrowserEventEmitter = __webpack_require__(93);
	var ReactHostComponent = __webpack_require__(246);
	var ReactUpdates = __webpack_require__(34);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var warning = __webpack_require__(4);
	
	if (true) {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function () {
	     true ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningHook;

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var ReactComponentEnvironment = __webpack_require__(151);
	var ReactInstanceMap = __webpack_require__(84);
	var ReactInstrumentation = __webpack_require__(33);
	
	var ReactCurrentOwner = __webpack_require__(48);
	var ReactReconciler = __webpack_require__(57);
	var ReactChildReconciler = __webpack_require__(585);
	
	var emptyFunction = __webpack_require__(37);
	var flattenChildren = __webpack_require__(633);
	var invariant = __webpack_require__(3);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (true) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (true) {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (true) {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (true) {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (true) {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  true ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  true ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (true) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var invariant = __webpack_require__(3);
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ?  true ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ?  true ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;

/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var ReactDebugTool = __webpack_require__(242);
	var warning = __webpack_require__(4);
	var alreadyWarned = false;
	
	function roundFloat(val) {
	  var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
	
	  var n = Math.pow(10, base);
	  return Math.floor(val * n) / n;
	}
	
	// Flow type definition of console.table is too strict right now, see
	// https://github.com/facebook/flow/pull/2353 for updates
	function consoleTable(table) {
	  console.table(table);
	}
	
	function warnInProduction() {
	  if (alreadyWarned) {
	    return;
	  }
	  alreadyWarned = true;
	  if (typeof console !== 'undefined') {
	    console.error('ReactPerf is not supported in the production builds of React. ' + 'To collect measurements, please use the development build of React instead.');
	  }
	}
	
	function getLastMeasurements() {
	  if (false) {
	    warnInProduction();
	    return [];
	  }
	
	  return ReactDebugTool.getFlushHistory();
	}
	
	function getExclusive() {
	  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();
	
	  if (false) {
	    warnInProduction();
	    return [];
	  }
	
	  var aggregatedStats = {};
	  var affectedIDs = {};
	
	  function updateAggregatedStats(treeSnapshot, instanceID, timerType, applyUpdate) {
	    var displayName = treeSnapshot[instanceID].displayName;
	
	    var key = displayName;
	    var stats = aggregatedStats[key];
	    if (!stats) {
	      affectedIDs[key] = {};
	      stats = aggregatedStats[key] = {
	        key: key,
	        instanceCount: 0,
	        counts: {},
	        durations: {},
	        totalDuration: 0
	      };
	    }
	    if (!stats.durations[timerType]) {
	      stats.durations[timerType] = 0;
	    }
	    if (!stats.counts[timerType]) {
	      stats.counts[timerType] = 0;
	    }
	    affectedIDs[key][instanceID] = true;
	    applyUpdate(stats);
	  }
	
	  flushHistory.forEach(function (flush) {
	    var measurements = flush.measurements,
	        treeSnapshot = flush.treeSnapshot;
	
	    measurements.forEach(function (measurement) {
	      var duration = measurement.duration,
	          instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      updateAggregatedStats(treeSnapshot, instanceID, timerType, function (stats) {
	        stats.totalDuration += duration;
	        stats.durations[timerType] += duration;
	        stats.counts[timerType]++;
	      });
	    });
	  });
	
	  return Object.keys(aggregatedStats).map(function (key) {
	    return _extends({}, aggregatedStats[key], {
	      instanceCount: Object.keys(affectedIDs[key]).length
	    });
	  }).sort(function (a, b) {
	    return b.totalDuration - a.totalDuration;
	  });
	}
	
	function getInclusive() {
	  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();
	
	  if (false) {
	    warnInProduction();
	    return [];
	  }
	
	  var aggregatedStats = {};
	  var affectedIDs = {};
	
	  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
	    var _treeSnapshot$instanc = treeSnapshot[instanceID],
	        displayName = _treeSnapshot$instanc.displayName,
	        ownerID = _treeSnapshot$instanc.ownerID;
	
	    var owner = treeSnapshot[ownerID];
	    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
	    var stats = aggregatedStats[key];
	    if (!stats) {
	      affectedIDs[key] = {};
	      stats = aggregatedStats[key] = {
	        key: key,
	        instanceCount: 0,
	        inclusiveRenderDuration: 0,
	        renderCount: 0
	      };
	    }
	    affectedIDs[key][instanceID] = true;
	    applyUpdate(stats);
	  }
	
	  var isCompositeByID = {};
	  flushHistory.forEach(function (flush) {
	    var measurements = flush.measurements;
	
	    measurements.forEach(function (measurement) {
	      var instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      if (timerType !== 'render') {
	        return;
	      }
	      isCompositeByID[instanceID] = true;
	    });
	  });
	
	  flushHistory.forEach(function (flush) {
	    var measurements = flush.measurements,
	        treeSnapshot = flush.treeSnapshot;
	
	    measurements.forEach(function (measurement) {
	      var duration = measurement.duration,
	          instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      if (timerType !== 'render') {
	        return;
	      }
	      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
	        stats.renderCount++;
	      });
	      var nextParentID = instanceID;
	      while (nextParentID) {
	        // As we traverse parents, only count inclusive time towards composites.
	        // We know something is a composite if its render() was called.
	        if (isCompositeByID[nextParentID]) {
	          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
	            stats.inclusiveRenderDuration += duration;
	          });
	        }
	        nextParentID = treeSnapshot[nextParentID].parentID;
	      }
	    });
	  });
	
	  return Object.keys(aggregatedStats).map(function (key) {
	    return _extends({}, aggregatedStats[key], {
	      instanceCount: Object.keys(affectedIDs[key]).length
	    });
	  }).sort(function (a, b) {
	    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
	  });
	}
	
	function getWasted() {
	  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();
	
	  if (false) {
	    warnInProduction();
	    return [];
	  }
	
	  var aggregatedStats = {};
	  var affectedIDs = {};
	
	  function updateAggregatedStats(treeSnapshot, instanceID, applyUpdate) {
	    var _treeSnapshot$instanc2 = treeSnapshot[instanceID],
	        displayName = _treeSnapshot$instanc2.displayName,
	        ownerID = _treeSnapshot$instanc2.ownerID;
	
	    var owner = treeSnapshot[ownerID];
	    var key = (owner ? owner.displayName + ' > ' : '') + displayName;
	    var stats = aggregatedStats[key];
	    if (!stats) {
	      affectedIDs[key] = {};
	      stats = aggregatedStats[key] = {
	        key: key,
	        instanceCount: 0,
	        inclusiveRenderDuration: 0,
	        renderCount: 0
	      };
	    }
	    affectedIDs[key][instanceID] = true;
	    applyUpdate(stats);
	  }
	
	  flushHistory.forEach(function (flush) {
	    var measurements = flush.measurements,
	        treeSnapshot = flush.treeSnapshot,
	        operations = flush.operations;
	
	    var isDefinitelyNotWastedByID = {};
	
	    // Find host components associated with an operation in this batch.
	    // Mark all components in their parent tree as definitely not wasted.
	    operations.forEach(function (operation) {
	      var instanceID = operation.instanceID;
	
	      var nextParentID = instanceID;
	      while (nextParentID) {
	        isDefinitelyNotWastedByID[nextParentID] = true;
	        nextParentID = treeSnapshot[nextParentID].parentID;
	      }
	    });
	
	    // Find composite components that rendered in this batch.
	    // These are potential candidates for being wasted renders.
	    var renderedCompositeIDs = {};
	    measurements.forEach(function (measurement) {
	      var instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      if (timerType !== 'render') {
	        return;
	      }
	      renderedCompositeIDs[instanceID] = true;
	    });
	
	    measurements.forEach(function (measurement) {
	      var duration = measurement.duration,
	          instanceID = measurement.instanceID,
	          timerType = measurement.timerType;
	
	      if (timerType !== 'render') {
	        return;
	      }
	
	      // If there was a DOM update below this component, or it has just been
	      // mounted, its render() is not considered wasted.
	      var updateCount = treeSnapshot[instanceID].updateCount;
	
	      if (isDefinitelyNotWastedByID[instanceID] || updateCount === 0) {
	        return;
	      }
	
	      // We consider this render() wasted.
	      updateAggregatedStats(treeSnapshot, instanceID, function (stats) {
	        stats.renderCount++;
	      });
	
	      var nextParentID = instanceID;
	      while (nextParentID) {
	        // Any parents rendered during this batch are considered wasted
	        // unless we previously marked them as dirty.
	        var isWasted = renderedCompositeIDs[nextParentID] && !isDefinitelyNotWastedByID[nextParentID];
	        if (isWasted) {
	          updateAggregatedStats(treeSnapshot, nextParentID, function (stats) {
	            stats.inclusiveRenderDuration += duration;
	          });
	        }
	        nextParentID = treeSnapshot[nextParentID].parentID;
	      }
	    });
	  });
	
	  return Object.keys(aggregatedStats).map(function (key) {
	    return _extends({}, aggregatedStats[key], {
	      instanceCount: Object.keys(affectedIDs[key]).length
	    });
	  }).sort(function (a, b) {
	    return b.inclusiveRenderDuration - a.inclusiveRenderDuration;
	  });
	}
	
	function getOperations() {
	  var flushHistory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getLastMeasurements();
	
	  if (false) {
	    warnInProduction();
	    return [];
	  }
	
	  var stats = [];
	  flushHistory.forEach(function (flush, flushIndex) {
	    var operations = flush.operations,
	        treeSnapshot = flush.treeSnapshot;
	
	    operations.forEach(function (operation) {
	      var instanceID = operation.instanceID,
	          type = operation.type,
	          payload = operation.payload;
	      var _treeSnapshot$instanc3 = treeSnapshot[instanceID],
	          displayName = _treeSnapshot$instanc3.displayName,
	          ownerID = _treeSnapshot$instanc3.ownerID;
	
	      var owner = treeSnapshot[ownerID];
	      var key = (owner ? owner.displayName + ' > ' : '') + displayName;
	
	      stats.push({
	        flushIndex: flushIndex,
	        instanceID: instanceID,
	        key: key,
	        type: type,
	        ownerID: ownerID,
	        payload: payload
	      });
	    });
	  });
	  return stats;
	}
	
	function printExclusive(flushHistory) {
	  if (false) {
	    warnInProduction();
	    return;
	  }
	
	  var stats = getExclusive(flushHistory);
	  var table = stats.map(function (item) {
	    var key = item.key,
	        instanceCount = item.instanceCount,
	        totalDuration = item.totalDuration;
	
	    var renderCount = item.counts.render || 0;
	    var renderDuration = item.durations.render || 0;
	    return {
	      'Component': key,
	      'Total time (ms)': roundFloat(totalDuration),
	      'Instance count': instanceCount,
	      'Total render time (ms)': roundFloat(renderDuration),
	      'Average render time (ms)': renderCount ? roundFloat(renderDuration / renderCount) : undefined,
	      'Render count': renderCount,
	      'Total lifecycle time (ms)': roundFloat(totalDuration - renderDuration)
	    };
	  });
	  consoleTable(table);
	}
	
	function printInclusive(flushHistory) {
	  if (false) {
	    warnInProduction();
	    return;
	  }
	
	  var stats = getInclusive(flushHistory);
	  var table = stats.map(function (item) {
	    var key = item.key,
	        instanceCount = item.instanceCount,
	        inclusiveRenderDuration = item.inclusiveRenderDuration,
	        renderCount = item.renderCount;
	
	    return {
	      'Owner > Component': key,
	      'Inclusive render time (ms)': roundFloat(inclusiveRenderDuration),
	      'Instance count': instanceCount,
	      'Render count': renderCount
	    };
	  });
	  consoleTable(table);
	}
	
	function printWasted(flushHistory) {
	  if (false) {
	    warnInProduction();
	    return;
	  }
	
	  var stats = getWasted(flushHistory);
	  var table = stats.map(function (item) {
	    var key = item.key,
	        instanceCount = item.instanceCount,
	        inclusiveRenderDuration = item.inclusiveRenderDuration,
	        renderCount = item.renderCount;
	
	    return {
	      'Owner > Component': key,
	      'Inclusive wasted time (ms)': roundFloat(inclusiveRenderDuration),
	      'Instance count': instanceCount,
	      'Render count': renderCount
	    };
	  });
	  consoleTable(table);
	}
	
	function printOperations(flushHistory) {
	  if (false) {
	    warnInProduction();
	    return;
	  }
	
	  var stats = getOperations(flushHistory);
	  var table = stats.map(function (stat) {
	    return {
	      'Owner > Node': stat.key,
	      'Operation': stat.type,
	      'Payload': typeof stat.payload === 'object' ? JSON.stringify(stat.payload) : stat.payload,
	      'Flush index': stat.flushIndex,
	      'Owner Component ID': stat.ownerID,
	      'DOM Component ID': stat.instanceID
	    };
	  });
	  consoleTable(table);
	}
	
	var warnedAboutPrintDOM = false;
	function printDOM(measurements) {
	   true ? warning(warnedAboutPrintDOM, '`ReactPerf.printDOM(...)` is deprecated. Use ' + '`ReactPerf.printOperations(...)` instead.') : void 0;
	  warnedAboutPrintDOM = true;
	  return printOperations(measurements);
	}
	
	var warnedAboutGetMeasurementsSummaryMap = false;
	function getMeasurementsSummaryMap(measurements) {
	   true ? warning(warnedAboutGetMeasurementsSummaryMap, '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' + '`ReactPerf.getWasted(...)` instead.') : void 0;
	  warnedAboutGetMeasurementsSummaryMap = true;
	  return getWasted(measurements);
	}
	
	function start() {
	  if (false) {
	    warnInProduction();
	    return;
	  }
	
	  ReactDebugTool.beginProfiling();
	}
	
	function stop() {
	  if (false) {
	    warnInProduction();
	    return;
	  }
	
	  ReactDebugTool.endProfiling();
	}
	
	function isRunning() {
	  if (false) {
	    warnInProduction();
	    return false;
	  }
	
	  return ReactDebugTool.isProfiling();
	}
	
	var ReactPerfAnalysis = {
	  getLastMeasurements: getLastMeasurements,
	  getExclusive: getExclusive,
	  getInclusive: getInclusive,
	  getWasted: getWasted,
	  getOperations: getOperations,
	  printExclusive: printExclusive,
	  printInclusive: printInclusive,
	  printWasted: printWasted,
	  printOperations: printOperations,
	  start: start,
	  stop: stop,
	  isRunning: isRunning,
	  // Deprecated:
	  printDOM: printDOM,
	  getMeasurementsSummaryMap: getMeasurementsSummaryMap
	};
	
	module.exports = ReactPerfAnalysis;

/***/ },
/* 610 */
280,
/* 611 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(608);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }
	
	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }
	
	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 612 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};
	
	module.exports = ReactServerBatchingStrategy;

/***/ },
/* 613 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var React = __webpack_require__(38);
	var ReactDOMContainerInfo = __webpack_require__(240);
	var ReactDefaultBatchingStrategy = __webpack_require__(153);
	var ReactInstrumentation = __webpack_require__(33);
	var ReactMarkupChecksum = __webpack_require__(248);
	var ReactReconciler = __webpack_require__(57);
	var ReactServerBatchingStrategy = __webpack_require__(612);
	var ReactServerRenderingTransaction = __webpack_require__(253);
	var ReactUpdates = __webpack_require__(34);
	
	var emptyObject = __webpack_require__(68);
	var instantiateReactComponent = __webpack_require__(160);
	var invariant = __webpack_require__(3);
	
	var pendingTransactions = 0;
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToStringImpl(element, makeStaticMarkup) {
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    transaction = ReactServerRenderingTransaction.getPooled(makeStaticMarkup);
	
	    pendingTransactions++;
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, true);
	      var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactDOMContainerInfo(), emptyObject, 0 /* parentDebugID */
	      );
	      if (true) {
	        ReactInstrumentation.debugTool.onUnmountComponent(componentInstance._debugID);
	      }
	      if (!makeStaticMarkup) {
	        markup = ReactMarkupChecksum.addChecksumToMarkup(markup);
	      }
	      return markup;
	    }, null);
	  } finally {
	    pendingTransactions--;
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    if (!pendingTransactions) {
	      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	    }
	  }
	}
	
	/**
	 * Render a ReactElement to its initial HTML. This should only be used on the
	 * server.
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostring
	 */
	function renderToString(element) {
	  !React.isValidElement(element) ?  true ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : _prodInvariant('46') : void 0;
	  return renderToStringImpl(element, false);
	}
	
	/**
	 * Similar to renderToString, except this doesn't create extra DOM attributes
	 * such as data-react-id that React uses internally.
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostaticmarkup
	 */
	function renderToStaticMarkup(element) {
	  !React.isValidElement(element) ?  true ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : _prodInvariant('47') : void 0;
	  return renderToStringImpl(element, true);
	}
	
	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(155);
	
	var warning = __webpack_require__(4);
	
	function warnNoop(publicInstance, callerName) {
	  if (true) {
	    var constructor = publicInstance.constructor;
	     true ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;

/***/ },
/* 615 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var React = __webpack_require__(38);
	var ReactCompositeComponent = __webpack_require__(238);
	var ReactDefaultBatchingStrategy = __webpack_require__(153);
	var ReactReconciler = __webpack_require__(57);
	var ReactReconcileTransaction = __webpack_require__(252);
	var ReactUpdates = __webpack_require__(34);
	
	var emptyObject = __webpack_require__(68);
	var getNextDebugID = __webpack_require__(283);
	var invariant = __webpack_require__(3);
	
	function injectDefaults() {
	  ReactUpdates.injection.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	}
	
	var NoopInternalComponent = function () {
	  function NoopInternalComponent(element) {
	    _classCallCheck(this, NoopInternalComponent);
	
	    this._renderedOutput = element;
	    this._currentElement = element;
	
	    if (true) {
	      this._debugID = getNextDebugID();
	    }
	  }
	
	  NoopInternalComponent.prototype.mountComponent = function mountComponent() {};
	
	  NoopInternalComponent.prototype.receiveComponent = function receiveComponent(element) {
	    this._renderedOutput = element;
	    this._currentElement = element;
	  };
	
	  NoopInternalComponent.prototype.unmountComponent = function unmountComponent() {};
	
	  NoopInternalComponent.prototype.getHostNode = function getHostNode() {
	    return undefined;
	  };
	
	  NoopInternalComponent.prototype.getPublicInstance = function getPublicInstance() {
	    return null;
	  };
	
	  return NoopInternalComponent;
	}();
	
	var ShallowComponentWrapper = function (element) {
	  // TODO: Consolidate with instantiateReactComponent
	  if (true) {
	    this._debugID = getNextDebugID();
	  }
	
	  this.construct(element);
	};
	_assign(ShallowComponentWrapper.prototype, ReactCompositeComponent, {
	  _constructComponent: ReactCompositeComponent._constructComponentWithoutOwner,
	  _instantiateReactComponent: function (element) {
	    return new NoopInternalComponent(element);
	  },
	  _replaceNodeWithMarkup: function () {},
	  _renderValidatedComponent: ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext
	});
	
	function _batchedRender(renderer, element, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
	  renderer._render(element, transaction, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	var ReactShallowRenderer = function () {
	  function ReactShallowRenderer() {
	    _classCallCheck(this, ReactShallowRenderer);
	
	    this._instance = null;
	  }
	
	  ReactShallowRenderer.prototype.getMountedInstance = function getMountedInstance() {
	    return this._instance ? this._instance._instance : null;
	  };
	
	  ReactShallowRenderer.prototype.render = function render(element, context) {
	    // Ensure we've done the default injections. This might not be true in the
	    // case of a simple test that only requires React and the TestUtils in
	    // conjunction with an inline-requires transform.
	    injectDefaults();
	
	    !React.isValidElement(element) ?  true ? invariant(false, 'ReactShallowRenderer render(): Invalid component element.%s', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : _prodInvariant('12', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : void 0;
	    !(typeof element.type !== 'string') ?  true ? invariant(false, 'ReactShallowRenderer render(): Shallow rendering works only with custom components, not primitives (%s). Instead of calling `.render(el)` and inspecting the rendered output, look at `el.props` directly instead.', element.type) : _prodInvariant('13', element.type) : void 0;
	
	    if (!context) {
	      context = emptyObject;
	    }
	    ReactUpdates.batchedUpdates(_batchedRender, this, element, context);
	
	    return this.getRenderOutput();
	  };
	
	  ReactShallowRenderer.prototype.getRenderOutput = function getRenderOutput() {
	    return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;
	  };
	
	  ReactShallowRenderer.prototype.unmount = function unmount() {
	    if (this._instance) {
	      ReactReconciler.unmountComponent(this._instance, false);
	    }
	  };
	
	  ReactShallowRenderer.prototype.unstable_batchedUpdates = function unstable_batchedUpdates(callback, bookkeeping) {
	    // This is used by Enzyme for fake-simulating events in shallow mode.
	    injectDefaults();
	    return ReactUpdates.batchedUpdates(callback, bookkeeping);
	  };
	
	  ReactShallowRenderer.prototype._render = function _render(element, transaction, context) {
	    if (this._instance) {
	      ReactReconciler.receiveComponent(this._instance, element, transaction, context);
	    } else {
	      var instance = new ShallowComponentWrapper(element);
	      ReactReconciler.mountComponent(instance, transaction, null, null, context, 0);
	      this._instance = instance;
	    }
	  };
	
	  return ReactShallowRenderer;
	}();
	
	ReactShallowRenderer.createRenderer = function () {
	  return new ReactShallowRenderer();
	};
	
	module.exports = ReactShallowRenderer;

/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6),
	    _assign = __webpack_require__(11);
	
	var EventConstants = __webpack_require__(582);
	var EventPluginHub = __webpack_require__(82);
	var EventPluginRegistry = __webpack_require__(92);
	var EventPropagators = __webpack_require__(83);
	var React = __webpack_require__(38);
	var ReactDOM = __webpack_require__(152);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactBrowserEventEmitter = __webpack_require__(93);
	var ReactInstanceMap = __webpack_require__(84);
	var ReactUpdates = __webpack_require__(34);
	var SyntheticEvent = __webpack_require__(46);
	var ReactShallowRenderer = __webpack_require__(615);
	
	var findDOMNode = __webpack_require__(257);
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function Event(suffix) {}
	
	// In react 16+ shallowRenderer will not be accessible via ReactTestUtils.createRenderer()
	// Instead it will be available via react-test-renderer/shallow
	// Maintain backwards compat for 15.5.0 release, but warn about using the deprecated method
	var hasWarnedAboutCreateRenderer = false;
	function createRendererWithWarning() {
	   true ? warning(hasWarnedAboutCreateRenderer, 'Shallow renderer has been moved to react-test-renderer/shallow. ' + 'Update references to remove this warning.') : void 0;
	  hasWarnedAboutCreateRenderer = true;
	
	  return new ReactShallowRenderer();
	}
	
	/**
	 * @class ReactTestUtils
	 */
	
	function findAllInRenderedTreeInternal(inst, test) {
	  if (!inst || !inst.getPublicInstance) {
	    return [];
	  }
	  var publicInst = inst.getPublicInstance();
	  var ret = test(publicInst) ? [publicInst] : [];
	  var currentElement = inst._currentElement;
	  if (ReactTestUtils.isDOMComponent(publicInst)) {
	    var renderedChildren = inst._renderedChildren;
	    var key;
	    for (key in renderedChildren) {
	      if (!renderedChildren.hasOwnProperty(key)) {
	        continue;
	      }
	      ret = ret.concat(findAllInRenderedTreeInternal(renderedChildren[key], test));
	    }
	  } else if (React.isValidElement(currentElement) && typeof currentElement.type === 'function') {
	    ret = ret.concat(findAllInRenderedTreeInternal(inst._renderedComponent, test));
	  }
	  return ret;
	}
	
	/**
	 * Utilities for making it easy to test React components.
	 *
	 * See https://facebook.github.io/react/docs/test-utils.html
	 *
	 * Todo: Support the entire DOM.scry query syntax. For now, these simple
	 * utilities will suffice for testing purposes.
	 * @lends ReactTestUtils
	 */
	var ReactTestUtils = {
	  renderIntoDocument: function (element) {
	    var div = document.createElement('div');
	    // None of our tests actually require attaching the container to the
	    // DOM, and doing so creates a mess that we rely on test isolation to
	    // clean up, so we're going to stop honoring the name of this method
	    // (and probably rename it eventually) if no problems arise.
	    // document.documentElement.appendChild(div);
	    return ReactDOM.render(element, div);
	  },
	
	  isElement: function (element) {
	    return React.isValidElement(element);
	  },
	
	  isElementOfType: function (inst, convenienceConstructor) {
	    return React.isValidElement(inst) && inst.type === convenienceConstructor;
	  },
	
	  isDOMComponent: function (inst) {
	    return !!(inst && inst.nodeType === 1 && inst.tagName);
	  },
	
	  isDOMComponentElement: function (inst) {
	    return !!(inst && React.isValidElement(inst) && !!inst.tagName);
	  },
	
	  isCompositeComponent: function (inst) {
	    if (ReactTestUtils.isDOMComponent(inst)) {
	      // Accessing inst.setState warns; just return false as that'll be what
	      // this returns when we have DOM nodes as refs directly
	      return false;
	    }
	    return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';
	  },
	
	  isCompositeComponentWithType: function (inst, type) {
	    if (!ReactTestUtils.isCompositeComponent(inst)) {
	      return false;
	    }
	    var internalInstance = ReactInstanceMap.get(inst);
	    var constructor = internalInstance._currentElement.type;
	
	    return constructor === type;
	  },
	
	  isCompositeComponentElement: function (inst) {
	    if (!React.isValidElement(inst)) {
	      return false;
	    }
	    // We check the prototype of the type that will get mounted, not the
	    // instance itself. This is a future proof way of duck typing.
	    var prototype = inst.type.prototype;
	    return typeof prototype.render === 'function' && typeof prototype.setState === 'function';
	  },
	
	  isCompositeComponentElementWithType: function (inst, type) {
	    var internalInstance = ReactInstanceMap.get(inst);
	    var constructor = internalInstance._currentElement.type;
	
	    return !!(ReactTestUtils.isCompositeComponentElement(inst) && constructor === type);
	  },
	
	  getRenderedChildOfCompositeComponent: function (inst) {
	    if (!ReactTestUtils.isCompositeComponent(inst)) {
	      return null;
	    }
	    var internalInstance = ReactInstanceMap.get(inst);
	    return internalInstance._renderedComponent.getPublicInstance();
	  },
	
	  findAllInRenderedTree: function (inst, test) {
	    if (!inst) {
	      return [];
	    }
	    !ReactTestUtils.isCompositeComponent(inst) ?  true ? invariant(false, 'findAllInRenderedTree(...): instance must be a composite component') : _prodInvariant('10') : void 0;
	    return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);
	  },
	
	  /**
	   * Finds all instance of components in the rendered tree that are DOM
	   * components with the class name matching `className`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedDOMComponentsWithClass: function (root, classNames) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      if (ReactTestUtils.isDOMComponent(inst)) {
	        var className = inst.className;
	        if (typeof className !== 'string') {
	          // SVG, probably.
	          className = inst.getAttribute('class') || '';
	        }
	        var classList = className.split(/\s+/);
	
	        if (!Array.isArray(classNames)) {
	          !(classNames !== undefined) ?  true ? invariant(false, 'TestUtils.scryRenderedDOMComponentsWithClass expects a className as a second argument.') : _prodInvariant('11') : void 0;
	          classNames = classNames.split(/\s+/);
	        }
	        return classNames.every(function (name) {
	          return classList.indexOf(name) !== -1;
	        });
	      }
	      return false;
	    });
	  },
	
	  /**
	   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactDOMComponent} The one match.
	   */
	  findRenderedDOMComponentWithClass: function (root, className) {
	    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for class:' + className);
	    }
	    return all[0];
	  },
	
	  /**
	   * Finds all instance of components in the rendered tree that are DOM
	   * components with the tag name matching `tagName`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedDOMComponentsWithTag: function (root, tagName) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      return ReactTestUtils.isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();
	    });
	  },
	
	  /**
	   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactDOMComponent} The one match.
	   */
	  findRenderedDOMComponentWithTag: function (root, tagName) {
	    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for tag:' + tagName);
	    }
	    return all[0];
	  },
	
	  /**
	   * Finds all instances of components with type equal to `componentType`.
	   * @return {array} an array of all the matches.
	   */
	  scryRenderedComponentsWithType: function (root, componentType) {
	    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
	      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);
	    });
	  },
	
	  /**
	   * Same as `scryRenderedComponentsWithType` but expects there to be one result
	   * and returns that one result, or throws exception if there is any other
	   * number of matches besides one.
	   * @return {!ReactComponent} The one match.
	   */
	  findRenderedComponentWithType: function (root, componentType) {
	    var all = ReactTestUtils.scryRenderedComponentsWithType(root, componentType);
	    if (all.length !== 1) {
	      throw new Error('Did not find exactly one match (found: ' + all.length + ') ' + 'for componentType:' + componentType);
	    }
	    return all[0];
	  },
	
	  /**
	   * Pass a mocked component module to this method to augment it with
	   * useful methods that allow it to be used as a dummy React component.
	   * Instead of rendering as usual, the component will become a simple
	   * <div> containing any provided children.
	   *
	   * @param {object} module the mock function object exported from a
	   *                        module that defines the component to be mocked
	   * @param {?string} mockTagName optional dummy root tag name to return
	   *                              from render method (overrides
	   *                              module.mockTagName if provided)
	   * @return {object} the ReactTestUtils object (for chaining)
	   */
	  mockComponent: function (module, mockTagName) {
	    mockTagName = mockTagName || module.mockTagName || 'div';
	
	    module.prototype.render.mockImplementation(function () {
	      return React.createElement(mockTagName, null, this.props.children);
	    });
	
	    return this;
	  },
	
	  /**
	   * Simulates a top level event being dispatched from a raw event that occurred
	   * on an `Element` node.
	   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`
	   * @param {!Element} node The dom to simulate an event occurring on.
	   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
	   */
	  simulateNativeEventOnNode: function (topLevelType, node, fakeNativeEvent) {
	    fakeNativeEvent.target = node;
	    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(topLevelType, fakeNativeEvent);
	  },
	
	  /**
	   * Simulates a top level event being dispatched from a raw event that occurred
	   * on the `ReactDOMComponent` `comp`.
	   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.
	   * @param {!ReactDOMComponent} comp
	   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
	   */
	  simulateNativeEventOnDOMComponent: function (topLevelType, comp, fakeNativeEvent) {
	    ReactTestUtils.simulateNativeEventOnNode(topLevelType, findDOMNode(comp), fakeNativeEvent);
	  },
	
	  nativeTouchData: function (x, y) {
	    return {
	      touches: [{ pageX: x, pageY: y }]
	    };
	  },
	
	  createRenderer: createRendererWithWarning,
	
	  Simulate: null,
	  SimulateNative: {}
	};
	
	/**
	 * Exports:
	 *
	 * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`
	 * - ... (All keys from event plugin `eventTypes` objects)
	 */
	function makeSimulator(eventType) {
	  return function (domComponentOrNode, eventData) {
	    var node;
	    !!React.isValidElement(domComponentOrNode) ?  true ? invariant(false, 'TestUtils.Simulate expects a component instance and not a ReactElement.TestUtils.Simulate will not work if you are using shallow rendering.') : _prodInvariant('14') : void 0;
	    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
	      node = findDOMNode(domComponentOrNode);
	    } else if (domComponentOrNode.tagName) {
	      node = domComponentOrNode;
	    }
	
	    var dispatchConfig = EventPluginRegistry.eventNameDispatchConfigs[eventType];
	
	    var fakeNativeEvent = new Event();
	    fakeNativeEvent.target = node;
	    fakeNativeEvent.type = eventType.toLowerCase();
	
	    // We don't use SyntheticEvent.getPooled in order to not have to worry about
	    // properly destroying any properties assigned from `eventData` upon release
	    var event = new SyntheticEvent(dispatchConfig, ReactDOMComponentTree.getInstanceFromNode(node), fakeNativeEvent, node);
	    // Since we aren't using pooling, always persist the event. This will make
	    // sure it's marked and won't warn when setting additional properties.
	    event.persist();
	    _assign(event, eventData);
	
	    if (dispatchConfig.phasedRegistrationNames) {
	      EventPropagators.accumulateTwoPhaseDispatches(event);
	    } else {
	      EventPropagators.accumulateDirectDispatches(event);
	    }
	
	    ReactUpdates.batchedUpdates(function () {
	      EventPluginHub.enqueueEvents(event);
	      EventPluginHub.processEventQueue(true);
	    });
	  };
	}
	
	function buildSimulators() {
	  ReactTestUtils.Simulate = {};
	
	  var eventType;
	  for (eventType in EventPluginRegistry.eventNameDispatchConfigs) {
	    /**
	     * @param {!Element|ReactDOMComponent} domComponentOrNode
	     * @param {?object} eventData Fake event data to use in SyntheticEvent.
	     */
	    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);
	  }
	}
	
	// Rebuild ReactTestUtils.Simulate whenever event plugins are injected
	var oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;
	EventPluginHub.injection.injectEventPluginOrder = function () {
	  oldInjectEventPluginOrder.apply(this, arguments);
	  buildSimulators();
	};
	var oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;
	EventPluginHub.injection.injectEventPluginsByName = function () {
	  oldInjectEventPlugins.apply(this, arguments);
	  buildSimulators();
	};
	
	buildSimulators();
	
	/**
	 * Exports:
	 *
	 * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`
	 * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`
	 * - ... (All keys from `EventConstants.topLevelTypes`)
	 *
	 * Note: Top level event types are a subset of the entire set of handler types
	 * (which include a broader set of "synthetic" events). For example, onDragDone
	 * is a synthetic event. Except when testing an event plugin or React's event
	 * handling code specifically, you probably want to use ReactTestUtils.Simulate
	 * to dispatch synthetic events.
	 */
	
	function makeNativeSimulator(eventType) {
	  return function (domComponentOrNode, nativeEventData) {
	    var fakeNativeEvent = new Event(eventType);
	    _assign(fakeNativeEvent, nativeEventData);
	    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
	      ReactTestUtils.simulateNativeEventOnDOMComponent(eventType, domComponentOrNode, fakeNativeEvent);
	    } else if (domComponentOrNode.tagName) {
	      // Will allow on actual dom nodes.
	      ReactTestUtils.simulateNativeEventOnNode(eventType, domComponentOrNode, fakeNativeEvent);
	    }
	  };
	}
	
	Object.keys(topLevelTypes).forEach(function (eventType) {
	  // Event type is stored as 'topClick' - we transform that to 'click'
	  var convenienceName = eventType.indexOf('top') === 0 ? eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
	  /**
	   * @param {!Element|ReactDOMComponent} domComponentOrNode
	   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.
	   */
	  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(eventType);
	});
	
	module.exports = ReactTestUtils;

/***/ },
/* 617 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 618 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(83);
	var ExecutionEnvironment = __webpack_require__(18);
	var ReactDOMComponentTree = __webpack_require__(16);
	var ReactInputSelection = __webpack_require__(247);
	var SyntheticEvent = __webpack_require__(46);
	
	var getActiveElement = __webpack_require__(230);
	var isTextInputElement = __webpack_require__(262);
	var shallowEqual = __webpack_require__(145);
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 619 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var EventListener = __webpack_require__(228);
	var EventPropagators = __webpack_require__(83);
	var ReactDOMComponentTree = __webpack_require__(16);
	var SyntheticAnimationEvent = __webpack_require__(620);
	var SyntheticClipboardEvent = __webpack_require__(621);
	var SyntheticEvent = __webpack_require__(46);
	var SyntheticFocusEvent = __webpack_require__(624);
	var SyntheticKeyboardEvent = __webpack_require__(626);
	var SyntheticMouseEvent = __webpack_require__(106);
	var SyntheticDragEvent = __webpack_require__(623);
	var SyntheticTouchEvent = __webpack_require__(627);
	var SyntheticTransitionEvent = __webpack_require__(628);
	var SyntheticUIEvent = __webpack_require__(94);
	var SyntheticWheelEvent = __webpack_require__(629);
	
	var emptyFunction = __webpack_require__(37);
	var getEventCharCode = __webpack_require__(157);
	var invariant = __webpack_require__(3);
	
	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;
	
	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});
	
	var onClickListeners = {};
	
	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  true ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;

/***/ },
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(46);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 621 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(46);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 622 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(46);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(106);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(94);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(46);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(94);
	
	var getEventCharCode = __webpack_require__(157);
	var getEventKey = __webpack_require__(634);
	var getEventModifierState = __webpack_require__(158);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 627 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(94);
	
	var getEventModifierState = __webpack_require__(158);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 628 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(46);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(106);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 630 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 631 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(6);
	
	var ReactPropTypeLocationNames = __webpack_require__(610);
	var ReactPropTypesSecret = __webpack_require__(251);
	
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ?  true ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	       true ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (true) {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(26);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	         true ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(80)))

/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(235);
	var warning = __webpack_require__(4);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (true) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	           true ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(149);
	var traverseAllChildren = __webpack_require__(264);
	var warning = __webpack_require__(4);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (true) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(26);
	      }
	      if (!keyUnique) {
	         true ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (true) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(80)))

/***/ },
/* 634 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(157);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 635 */
282,
/* 636 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 637 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(108);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(249);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 639 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(596);


/***/ },
/* 640 */
/***/ function(module, exports) {

	exports.__esModule = true;
	var TAG_NAMES = exports.TAG_NAMES = {
	    HTML: "htmlAttributes",
	    TITLE: "title",
	    BASE: "base",
	    META: "meta",
	    LINK: "link",
	    SCRIPT: "script",
	    NOSCRIPT: "noscript",
	    STYLE: "style"
	};
	
	var TAG_PROPERTIES = exports.TAG_PROPERTIES = {
	    NAME: "name",
	    CHARSET: "charset",
	    HTTPEQUIV: "http-equiv",
	    REL: "rel",
	    HREF: "href",
	    PROPERTY: "property",
	    SRC: "src",
	    INNER_HTML: "innerHTML",
	    CSS_TEXT: "cssText",
	    ITEM_PROP: "itemprop"
	};
	
	var REACT_TAG_MAP = exports.REACT_TAG_MAP = {
	    "charset": "charSet",
	    "http-equiv": "httpEquiv",
	    "itemprop": "itemProp",
	    "class": "className"
	};

/***/ },
/* 641 */
/***/ function(module, exports, __webpack_require__) {

	exports.__esModule = true;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PlainComponent = function (_React$Component) {
	    _inherits(PlainComponent, _React$Component);
	
	    function PlainComponent() {
	        _classCallCheck(this, PlainComponent);
	
	        return _possibleConstructorReturn(this, (PlainComponent.__proto__ || Object.getPrototypeOf(PlainComponent)).apply(this, arguments));
	    }
	
	    _createClass(PlainComponent, [{
	        key: "render",
	        value: function render() {
	            return null;
	        }
	    }]);
	
	    return PlainComponent;
	}(_react2.default.Component);
	
	exports.default = PlainComponent;
	module.exports = exports["default"];

/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global Prism */
	
	var PrismCode = function (_PureComponent) {
	  _inherits(PrismCode, _PureComponent);
	
	  function PrismCode() {
	    _classCallCheck(this, PrismCode);
	
	    return _possibleConstructorReturn(this, (PrismCode.__proto__ || Object.getPrototypeOf(PrismCode)).apply(this, arguments));
	  }
	
	  _createClass(PrismCode, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      this._hightlight();
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      this._hightlight();
	    }
	  }, {
	    key: "_hightlight",
	    value: function _hightlight() {
	      Prism.highlightElement(this.refs.code, this.props.async);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _props = this.props;
	      var className = _props.className;
	      var children = _props.children;
	
	
	      return _react2.default.createElement(
	        "code",
	        {
	          ref: "code",
	          className: className
	        },
	        children
	      );
	    }
	  }]);
	
	  return PrismCode;
	}(_react.PureComponent);
	
	PrismCode.propTypes = {
	  async: _react.PropTypes.bool,
	  className: _react.PropTypes.string,
	  children: _react.PropTypes.any
	};
	exports.default = PrismCode;

/***/ },
/* 643 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _InternalPropTypes = __webpack_require__(70);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * A mixin that adds the "history" instance variable to components.
	 */
	var History = {
	
	  contextTypes: {
	    history: _InternalPropTypes.history
	  },
	
	  componentWillMount: function componentWillMount() {
	     true ? (0, _routerWarning2.default)(false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : void 0;
	    this.history = this.context.history;
	  }
	};
	
	exports.default = History;
	module.exports = exports['default'];

/***/ },
/* 644 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Link = __webpack_require__(265);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	var IndexLink = _react2.default.createClass({
	  displayName: 'IndexLink',
	  render: function render() {
	    return _react2.default.createElement(_Link2.default, _extends({}, this.props, { onlyActiveOnIndex: true }));
	  }
	});
	
	exports.default = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Redirect = __webpack_require__(266);
	
	var _Redirect2 = _interopRequireDefault(_Redirect);
	
	var _InternalPropTypes = __webpack_require__(70);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;
	
	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */
	
	var IndexRedirect = _react2.default.createClass({
	  displayName: 'IndexRedirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
	      } else {
	         true ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  true ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRedirect;
	module.exports = exports['default'];

/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(58);
	
	var _InternalPropTypes = __webpack_require__(70);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var func = _react2.default.PropTypes.func;
	
	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */
	
	var IndexRoute = _react2.default.createClass({
	  displayName: 'IndexRoute',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
	      } else {
	         true ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    path: _InternalPropTypes.falsy,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  true ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRoute;
	module.exports = exports['default'];

/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var object = _react2.default.PropTypes.object;
	
	/**
	 * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
	 * component that may be used to cancel a transition or prompt the user
	 * for confirmation.
	 *
	 * On standard transitions, routerWillLeave receives a single argument: the
	 * location we're transitioning to. To cancel the transition, return false.
	 * To prompt the user for confirmation, return a prompt message (string).
	 *
	 * During the beforeunload event (assuming you're using the useBeforeUnload
	 * history enhancer), routerWillLeave does not receive a location object
	 * because it isn't possible for us to know the location we're transitioning
	 * to. In this case routerWillLeave must return a prompt message to prevent
	 * the user from closing the window/tab.
	 */
	
	var Lifecycle = {
	
	  contextTypes: {
	    history: object.isRequired,
	    // Nested children receive the route as context, either
	    // set by the route component using the RouteContext mixin
	    // or by some other ancestor.
	    route: object
	  },
	
	  propTypes: {
	    // Route components receive the route object as a prop.
	    route: object
	  },
	
	  componentDidMount: function componentDidMount() {
	     true ? (0, _routerWarning2.default)(false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : void 0;
	    !this.routerWillLeave ?  true ? (0, _invariant2.default)(false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : (0, _invariant2.default)(false) : void 0;
	
	    var route = this.props.route || this.context.route;
	
	    !route ?  true ? (0, _invariant2.default)(false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : (0, _invariant2.default)(false) : void 0;
	
	    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();
	  }
	};
	
	exports.default = Lifecycle;
	module.exports = exports['default'];

/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(58);
	
	var _InternalPropTypes = __webpack_require__(70);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	
	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */
	
	var Route = _react2.default.createClass({
	  displayName: 'Route',
	
	
	  statics: {
	    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
	  },
	
	  propTypes: {
	    path: string,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  true ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Route;
	module.exports = exports['default'];

/***/ },
/* 649 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var object = _react2.default.PropTypes.object;
	
	/**
	 * The RouteContext mixin provides a convenient way for route
	 * components to set the route in context. This is needed for
	 * routes that render elements that want to use the Lifecycle
	 * mixin to prevent transitions.
	 */
	
	var RouteContext = {
	
	  propTypes: {
	    route: object.isRequired
	  },
	
	  childContextTypes: {
	    route: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    return {
	      route: this.props.route
	    };
	  },
	  componentWillMount: function componentWillMount() {
	     true ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;
	  }
	};
	
	exports.default = RouteContext;
	module.exports = exports['default'];

/***/ },
/* 650 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createHashHistory = __webpack_require__(274);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _useQueries = __webpack_require__(113);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _createTransitionManager = __webpack_require__(166);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _InternalPropTypes = __webpack_require__(70);
	
	var _RouterContext = __webpack_require__(110);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _RouteUtils = __webpack_require__(58);
	
	var _RouterUtils = __webpack_require__(267);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function isDeprecatedHistory(history) {
	  return !history || !history.__v2_compatible__;
	}
	
	/* istanbul ignore next: sanity check */
	function isUnsupportedHistory(history) {
	  // v3 histories expose getCurrentLocation, but aren't currently supported.
	  return history && history.getCurrentLocation;
	}
	
	var _React$PropTypes = _react2.default.PropTypes;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	
	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RouterContext> with all the props
	 * it needs each time the URL changes.
	 */
	
	var Router = _react2.default.createClass({
	  displayName: 'Router',
	
	
	  propTypes: {
	    history: object,
	    children: _InternalPropTypes.routes,
	    routes: _InternalPropTypes.routes, // alias for children
	    render: func,
	    createElement: func,
	    onError: func,
	    onUpdate: func,
	
	    // Deprecated:
	    parseQueryString: func,
	    stringifyQuery: func,
	
	    // PRIVATE: For client-side rehydration of server match.
	    matchContext: object
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      render: function render(props) {
	        return _react2.default.createElement(_RouterContext2.default, props);
	      }
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  },
	  handleError: function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;
	
	    var _props = this.props;
	    var parseQueryString = _props.parseQueryString;
	    var stringifyQuery = _props.stringifyQuery;
	
	     true ? (0, _routerWarning2.default)(!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : void 0;
	
	    var _createRouterObjects = this.createRouterObjects();
	
	    var history = _createRouterObjects.history;
	    var transitionManager = _createRouterObjects.transitionManager;
	    var router = _createRouterObjects.router;
	
	
	    this._unlisten = transitionManager.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });
	
	    this.history = history;
	    this.router = router;
	  },
	  createRouterObjects: function createRouterObjects() {
	    var matchContext = this.props.matchContext;
	
	    if (matchContext) {
	      return matchContext;
	    }
	
	    var history = this.props.history;
	    var _props2 = this.props;
	    var routes = _props2.routes;
	    var children = _props2.children;
	
	
	    !!isUnsupportedHistory(history) ?  true ? (0, _invariant2.default)(false, 'You have provided a history object created with history v3.x. ' + 'This version of React Router is not compatible with v3 history ' + 'objects. Please use history v2.x instead.') : (0, _invariant2.default)(false) : void 0;
	
	    if (isDeprecatedHistory(history)) {
	      history = this.wrapDeprecatedHistory(history);
	    }
	
	    var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
	    var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
	    var routingHistory = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);
	
	    return { history: routingHistory, transitionManager: transitionManager, router: router };
	  },
	  wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {
	    var _props3 = this.props;
	    var parseQueryString = _props3.parseQueryString;
	    var stringifyQuery = _props3.stringifyQuery;
	
	
	    var createHistory = void 0;
	    if (history) {
	       true ? (0, _routerWarning2.default)(false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \'react-router\'` or `import { hashHistory } from \'react-router\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : void 0;
	      createHistory = function createHistory() {
	        return history;
	      };
	    } else {
	       true ? (0, _routerWarning2.default)(false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : void 0;
	      createHistory = _createHashHistory2.default;
	    }
	
	    return (0, _useQueries2.default)(createHistory)({ parseQueryString: parseQueryString, stringifyQuery: stringifyQuery });
	  },
	
	
	  /* istanbul ignore next: sanity check */
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	     true ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;
	
	     true ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  },
	  render: function render() {
	    var _state = this.state;
	    var location = _state.location;
	    var routes = _state.routes;
	    var params = _state.params;
	    var components = _state.components;
	    var _props4 = this.props;
	    var createElement = _props4.createElement;
	    var render = _props4.render;
	
	    var props = _objectWithoutProperties(_props4, ['createElement', 'render']);
	
	    if (location == null) return null; // Async match
	
	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });
	
	    return render(_extends({}, props, {
	      history: this.history,
	      router: this.router,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components,
	      createElement: createElement
	    }));
	  }
	});
	
	exports.default = Router;
	module.exports = exports['default'];

/***/ },
/* 651 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouterContext = __webpack_require__(110);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var RoutingContext = _react2.default.createClass({
	  displayName: 'RoutingContext',
	  componentWillMount: function componentWillMount() {
	     true ? (0, _routerWarning2.default)(false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \'react-router\'`. http://tiny.cc/router-routercontext') : void 0;
	  },
	  render: function render() {
	    return _react2.default.createElement(_RouterContext2.default, this.props);
	  }
	});
	
	exports.default = RoutingContext;
	module.exports = exports['default'];

/***/ },
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runChangeHooks = runChangeHooks;
	exports.runLeaveHooks = runLeaveHooks;
	
	var _AsyncUtils = __webpack_require__(164);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createTransitionHook(hook, route, asyncArity) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    hook.apply(route, args);
	
	    if (hook.length < asyncArity) {
	      var callback = args[args.length - 1];
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	}
	
	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createTransitionHook(route.onEnter, route, 3));
	
	    return hooks;
	  }, []);
	}
	
	function getChangeHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onChange) hooks.push(createTransitionHook(route.onChange, route, 4));
	    return hooks;
	  }, []);
	}
	
	function runTransitionHooks(length, iter, callback) {
	  if (!length) {
	    callback();
	    return;
	  }
	
	  var redirectInfo = void 0;
	  function replace(location, deprecatedPathname, deprecatedQuery) {
	    if (deprecatedPathname) {
	       true ? (0, _routerWarning2.default)(false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
	      redirectInfo = {
	        pathname: deprecatedPathname,
	        query: deprecatedQuery,
	        state: location
	      };
	
	      return;
	    }
	
	    redirectInfo = location;
	  }
	
	  (0, _AsyncUtils.loopAsync)(length, function (index, next, done) {
	    iter(index, replace, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	
	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runEnterHooks(routes, nextState, callback) {
	  var hooks = getEnterHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    hooks[index](nextState, replace, next);
	  }, callback);
	}
	
	/**
	 * Runs all onChange hooks in the given array of routes in order
	 * with onChange(prevState, nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runChangeHooks(routes, state, nextState, callback) {
	  var hooks = getChangeHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    hooks[index](state, nextState, replace, next);
	  }, callback);
	}
	
	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */
	function runLeaveHooks(routes, prevState) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i], prevState);
	  }
	}

/***/ },
/* 653 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouterContext = __webpack_require__(110);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  if (true) {
	    middlewares.forEach(function (middleware, index) {
	       true ? (0, _routerWarning2.default)(middleware.renderRouterContext || middleware.renderRouteComponent, 'The middleware specified at index ' + index + ' does not appear to be ' + 'a valid React Router middleware.') : void 0;
	    });
	  }
	
	  var withContext = middlewares.map(function (middleware) {
	    return middleware.renderRouterContext;
	  }).filter(Boolean);
	  var withComponent = middlewares.map(function (middleware) {
	    return middleware.renderRouteComponent;
	  }).filter(Boolean);
	
	  var makeCreateElement = function makeCreateElement() {
	    var baseCreateElement = arguments.length <= 0 || arguments[0] === undefined ? _react.createElement : arguments[0];
	    return function (Component, props) {
	      return withComponent.reduceRight(function (previous, renderRouteComponent) {
	        return renderRouteComponent(previous, props);
	      }, baseCreateElement(Component, props));
	    };
	  };
	
	  return function (renderProps) {
	    return withContext.reduceRight(function (previous, renderRouterContext) {
	      return renderRouterContext(previous, renderProps);
	    }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {
	      createElement: makeCreateElement(renderProps.createElement)
	    })));
	  };
	};
	
	module.exports = exports['default'];

/***/ },
/* 654 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createBrowserHistory = __webpack_require__(665);
	
	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);
	
	var _createRouterHistory = __webpack_require__(269);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 655 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(85);
	
	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;
	
	  var paramNames = (0, _PatternUtils.getParamNames)(route.path);
	
	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}
	
	/**
	 * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 *
	 * changeRoutes are any routes that didn't leave or enter during
	 * the transition.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;
	
	  var leaveRoutes = void 0,
	      changeRoutes = void 0,
	      enterRoutes = void 0;
	  if (prevRoutes) {
	    (function () {
	      var parentIsLeaving = false;
	      leaveRoutes = prevRoutes.filter(function (route) {
	        if (parentIsLeaving) {
	          return true;
	        } else {
	          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	          if (isLeaving) parentIsLeaving = true;
	          return isLeaving;
	        }
	      });
	
	      // onLeave hooks start at the leaf route.
	      leaveRoutes.reverse();
	
	      enterRoutes = [];
	      changeRoutes = [];
	
	      nextRoutes.forEach(function (route) {
	        var isNew = prevRoutes.indexOf(route) === -1;
	        var paramsChanged = leaveRoutes.indexOf(route) !== -1;
	
	        if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);
	      });
	    })();
	  } else {
	    leaveRoutes = [];
	    changeRoutes = [];
	    enterRoutes = nextRoutes;
	  }
	
	  return {
	    leaveRoutes: leaveRoutes,
	    changeRoutes: changeRoutes,
	    enterRoutes: enterRoutes
	  };
	}
	
	exports.default = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _AsyncUtils = __webpack_require__(164);
	
	var _makeStateWithLocation = __webpack_require__(270);
	
	var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getComponentsForRoute(nextState, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	    return;
	  }
	
	  var getComponent = route.getComponent || route.getComponents;
	  if (!getComponent) {
	    callback();
	    return;
	  }
	
	  var location = nextState.location;
	
	  var nextStateWithLocation = (0, _makeStateWithLocation2.default)(nextState, location);
	
	  getComponent.call(route, nextStateWithLocation, callback);
	}
	
	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState, route, callback);
	  }, callback);
	}
	
	exports.default = getComponents;
	module.exports = exports['default'];

/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(85);
	
	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};
	
	  if (!route.path) return routeParams;
	
	  (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
	    if (Object.prototype.hasOwnProperty.call(params, p)) {
	      routeParams[p] = params[p];
	    }
	  });
	
	  return routeParams;
	}
	
	exports.default = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createHashHistory = __webpack_require__(274);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _createRouterHistory = __webpack_require__(269);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.default = isActive;
	
	var _PatternUtils = __webpack_require__(85);
	
	function deepEqual(a, b) {
	  if (a == b) return true;
	
	  if (a == null || b == null) return false;
	
	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }
	
	  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
	    for (var p in a) {
	      if (!Object.prototype.hasOwnProperty.call(a, p)) {
	        continue;
	      }
	
	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }
	
	    return true;
	  }
	
	  return String(a) === String(b);
	}
	
	/**
	 * Returns true if the current pathname matches the supplied one, net of
	 * leading and trailing slash normalization. This is sufficient for an
	 * indexOnly route match.
	 */
	function pathIsActive(pathname, currentPathname) {
	  // Normalize leading slash for consistency. Leading slash on pathname has
	  // already been normalized in isActive. See caveat there.
	  if (currentPathname.charAt(0) !== '/') {
	    currentPathname = '/' + currentPathname;
	  }
	
	  // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
	  // `/foo` as active, but in this case, we would already have failed the
	  // match.
	  if (pathname.charAt(pathname.length - 1) !== '/') {
	    pathname += '/';
	  }
	  if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
	    currentPathname += '/';
	  }
	
	  return currentPathname === pathname;
	}
	
	/**
	 * Returns true if the given pathname matches the active routes and params.
	 */
	function routeIsActive(pathname, routes, params) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];
	
	  // for...of would work here but it's probably slower post-transpilation.
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    var route = routes[i];
	    var pattern = route.path || '';
	
	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }
	
	    if (remainingPathname !== null && pattern) {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	
	      if (remainingPathname === '') {
	        // We have an exact match on the route. Just check that all the params
	        // match.
	        // FIXME: This doesn't work on repeated params.
	        return paramNames.every(function (paramName, index) {
	          return String(paramValues[index]) === String(params[paramName]);
	        });
	      }
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;
	
	  if (query == null) return true;
	
	  return deepEqual(query, activeQuery);
	}
	
	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(_ref, indexOnly, currentLocation, routes, params) {
	  var pathname = _ref.pathname;
	  var query = _ref.query;
	
	  if (currentLocation == null) return false;
	
	  // TODO: This is a bit ugly. It keeps around support for treating pathnames
	  // without preceding slashes as absolute paths, but possibly also works
	  // around the same quirks with basenames as in matchRoutes.
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }
	
	  if (!pathIsActive(pathname, currentLocation.pathname)) {
	    // The path check is necessary and sufficient for indexOnly, but otherwise
	    // we still need to check the routes.
	    if (indexOnly || !routeIsActive(pathname, routes, params)) {
	      return false;
	    }
	  }
	
	  return queryIsActive(query, currentLocation.query);
	}
	module.exports = exports['default'];

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _Actions = __webpack_require__(86);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _createMemoryHistory = __webpack_require__(268);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	var _createTransitionManager = __webpack_require__(166);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _RouteUtils = __webpack_require__(58);
	
	var _RouterUtils = __webpack_require__(267);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser unless you're using
	 * server-side rendering with async routes.
	 */
	function match(_ref, callback) {
	  var history = _ref.history;
	  var routes = _ref.routes;
	  var location = _ref.location;
	
	  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);
	
	  !(history || location) ?  true ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;
	
	  history = history ? history : (0, _createMemoryHistory2.default)(options);
	  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));
	
	  var unlisten = void 0;
	
	  if (location) {
	    // Allow match({ location: '/the/path', ... })
	    location = history.createLocation(location);
	  } else {
	    // Pick up the location from the history via synchronous history.listen
	    // call if needed.
	    unlisten = history.listen(function (historyLocation) {
	      location = historyLocation;
	    });
	  }
	
	  var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
	  history = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);
	
	  transitionManager.match(location, function (error, redirectLocation, nextState) {
	    callback(error, redirectLocation && router.createLocation(redirectLocation, _Actions.REPLACE), nextState && _extends({}, nextState, {
	      history: history,
	      router: router,
	      matchContext: { history: history, transitionManager: transitionManager, router: router }
	    }));
	
	    // Defer removing the listener to here to prevent DOM histories from having
	    // to unwind DOM event listeners unnecessarily, in case callback renders a
	    // <Router> and attaches another history listener.
	    if (unlisten) {
	      unlisten();
	    }
	  });
	}
	
	exports.default = match;
	module.exports = exports['default'];

/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.default = matchRoutes;
	
	var _AsyncUtils = __webpack_require__(164);
	
	var _makeStateWithLocation = __webpack_require__(270);
	
	var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);
	
	var _PatternUtils = __webpack_require__(85);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _RouteUtils = __webpack_require__(58);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getChildRoutes(route, location, paramNames, paramValues, callback) {
	  if (route.childRoutes) {
	    return [null, route.childRoutes];
	  }
	  if (!route.getChildRoutes) {
	    return [];
	  }
	
	  var sync = true,
	      result = void 0;
	
	  var partialNextState = {
	    location: location,
	    params: createParams(paramNames, paramValues)
	  };
	
	  var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);
	
	  route.getChildRoutes(partialNextStateWithLocation, function (error, childRoutes) {
	    childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
	    if (sync) {
	      result = [error, childRoutes];
	      return;
	    }
	
	    callback(error, childRoutes);
	  });
	
	  sync = false;
	  return result; // Might be undefined.
	}
	
	function getIndexRoute(route, location, paramNames, paramValues, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    var partialNextState = {
	      location: location,
	      params: createParams(paramNames, paramValues)
	    };
	
	    var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);
	
	    route.getIndexRoute(partialNextStateWithLocation, function (error, indexRoute) {
	      callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    });
	  } else if (route.childRoutes) {
	    (function () {
	      var pathless = route.childRoutes.filter(function (childRoute) {
	        return !childRoute.path;
	      });
	
	      (0, _AsyncUtils.loopAsync)(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    })();
	  } else {
	    callback();
	  }
	}
	
	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];
	
	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }
	
	    return params;
	  }, params);
	}
	
	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}
	
	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';
	
	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }
	
	  // Only try to match the path if the route actually has a pattern, and if
	  // we're not just searching for potential nested absolute paths.
	  if (remainingPathname !== null && pattern) {
	    try {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	    } catch (error) {
	      callback(error);
	    }
	
	    // By assumption, pattern is non-empty here, which is the prerequisite for
	    // actually terminating a match.
	    if (remainingPathname === '') {
	      var _ret2 = function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };
	
	        getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;
	
	               true ? (0, _routerWarning2.default)(indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : void 0;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	               true ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
	              match.routes.push(indexRoute);
	            }
	
	            callback(null, match);
	          }
	        });
	
	        return {
	          v: void 0
	        };
	      }();
	
	      if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
	    }
	  }
	
	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    };
	
	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback, remainingPathname) {
	  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
	  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];
	
	  if (remainingPathname === undefined) {
	    // TODO: This is a little bit ugly, but it works around a quirk in history
	    // that strips the leading slash from pathnames when using basenames with
	    // trailing slashes.
	    if (location.pathname.charAt(0) !== '/') {
	      location = _extends({}, location, {
	        pathname: '/' + location.pathname
	      });
	    }
	    remainingPathname = location.pathname;
	  }
	
	  (0, _AsyncUtils.loopAsync)(routes.length, function (index, next, done) {
	    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	      if (error || match) {
	        done(error, match);
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	module.exports = exports['default'];

/***/ },
/* 662 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _useQueries = __webpack_require__(113);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _createTransitionManager = __webpack_require__(166);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _routerWarning = __webpack_require__(20);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know about routing.
	 *
	 * Enhances history objects with the following methods:
	 *
	 * - listen((error, nextState) => {})
	 * - listenBeforeLeavingRoute(route, (nextLocation) => {})
	 * - match(location, (error, redirectLocation, nextState) => {})
	 * - isActive(pathname, query, indexOnly=false)
	 */
	function useRoutes(createHistory) {
	   true ? (0, _routerWarning2.default)(false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : void 0;
	
	  return function () {
	    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var routes = _ref.routes;
	
	    var options = _objectWithoutProperties(_ref, ['routes']);
	
	    var history = (0, _useQueries2.default)(createHistory)(options);
	    var transitionManager = (0, _createTransitionManager2.default)(history, routes);
	    return _extends({}, history, transitionManager);
	  };
	}
	
	exports.default = useRoutes;
	module.exports = exports['default'];

/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = withRouter;
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _hoistNonReactStatics = __webpack_require__(540);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _PropTypes = __webpack_require__(165);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}
	
	function withRouter(WrappedComponent, options) {
	  var withRef = options && options.withRef;
	
	  var WithRouter = _react2.default.createClass({
	    displayName: 'WithRouter',
	
	    contextTypes: { router: _PropTypes.routerShape },
	    propTypes: { router: _PropTypes.routerShape },
	
	    getWrappedInstance: function getWrappedInstance() {
	      !withRef ?  true ? (0, _invariant2.default)(false, 'To access the wrapped instance, you need to specify ' + '`{ withRef: true }` as the second argument of the withRouter() call.') : (0, _invariant2.default)(false) : void 0;
	
	      return this.wrappedInstance;
	    },
	    render: function render() {
	      var _this = this;
	
	      var router = this.props.router || this.context.router;
	      var props = _extends({}, this.props, { router: router });
	
	      if (withRef) {
	        props.ref = function (c) {
	          _this.wrappedInstance = c;
	        };
	      }
	
	      return _react2.default.createElement(WrappedComponent, props);
	    }
	  });
	
	  WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
	  WithRouter.WrappedComponent = WrappedComponent;
	
	  return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
	}
	module.exports = exports['default'];

/***/ },
/* 664 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	var _slice = Array.prototype.slice;
	exports.loopAsync = loopAsync;
	
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = undefined;
	
	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(_slice.call(arguments));
	      return;
	    }
	
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) {
	      return;
	    }
	
	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }
	
	    sync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }
	
	    sync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }
	
	  next();
	}

/***/ },
/* 665 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(86);
	
	var _PathUtils = __webpack_require__(72);
	
	var _ExecutionEnvironment = __webpack_require__(112);
	
	var _DOMUtils = __webpack_require__(167);
	
	var _DOMStateStorage = __webpack_require__(272);
	
	var _createDOMHistory = __webpack_require__(273);
	
	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
	
	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve URLs.
	 */
	function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ?  true ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;
	
	  var forceRefresh = options.forceRefresh;
	
	  var isSupported = _DOMUtils.supportsHistory();
	  var useRefresh = !isSupported || forceRefresh;
	
	  function getCurrentLocation(historyState) {
	    try {
	      historyState = historyState || window.history.state || {};
	    } catch (e) {
	      historyState = {};
	    }
	
	    var path = _DOMUtils.getWindowPath();
	    var _historyState = historyState;
	    var key = _historyState.key;
	
	    var state = undefined;
	    if (key) {
	      state = _DOMStateStorage.readState(key);
	    } else {
	      state = null;
	      key = history.createKey();
	
	      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null);
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function startPopStateListener(_ref) {
	    var transitionTo = _ref.transitionTo;
	
	    function popStateListener(event) {
	      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.
	
	      transitionTo(getCurrentLocation(event.state));
	    }
	
	    _DOMUtils.addEventListener(window, 'popstate', popStateListener);
	
	    return function () {
	      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
	    };
	  }
	
	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;
	
	    if (action === _Actions.POP) return; // Nothing to do.
	
	    _DOMStateStorage.saveState(key, state);
	
	    var path = (basename || '') + pathname + search + hash;
	    var historyState = {
	      key: key
	    };
	
	    if (action === _Actions.PUSH) {
	      if (useRefresh) {
	        window.location.href = path;
	        return false; // Prevent location update.
	      } else {
	          window.history.pushState(historyState, null, path);
	        }
	    } else {
	      // REPLACE
	      if (useRefresh) {
	        window.location.replace(path);
	        return false; // Prevent location update.
	      } else {
	          window.history.replaceState(historyState, null, path);
	        }
	    }
	  }
	
	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));
	
	  var listenerCount = 0,
	      stopPopStateListener = undefined;
	
	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    var unlisten = history.listenBefore(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }
	
	  function listen(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    var unlisten = history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    history.registerTransitionHook(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);
	
	    if (--listenerCount === 0) stopPopStateListener();
	  }
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}
	
	exports['default'] = createBrowserHistory;
	module.exports = exports['default'];

/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _Actions = __webpack_require__(86);
	
	var _PathUtils = __webpack_require__(72);
	
	function createLocation() {
	  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
	  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];
	
	  if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	  if (typeof action === 'object') {
	     true ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;
	
	    location = _extends({}, location, { state: action });
	
	    action = key || _Actions.POP;
	    key = _fourthArg;
	  }
	
	  var pathname = location.pathname || '/';
	  var search = location.search || '';
	  var hash = location.hash || '';
	  var state = location.state || null;
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	}
	
	exports['default'] = createLocation;
	module.exports = exports['default'];

/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(47);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(24);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _PathUtils = __webpack_require__(72);
	
	var _Actions = __webpack_require__(86);
	
	var _createHistory = __webpack_require__(275);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	}
	
	function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }
	
	  var history = _createHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: saveState,
	    go: go
	  }));
	
	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;
	
	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }
	
	  entries = entries.map(function (entry) {
	    var key = history.createKey();
	
	    if (typeof entry === 'string') return { pathname: entry, key: key };
	
	    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });
	
	     true ?  true ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
	  });
	
	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ?  true ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
	  }
	
	  var storage = createStateStorage(entries);
	
	  function saveState(key, state) {
	    storage[key] = state;
	  }
	
	  function readState(key) {
	    return storage[key];
	  }
	
	  function getCurrentLocation() {
	    var entry = entries[current];
	    var basename = entry.basename;
	    var pathname = entry.pathname;
	    var search = entry.search;
	
	    var path = (basename || '') + pathname + (search || '');
	
	    var key = undefined,
	        state = undefined;
	    if (entry.key) {
	      key = entry.key;
	      state = readState(key);
	    } else {
	      key = history.createKey();
	      state = null;
	      entry.key = key;
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  }
	
	  function go(n) {
	    if (n) {
	      if (!canGo(n)) {
	         true ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
	        return;
	      }
	
	      current += n;
	
	      var currentLocation = getCurrentLocation();
	
	      // change action to POP
	      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	    }
	  }
	
	  function finishTransition(location) {
	    switch (location.action) {
	      case _Actions.PUSH:
	        current += 1;
	
	        // if we are not on the top of stack
	        // remove rest and push new
	        if (current < entries.length) entries.splice(current);
	
	        entries.push(location);
	        saveState(location.key, location.state);
	        break;
	      case _Actions.REPLACE:
	        entries[current] = location;
	        saveState(location.key, location.state);
	        break;
	    }
	  }
	
	  return history;
	}
	
	exports['default'] = createMemoryHistory;
	module.exports = exports['default'];

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(688);
	
	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};
	
	exports.parse = function (str) {
		if (typeof str !== 'string') {
			return {};
		}
	
		str = str.trim().replace(/^(\?|#|&)/, '');
	
		if (!str) {
			return {};
		}
	
		return str.split('&').reduce(function (ret, param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;
	
			key = decodeURIComponent(key);
	
			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);
	
			if (!ret.hasOwnProperty(key)) {
				ret[key] = val;
			} else if (Array.isArray(ret[key])) {
				ret[key].push(val);
			} else {
				ret[key] = [ret[key], val];
			}
	
			return ret;
		}, {});
	};
	
	exports.stringify = function (obj) {
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];
	
			if (val === undefined) {
				return '';
			}
	
			if (val === null) {
				return key;
			}
	
			if (Array.isArray(val)) {
				return val.slice().sort().map(function (val2) {
					return strictUriEncode(key) + '=' + strictUriEncode(val2);
				}).join('&');
			}
	
			return strictUriEncode(key) + '=' + strictUriEncode(val);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _exenv = __webpack_require__(521);
	
	var _exenv2 = _interopRequireDefault(_exenv);
	
	var _shallowequal = __webpack_require__(687);
	
	var _shallowequal2 = _interopRequireDefault(_shallowequal);
	
	module.exports = function withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {
	  if (typeof reducePropsToState !== 'function') {
	    throw new Error('Expected reducePropsToState to be a function.');
	  }
	  if (typeof handleStateChangeOnClient !== 'function') {
	    throw new Error('Expected handleStateChangeOnClient to be a function.');
	  }
	  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {
	    throw new Error('Expected mapStateOnServer to either be undefined or a function.');
	  }
	
	  function getDisplayName(WrappedComponent) {
	    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	  }
	
	  return function wrap(WrappedComponent) {
	    if (typeof WrappedComponent !== 'function') {
	      throw new Error('Expected WrappedComponent to be a React component.');
	    }
	
	    var mountedInstances = [];
	    var state = undefined;
	
	    function emitChange() {
	      state = reducePropsToState(mountedInstances.map(function (instance) {
	        return instance.props;
	      }));
	
	      if (SideEffect.canUseDOM) {
	        handleStateChangeOnClient(state);
	      } else if (mapStateOnServer) {
	        state = mapStateOnServer(state);
	      }
	    }
	
	    var SideEffect = (function (_Component) {
	      _inherits(SideEffect, _Component);
	
	      function SideEffect() {
	        _classCallCheck(this, SideEffect);
	
	        _Component.apply(this, arguments);
	      }
	
	      SideEffect.peek = function peek() {
	        return state;
	      };
	
	      SideEffect.rewind = function rewind() {
	        if (SideEffect.canUseDOM) {
	          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');
	        }
	
	        var recordedState = state;
	        state = undefined;
	        mountedInstances = [];
	        return recordedState;
	      };
	
	      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	        return !_shallowequal2['default'](nextProps, this.props);
	      };
	
	      SideEffect.prototype.componentWillMount = function componentWillMount() {
	        mountedInstances.push(this);
	        emitChange();
	      };
	
	      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {
	        emitChange();
	      };
	
	      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {
	        var index = mountedInstances.indexOf(this);
	        mountedInstances.splice(index, 1);
	        emitChange();
	      };
	
	      SideEffect.prototype.render = function render() {
	        return _react2['default'].createElement(WrappedComponent, this.props);
	      };
	
	      _createClass(SideEffect, null, [{
	        key: 'displayName',
	
	        // Try to use displayName of wrapped component
	        value: 'SideEffect(' + getDisplayName(WrappedComponent) + ')',
	
	        // Expose canUseDOM so tests can monkeypatch it
	        enumerable: true
	      }, {
	        key: 'canUseDOM',
	        value: _exenv2['default'].canUseDOM,
	        enumerable: true
	      }]);
	
	      return SideEffect;
	    })(_react.Component);
	
	    return SideEffect;
	  };
	};

/***/ },
/* 670 */
[694, 74],
/* 671 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOM = __webpack_require__(152);
	
	exports.getReactDOM = function () {
	  return ReactDOM;
	};
	
	if (true) {
	  var ReactPerf;
	  var ReactTestUtils;
	
	  exports.getReactPerf = function () {
	    if (!ReactPerf) {
	      ReactPerf = __webpack_require__(609);
	    }
	    return ReactPerf;
	  };
	
	  exports.getReactTestUtils = function () {
	    if (!ReactTestUtils) {
	      ReactTestUtils = __webpack_require__(616);
	    }
	    return ReactTestUtils;
	  };
	}

/***/ },
/* 672 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(38);
	var propTypesFactory = __webpack_require__(90);
	var PropTypes = propTypesFactory(React.isValidElement);
	
	var ReactTransitionGroup = __webpack_require__(281);
	var ReactCSSTransitionGroupChild = __webpack_require__(673);
	
	function createTransitionTimeoutPropValidator(transitionType) {
	  var timeoutPropName = 'transition' + transitionType + 'Timeout';
	  var enabledPropName = 'transition' + transitionType;
	
	  return function (props) {
	    // If the transition is enabled
	    if (props[enabledPropName]) {
	      // If no timeout duration is provided
	      if (props[timeoutPropName] == null) {
	        return new Error(timeoutPropName + ' wasn\'t supplied to ReactCSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');
	
	        // If the duration isn't a number
	      } else if (typeof props[timeoutPropName] !== 'number') {
	        return new Error(timeoutPropName + ' must be a number (in milliseconds)');
	      }
	    }
	  };
	}
	
	/**
	 * An easy way to perform CSS transitions and animations when a React component
	 * enters or leaves the DOM.
	 * See https://facebook.github.io/react/docs/animation.html#high-level-api-reactcsstransitiongroup
	 */
	
	var ReactCSSTransitionGroup = function (_React$Component) {
	  _inherits(ReactCSSTransitionGroup, _React$Component);
	
	  function ReactCSSTransitionGroup() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ReactCSSTransitionGroup);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {
	      // We need to provide this childFactory so that
	      // ReactCSSTransitionGroupChild can receive updates to name, enter, and
	      // leave while it is leaving.
	      return React.createElement(ReactCSSTransitionGroupChild, {
	        name: _this.props.transitionName,
	        appear: _this.props.transitionAppear,
	        enter: _this.props.transitionEnter,
	        leave: _this.props.transitionLeave,
	        appearTimeout: _this.props.transitionAppearTimeout,
	        enterTimeout: _this.props.transitionEnterTimeout,
	        leaveTimeout: _this.props.transitionLeaveTimeout
	      }, child);
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  ReactCSSTransitionGroup.prototype.render = function render() {
	    return React.createElement(ReactTransitionGroup, _assign({}, this.props, { childFactory: this._wrapChild }));
	  };
	
	  return ReactCSSTransitionGroup;
	}(React.Component);
	
	ReactCSSTransitionGroup.displayName = 'ReactCSSTransitionGroup';
	ReactCSSTransitionGroup.propTypes = {
	  transitionName: ReactCSSTransitionGroupChild.propTypes.name,
	
	  transitionAppear: PropTypes.bool,
	  transitionEnter: PropTypes.bool,
	  transitionLeave: PropTypes.bool,
	  transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),
	  transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),
	  transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')
	};
	ReactCSSTransitionGroup.defaultProps = {
	  transitionAppear: false,
	  transitionEnter: true,
	  transitionLeave: true
	};
	
	
	module.exports = ReactCSSTransitionGroup;

/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(38);
	var ReactAddonsDOMDependencies = __webpack_require__(671);
	
	var propTypesFactory = __webpack_require__(90);
	var PropTypes = propTypesFactory(React.isValidElement);
	
	var CSSCore = __webpack_require__(524);
	var ReactTransitionEvents = __webpack_require__(681);
	
	var onlyChild = __webpack_require__(284);
	
	var TICK = 17;
	
	var ReactCSSTransitionGroupChild = function (_React$Component) {
	  _inherits(ReactCSSTransitionGroupChild, _React$Component);
	
	  function ReactCSSTransitionGroupChild() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, ReactCSSTransitionGroupChild);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._isMounted = false, _this.transition = function (animationType, finishCallback, userSpecifiedDelay) {
	      var node = ReactAddonsDOMDependencies.getReactDOM().findDOMNode(_this);
	
	      if (!node) {
	        if (finishCallback) {
	          finishCallback();
	        }
	        return;
	      }
	
	      var className = _this.props.name[animationType] || _this.props.name + '-' + animationType;
	      var activeClassName = _this.props.name[animationType + 'Active'] || className + '-active';
	      var timeout = null;
	
	      var endListener = function (e) {
	        if (e && e.target !== node) {
	          return;
	        }
	
	        clearTimeout(timeout);
	
	        CSSCore.removeClass(node, className);
	        CSSCore.removeClass(node, activeClassName);
	
	        ReactTransitionEvents.removeEndEventListener(node, endListener);
	
	        // Usually this optional callback is used for informing an owner of
	        // a leave animation and telling it to remove the child.
	        if (finishCallback) {
	          finishCallback();
	        }
	      };
	
	      CSSCore.addClass(node, className);
	
	      // Need to do this to actually trigger a transition.
	      _this.queueClassAndNode(activeClassName, node);
	
	      // If the user specified a timeout delay.
	      if (userSpecifiedDelay) {
	        // Clean-up the animation after the specified delay
	        timeout = setTimeout(endListener, userSpecifiedDelay);
	        _this.transitionTimeouts.push(timeout);
	      } else {
	        // DEPRECATED: this listener will be removed in a future version of react
	        ReactTransitionEvents.addEndEventListener(node, endListener);
	      }
	    }, _this.queueClassAndNode = function (className, node) {
	      _this.classNameAndNodeQueue.push({
	        className: className,
	        node: node
	      });
	
	      if (!_this.timeout) {
	        _this.timeout = setTimeout(_this.flushClassNameAndNodeQueue, TICK);
	      }
	    }, _this.flushClassNameAndNodeQueue = function () {
	      if (_this._isMounted) {
	        _this.classNameAndNodeQueue.forEach(function (obj) {
	          CSSCore.addClass(obj.node, obj.className);
	        });
	      }
	      _this.classNameAndNodeQueue.length = 0;
	      _this.timeout = null;
	    }, _this.componentWillAppear = function (done) {
	      if (_this.props.appear) {
	        _this.transition('appear', done, _this.props.appearTimeout);
	      } else {
	        done();
	      }
	    }, _this.componentWillEnter = function (done) {
	      if (_this.props.enter) {
	        _this.transition('enter', done, _this.props.enterTimeout);
	      } else {
	        done();
	      }
	    }, _this.componentWillLeave = function (done) {
	      if (_this.props.leave) {
	        _this.transition('leave', done, _this.props.leaveTimeout);
	      } else {
	        done();
	      }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  ReactCSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {
	    this.classNameAndNodeQueue = [];
	    this.transitionTimeouts = [];
	  };
	
	  ReactCSSTransitionGroupChild.prototype.componentDidMount = function componentDidMount() {
	    this._isMounted = true;
	  };
	
	  ReactCSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {
	    this._isMounted = false;
	
	    if (this.timeout) {
	      clearTimeout(this.timeout);
	    }
	    this.transitionTimeouts.forEach(function (timeout) {
	      clearTimeout(timeout);
	    });
	
	    this.classNameAndNodeQueue.length = 0;
	  };
	
	  ReactCSSTransitionGroupChild.prototype.render = function render() {
	    return onlyChild(this.props.children);
	  };
	
	  return ReactCSSTransitionGroupChild;
	}(React.Component);
	
	ReactCSSTransitionGroupChild.propTypes = {
	  name: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({
	    enter: PropTypes.string,
	    leave: PropTypes.string,
	    active: PropTypes.string
	  }), PropTypes.shape({
	    enter: PropTypes.string,
	    enterActive: PropTypes.string,
	    leave: PropTypes.string,
	    leaveActive: PropTypes.string,
	    appear: PropTypes.string,
	    appearActive: PropTypes.string
	  })]).isRequired,
	
	  // Once we require timeouts to be specified, we can remove the
	  // boolean flags (appear etc.) and just accept a number
	  // or a bool for the timeout flags (appearTimeout etc.)
	  appear: PropTypes.bool,
	  enter: PropTypes.bool,
	  leave: PropTypes.bool,
	  appearTimeout: PropTypes.number,
	  enterTimeout: PropTypes.number,
	  leaveTimeout: PropTypes.number
	};
	
	
	module.exports = ReactCSSTransitionGroupChild;

/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(670);
	var ReactElement = __webpack_require__(73);
	
	var emptyFunction = __webpack_require__(37);
	var traverseAllChildren = __webpack_require__(285);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 675 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(74),
	    _assign = __webpack_require__(11);
	
	var ReactComponent = __webpack_require__(170);
	var ReactElement = __webpack_require__(73);
	var ReactPropTypeLocationNames = __webpack_require__(280);
	var ReactNoopUpdateQueue = __webpack_require__(171);
	
	var emptyObject = __webpack_require__(68);
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	var MIXINS_KEY = 'mixins';
	
	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: 'DEFINE_MANY',
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: 'DEFINE_MANY',
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: 'DEFINE_MANY',
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: 'DEFINE_MANY_MERGED',
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @required
	   */
	  render: 'DEFINE_ONCE',
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: 'DEFINE_MANY',
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: 'DEFINE_ONCE',
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: 'DEFINE_MANY',
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: 'OVERRIDE_BASE'
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (true) {
	      validateTypeDef(Constructor, childContextTypes, 'childContext');
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (true) {
	      validateTypeDef(Constructor, contextTypes, 'context');
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (true) {
	      validateTypeDef(Constructor, propTypes, 'prop');
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	       true ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === 'OVERRIDE_BASE') ?  true ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ?  true ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (true) {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;
	
	       true ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }
	
	    return;
	  }
	
	  !(typeof spec !== 'function') ?  true ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ?  true ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ?  true ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === 'DEFINE_MANY_MERGED') {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === 'DEFINE_MANY') {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (true) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ?  true ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ?  true ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ?  true ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  true ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (true) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	         true ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	         true ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	var didWarnDeprecated = false;
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    if (true) {
	       true ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;
	      didWarnDeprecated = true;
	    }
	
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (true) {
	         true ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (true) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  true ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (true) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ?  true ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (true) {
	       true ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	       true ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;

/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(73);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (true) {
	  var ReactElementValidator = __webpack_require__(279);
	  createDOMFactory = ReactElementValidator.createFactory;
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),
	
	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};
	
	module.exports = ReactDOMFactories;

/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _require = __webpack_require__(73),
	    isValidElement = _require.isValidElement;
	
	var factory = __webpack_require__(90);
	
	module.exports = factory(isValidElement);

/***/ },
/* 678 */
251,
/* 679 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(11);
	
	var ReactComponent = __webpack_require__(170);
	var ReactNoopUpdateQueue = __webpack_require__(171);
	
	var emptyObject = __webpack_require__(68);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;
	
	module.exports = ReactPureComponent;

/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var flattenChildren = __webpack_require__(684);
	
	var ReactTransitionChildMapping = {
	  /**
	   * Given `this.props.children`, return an object mapping key to child. Just
	   * simple syntactic sugar around flattenChildren().
	   *
	   * @param {*} children `this.props.children`
	   * @param {number=} selfDebugID Optional debugID of the current internal instance.
	   * @return {object} Mapping of key to child
	   */
	  getChildMapping: function (children, selfDebugID) {
	    if (!children) {
	      return children;
	    }
	
	    if (true) {
	      return flattenChildren(children, selfDebugID);
	    }
	
	    return flattenChildren(children);
	  },
	
	  /**
	   * When you're adding or removing children some may be added or removed in the
	   * same render pass. We want to show *both* since we want to simultaneously
	   * animate elements in and out. This function takes a previous set of keys
	   * and a new set of keys and merges them with its best guess of the correct
	   * ordering. In the future we may expose some of the utilities in
	   * ReactMultiChild to make this easy, but for now React itself does not
	   * directly have this concept of the union of prevChildren and nextChildren
	   * so we implement it here.
	   *
	   * @param {object} prev prev children as returned from
	   * `ReactTransitionChildMapping.getChildMapping()`.
	   * @param {object} next next children as returned from
	   * `ReactTransitionChildMapping.getChildMapping()`.
	   * @return {object} a key set that contains all keys in `prev` and all keys
	   * in `next` in a reasonable order.
	   */
	  mergeChildMappings: function (prev, next) {
	    prev = prev || {};
	    next = next || {};
	
	    function getValueForKey(key) {
	      if (next.hasOwnProperty(key)) {
	        return next[key];
	      } else {
	        return prev[key];
	      }
	    }
	
	    // For each key of `next`, the list of keys to insert before that key in
	    // the combined list
	    var nextKeysPending = {};
	
	    var pendingKeys = [];
	    for (var prevKey in prev) {
	      if (next.hasOwnProperty(prevKey)) {
	        if (pendingKeys.length) {
	          nextKeysPending[prevKey] = pendingKeys;
	          pendingKeys = [];
	        }
	      } else {
	        pendingKeys.push(prevKey);
	      }
	    }
	
	    var i;
	    var childMapping = {};
	    for (var nextKey in next) {
	      if (nextKeysPending.hasOwnProperty(nextKey)) {
	        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	          var pendingNextKey = nextKeysPending[nextKey][i];
	          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	        }
	      }
	      childMapping[nextKey] = getValueForKey(nextKey);
	    }
	
	    // Finally, add the keys which didn't appear before any key in `next`
	    for (i = 0; i < pendingKeys.length; i++) {
	      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	    }
	
	    return childMapping;
	  }
	};
	
	module.exports = ReactTransitionChildMapping;

/***/ },
/* 681 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(18);
	
	var getVendorPrefixedEventName = __webpack_require__(261);
	
	var endEvents = [];
	
	function detectEvents() {
	  var animEnd = getVendorPrefixedEventName('animationend');
	  var transEnd = getVendorPrefixedEventName('transitionend');
	
	  if (animEnd) {
	    endEvents.push(animEnd);
	  }
	
	  if (transEnd) {
	    endEvents.push(transEnd);
	  }
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  detectEvents();
	}
	
	// We use the raw {add|remove}EventListener() call because EventListener
	// does not know how to remove event listeners and we really should
	// clean up. Also, these events are not triggered in older browsers
	// so we should be A-OK here.
	
	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}
	
	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}
	
	var ReactTransitionEvents = {
	  addEndEventListener: function (node, eventListener) {
	    if (endEvents.length === 0) {
	      // If CSS transitions are not supported, trigger an "end animation"
	      // event immediately.
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },
	
	  removeEndEventListener: function (node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};
	
	module.exports = ReactTransitionEvents;

/***/ },
/* 682 */
254,
/* 683 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(74);
	
	var ReactPropTypeLocationNames = __webpack_require__(280);
	var ReactPropTypesSecret = __webpack_require__(678);
	
	var invariant = __webpack_require__(3);
	var warning = __webpack_require__(4);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ?  true ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	       true ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (true) {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(26);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }
	
	         true ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(80)))

/***/ },
/* 684 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(277);
	var traverseAllChildren = __webpack_require__(285);
	var warning = __webpack_require__(4);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(26);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (true) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(26);
	      }
	      if (!keyUnique) {
	         true ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (true) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(80)))

/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;
	
	var _isPlainObject = __webpack_require__(554);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(689);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/zenparsing/es-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ },
/* 686 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */
	
	!(function(global) {
	  "use strict";
	
	  var Op = Object.prototype;
	  var hasOwn = Op.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	
	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }
	
	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
	
	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	    var generator = Object.create(protoGenerator.prototype);
	    var context = new Context(tryLocsList || []);
	
	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);
	
	    return generator;
	  }
	  runtime.wrap = wrap;
	
	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }
	
	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";
	
	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};
	
	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}
	
	  // This is a polyfill for %IteratorPrototype% for environments that
	  // don't natively support it.
	  var IteratorPrototype = {};
	  IteratorPrototype[iteratorSymbol] = function () {
	    return this;
	  };
	
	  var getProto = Object.getPrototypeOf;
	  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
	  if (NativeIteratorPrototype &&
	      NativeIteratorPrototype !== Op &&
	      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
	    // This environment has a native %IteratorPrototype%; use it instead
	    // of the polyfill.
	    IteratorPrototype = NativeIteratorPrototype;
	  }
	
	  var Gp = GeneratorFunctionPrototype.prototype =
	    Generator.prototype = Object.create(IteratorPrototype);
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] =
	    GeneratorFunction.displayName = "GeneratorFunction";
	
	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }
	
	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };
	
	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };
	
	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `hasOwn.call(value, "__await")` to determine if the yielded value is
	  // meant to be awaited.
	  runtime.awrap = function(arg) {
	    return { __await: arg };
	  };
	
	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value &&
	            typeof value === "object" &&
	            hasOwn.call(value, "__await")) {
	          return Promise.resolve(value.__await).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }
	
	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }
	
	    if (typeof process === "object" && process.domain) {
	      invoke = process.domain.bind(invoke);
	    }
	
	    var previousPromise;
	
	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }
	
	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }
	
	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }
	
	  defineIteratorMethods(AsyncIterator.prototype);
	  runtime.AsyncIterator = AsyncIterator;
	
	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );
	
	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };
	
	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;
	
	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }
	
	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }
	
	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }
	
	      context.method = method;
	      context.arg = arg;
	
	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          var delegateResult = maybeInvokeDelegate(delegate, context);
	          if (delegateResult) {
	            if (delegateResult === ContinueSentinel) continue;
	            return delegateResult;
	          }
	        }
	
	        if (context.method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = context.arg;
	
	        } else if (context.method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw context.arg;
	          }
	
	          context.dispatchException(context.arg);
	
	        } else if (context.method === "return") {
	          context.abrupt("return", context.arg);
	        }
	
	        state = GenStateExecuting;
	
	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;
	
	          if (record.arg === ContinueSentinel) {
	            continue;
	          }
	
	          return {
	            value: record.arg,
	            done: context.done
	          };
	
	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(context.arg) call above.
	          context.method = "throw";
	          context.arg = record.arg;
	        }
	      }
	    };
	  }
	
	  // Call delegate.iterator[context.method](context.arg) and handle the
	  // result, either by returning a { value, done } result from the
	  // delegate iterator, or by modifying context.method and context.arg,
	  // setting context.delegate to null, and returning the ContinueSentinel.
	  function maybeInvokeDelegate(delegate, context) {
	    var method = delegate.iterator[context.method];
	    if (method === undefined) {
	      // A .throw or .return when the delegate iterator has no .throw
	      // method always terminates the yield* loop.
	      context.delegate = null;
	
	      if (context.method === "throw") {
	        if (delegate.iterator.return) {
	          // If the delegate iterator has a return method, give it a
	          // chance to clean up.
	          context.method = "return";
	          context.arg = undefined;
	          maybeInvokeDelegate(delegate, context);
	
	          if (context.method === "throw") {
	            // If maybeInvokeDelegate(context) changed context.method from
	            // "return" to "throw", let that override the TypeError below.
	            return ContinueSentinel;
	          }
	        }
	
	        context.method = "throw";
	        context.arg = new TypeError(
	          "The iterator does not provide a 'throw' method");
	      }
	
	      return ContinueSentinel;
	    }
	
	    var record = tryCatch(method, delegate.iterator, context.arg);
	
	    if (record.type === "throw") {
	      context.method = "throw";
	      context.arg = record.arg;
	      context.delegate = null;
	      return ContinueSentinel;
	    }
	
	    var info = record.arg;
	
	    if (! info) {
	      context.method = "throw";
	      context.arg = new TypeError("iterator result is not an object");
	      context.delegate = null;
	      return ContinueSentinel;
	    }
	
	    if (info.done) {
	      // Assign the result of the finished delegate to the temporary
	      // variable specified by delegate.resultName (see delegateYield).
	      context[delegate.resultName] = info.value;
	
	      // Resume execution at the desired location (see delegateYield).
	      context.next = delegate.nextLoc;
	
	      // If context.method was "throw" but the delegate handled the
	      // exception, let the outer generator proceed normally. If
	      // context.method was "next", forget context.arg since it has been
	      // "consumed" by the delegate iterator. If context.method was
	      // "return", allow the original .return call to continue in the
	      // outer generator.
	      if (context.method !== "return") {
	        context.method = "next";
	        context.arg = undefined;
	      }
	
	    } else {
	      // Re-yield the result returned by the delegate method.
	      return info;
	    }
	
	    // The delegate iterator is finished, so forget it and continue with
	    // the outer generator.
	    context.delegate = null;
	    return ContinueSentinel;
	  }
	
	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);
	
	  Gp[toStringTagSymbol] = "Generator";
	
	  Gp.toString = function() {
	    return "[object Generator]";
	  };
	
	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };
	
	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }
	
	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }
	
	    this.tryEntries.push(entry);
	  }
	
	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }
	
	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }
	
	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();
	
	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }
	
	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };
	
	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }
	
	      if (typeof iterable.next === "function") {
	        return iterable;
	      }
	
	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }
	
	          next.value = undefined;
	          next.done = true;
	
	          return next;
	        };
	
	        return next.next = next;
	      }
	    }
	
	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;
	
	  function doneResult() {
	    return { value: undefined, done: true };
	  }
	
	  Context.prototype = {
	    constructor: Context,
	
	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;
	
	      this.method = "next";
	      this.arg = undefined;
	
	      this.tryEntries.forEach(resetTryEntry);
	
	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },
	
	    stop: function() {
	      this.done = true;
	
	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }
	
	      return this.rval;
	    },
	
	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }
	
	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	
	        if (caught) {
	          // If the dispatched exception was caught by a catch block,
	          // then let that catch block handle the exception normally.
	          context.method = "next";
	          context.arg = undefined;
	        }
	
	        return !! caught;
	      }
	
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;
	
	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }
	
	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");
	
	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }
	
	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },
	
	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }
	
	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }
	
	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;
	
	      if (finallyEntry) {
	        this.method = "next";
	        this.next = finallyEntry.finallyLoc;
	        return ContinueSentinel;
	      }
	
	      return this.complete(record);
	    },
	
	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }
	
	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = this.arg = record.arg;
	        this.method = "return";
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	
	      return ContinueSentinel;
	    },
	
	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },
	
	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }
	
	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },
	
	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };
	
	      if (this.method === "next") {
	        // Deliberately forget the last sent value so that we don't
	        // accidentally pass it on to the delegate.
	        this.arg = undefined;
	      }
	
	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(80)))

/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var fetchKeys = __webpack_require__(545);
	
	module.exports = function shallowEqual(objA, objB, compare, compareContext) {
	
	    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
	
	    if (ret !== void 0) {
	        return !!ret;
	    }
	
	    if (objA === objB) {
	        return true;
	    }
	
	    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	        return false;
	    }
	
	    var keysA = fetchKeys(objA);
	    var keysB = fetchKeys(objB);
	
	    var len = keysA.length;
	    if (len !== keysB.length) {
	        return false;
	    }
	
	    compareContext = compareContext || null;
	
	    // Test for A's keys different from B.
	    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
	    for (var i = 0; i < len; i++) {
	        var key = keysA[i];
	        if (!bHasOwnProperty(key)) {
	            return false;
	        }
	        var valueA = objA[key];
	        var valueB = objB[key];
	
	        var _ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
	        if (_ret === false || _ret === void 0 && valueA !== valueB) {
	            return false;
	        }
	    }
	
	    return true;
	};

/***/ },
/* 688 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(690);


/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ponyfill = __webpack_require__(691);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root; /* global window */
	
	
	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(693)(module)))

/***/ },
/* 691 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ },
/* 692 */
47,
/* 693 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 694 */
/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(__webpack_module_template_argument_0__);
	
	var invariant = __webpack_require__(3);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  true ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};
	
	module.exports = PooledClass;

/***/ }
/******/ ])))
});
;
//# sourceMappingURL=bundle.js.map